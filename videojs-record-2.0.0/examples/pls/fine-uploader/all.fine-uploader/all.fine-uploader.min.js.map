{"version":3,"sources":["?","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/traditional/traditional.form.upload.handler.js","../client/js/traditional/traditional.xhr.upload.handler.js","../client/js/traditional/all-chunks-done.ajax.requester.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js","../client/js/third-party/crypto-js/core.js","../client/js/third-party/crypto-js/enc-base64.js","../client/js/third-party/crypto-js/hmac.js","../client/js/third-party/crypto-js/sha1.js","../client/js/third-party/crypto-js/sha256.js","../client/js/third-party/crypto-js/lib-typedarrays.js","../client/js/s3/util.js","../client/js/non-traditional-common/uploader.basic.api.js","../client/js/s3/uploader.basic.js","../client/js/s3/request-signer.js","../client/js/uploadsuccess.ajax.requester.js","../client/js/s3/multipart.initiate.ajax.requester.js","../client/js/s3/multipart.complete.ajax.requester.js","../client/js/s3/multipart.abort.ajax.requester.js","../client/js/s3/s3.xhr.upload.handler.js","../client/js/s3/s3.form.upload.handler.js","../client/js/s3/uploader.js","../client/js/azure/util.js","../client/js/azure/uploader.basic.js","../client/js/azure/azure.xhr.upload.handler.js","../client/js/azure/get-sas.js","../client/js/azure/rest/delete-blob.js","../client/js/azure/rest/put-blob.js","../client/js/azure/rest/put-block.js","../client/js/azure/rest/put-block-list.js","../client/js/azure/uploader.js"],"names":["global","qq","element","hide","style","display","this","attach","type","fn","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","name","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","each","idx","val","push","getFirstByClass","children","child","firstChild","nodeType","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","exec","getAttribute","undefined","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","data","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","length","Uint8Array","character","charCodeAt","log","message","level","console","isObject","variable","Object","prototype","toString","call","isFunction","isArray","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","args","Array","slice","arguments","newStr","nextIdxToReplace","substring","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","toLowerCase","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","error","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","prop","override","target","sourceFn","super_","source","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","retVal","Storage","key","getItem","charAt","bind","oldFunc","context","newArgs","concat","apply","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome21OrHigher","match","isChrome14OrHigher","isCrossOriginXhrSupported","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","options","title","self","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","index","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onBeforeStatusChange","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","params","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","_options","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","debug","pauseUpload","removeFileRef","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","callbacks","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","toUpperCase","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","namespace","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","xhr","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkSuccess","onResume","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","enableAuto","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","filenameParam","forceMultipart","paramsInBody","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partIndex","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","recordsExpireIn","resuming","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","traditional","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","isResumable","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","_getLocalStorageId","_getMimeType","_getPersistableData","ceil","_markNotResumable","localStorageId","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","el","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","getIframeContentJson","doc","innerHtml","contentWindow","nodeValue","createForm","responseFromMessage","multipart","addChunkingSpecificParams","allChunksDoneRequester","AllChunksDoneAjaxRequester","createReadyStateChangedHandler","onUploadOrChunkComplete","getChunksCompleteParams","isErrorUploadResponse","parseResponse","sendChunksCompleteRequest","complete","setParamsAndGetEntityToSend","setUploadHeaders","extraHeaders","toSend","promises","endpointHandler","DragAndDrop","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","droppedFiles","fileError","isDirectory","getFilesInDirectory","entriesLeft","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","relatedTarget","y","setupDragDrop","dropZones","dropZoneElements","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","placeholders","waitUntilResponse","FineUploader","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateHtml","showThumbnails","serverScale","fileBatch","content","createDocumentFragment","map","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","uploader","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","update","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListHtml","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus","CryptoJS","C","C_lib","lib","Base","F","overrides","subtype","mixIn","init","$super","instance","properties","propertyName","clone","WordArray","words","sigBytes","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","nBytes","C_enc","enc","hexChars","bite","hexStr","hexStrLength","Latin1","latin1Chars","fromCharCode","latin1Str","latin1StrLength","Utf8","decodeURIComponent","escape","utf8Str","unescape","BufferedBlockAlgorithm","_data","_nDataBytes","_append","_process","doFlush","dataWords","dataSigBytes","blockSize","blockSizeBytes","nBlocksReady","_minBufferSize","nWordsReady","nBytesReady","min","_doProcessBlock","processedWords","C_algo","Hasher","cfg","_doReset","messageUpdate","_doFinalize","_createHelper","hasher","_createHmacHelper","HMAC","algo","Base64","_map","base64Chars","byte1","byte2","byte3","triplet","j","paddingChar","base64Str","base64StrLength","paddingIndex","bits1","bits2","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","W","SHA1","_hash","M","H","n","t","nBitsTotal","nBitsLeft","floor","HmacSHA1","K","isPrime","sqrtN","factor","getFractionalBits","nPrime","SHA256","f","g","h","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","t1","t2","HmacSHA256","superInit","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","byteOffset","byteLength","typedArrayByteLength","s3","util","ALGORITHM_PARAM_NAME","AWS_PARAM_PREFIX","CREDENTIAL_PARAM_NAME","DATE_PARAM_NAME","REDUCED_REDUNDANCY_PARAM_NAME","REDUCED_REDUNDANCY_PARAM_VALUE","SERVER_SIDE_ENCRYPTION_PARAM_NAME","SERVER_SIDE_ENCRYPTION_PARAM_VALUE","SESSION_TOKEN_PARAM_NAME","V4_ALGORITHM_PARAM_VALUE","V4_SIGNATURE_PARAM_NAME","CASE_SENSITIVE_PARAM_NAMES","UNSIGNABLE_REST_HEADER_NAMES","UNPREFIXED_PARAM_NAMES","getBucket","bucket","patterns","pattern","_getPrefixedParamName","getPolicy","policy","conditions","date","drift","clockDrift","accessKey","acl","expectedStatus","sessionToken","successRedirectUrl","getSuccessRedirectAbsoluteUrl","minFileSize","maxFileSize","reducedRedundancy","region","serverSideEncryption","signatureVersion","expiration","getPolicyExpirationDate","Content-Type","success_action_status","success_action_redirect","getV4CredentialsString","getV4PolicyDate","awsParamName","enforceSizeLimits","refreshPolicyCredentials","newSessionToken","sessionTokenFound","oldCondIdx","oldCondObj","oldCondName","oldCondVal","generateAwsParams","signPolicyCallback","policyJson","awsParams","customParams","AWSAccessKeyId","policyAndSignature","updatedAccessKey","updatedSessionToken","signature","minSize","adjustedMinSize","adjustedMaxSize","adjustedDate","getPolicyDate","getCredentialsDate","getUTCFullYear","getUTCMonth","getUTCDate","_minutesToAdd_","pad","minutesToAdd","setMinutes","getMinutes","toISOString","number","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","parseIframeResponse","queryString","search","etag","targetAnchorContainer","encodeQueryStringParam","percentEncoded","uriEscape","uriEscapePath","nonTraditionalBasePublicApi","setUploadSuccessParams","_uploadSuccessParamsStore","setUploadSuccessEndpoint","_uploadSuccessEndpointStore","nonTraditionalBasePrivateApi","submitSuccessRequest","successAjaxRequester","onCompleteArgs","successEndpoint","successCustomHeaders","uploadSuccess","successMethod","uploadSuccessParams","fileParams","onSuccessFromServer","successRequestResult","_failedSuccessRequestCallbacks","onFailureFromServer","UploadSuccessAjaxRequester","_getEndpointSpecificParams","sendSuccessRequest","successRequestCallback","objectProperties","host","credentials","secretKey","iframeSupport","localBlankPagePath","onCredentialsExpired","setCredentials","_currentCredentials","_aclStore","_cannedKeys","_cannedBuckets","_buckets","_hosts","getKey","ignoreEmpty","setAcl","aclStore","_determineBucket","getHost","_determineHost","getKeyName","_determineKeyName","maxSizeLimit","oldParams","modifiedParams","paramName","credentialsProvider","onExpired","updateCredentials","_determineObjectPropertyValue","property","maybe","keynameLogic","onGetKeynameFailure","onGetKeynameSuccess","keyname","keynameToUse","_handleKeynameFunction","keynameFunc","successCallback","failureCallback","getResponseHeader","s3Key","s3Bucket","RequestSigner","handleSignatureReceived","responseJson","pendingSignatureData","pendingSignatures","signatureConstructor","invalid","expectingPolicy","generateHeaders","getStringToSignArtifacts","requestInfo","endOfUrl","signatureSpec","toSign","headerNames","headersStr","generateStringToSign","contentMd5","headerIndexesToRemove","headerName","headerIdx","hashedContent","v2","getStringToSign","v4","signedHeaders","getSignedHeaders","hashed","toSignRaw","raw","thisSignatureRequester","REQUEST_TYPE","MULTIPART_ABORT","uploadId","MULTIPART_INITIATE","MULTIPART_COMPLETE","MULTIPART_UPLOAD","partNum","getEncodedHashedPayload","Host","determineSignatureClientSide","toBeSigned","signatureEffort","updatedHeaders","getHeaders","getToSign","signatureArtifacts","signApiRequest","stringToSign","signPolicy","Authorization","getRequestDate","getEndOfUrl","headersWordArray","headersHmacSha1","policyStr","policyWordArray","base64Policy","policyHmacSha1","policyHmacSha1Base64","getCanonicalQueryString","endOfUri","encodedQueryParams","encodedQueryParamNames","queryStrings","queryParamIdx","canonicalQueryString","nameAndVal","paramVal","forEach","encodedQueryParamName","getCanonicalRequest","getCanonicalUri","onloadend","DONE","getScope","canonicalRequest","hashedRequest","scope","dateKey","dateRegionKey","dateRegionServiceKey","signingKey","headersPattern","matches","credentialPattern","credentialCondition","credential","condition","getSignature","queryParams","stringToSignRaw","constructStringToSign","artifacts","theHeaders","withUploadId","theUploadId","withContent","theContent","withContentType","theContentType","withPartNum","thePartNum","toUTCString","_artifacts_","handleSuccessResponse","parsedResponse","pendingRequests","successIndicator","failureIndicator","InitiateMultipartAjaxRequester","getSignatureAjaxRequester","getContentType","handleInitiateRequestComplete","uploadIdElements","messageElements","pendingInitiateRequests","domParser","DOMParser","responseDoc","parseFromString","CompleteMultipartAjaxRequester","handleCompleteRequestComplete","pendingCompleteRequests","bucketEls","keyEls","getCompleteRequestBody","etagEntries","implementation","createDocument","etagEntry","partEl","partNumEl","partNumTextEl","createTextNode","etagTextEl","etagEl","XMLSerializer","serializeToString","AbortMultipartAjaxRequester","handleAbortRequestComplete","awsErrorMsg","errorEls","onGetBucket","onGetHost","onGetKeyName","combine","etagMap","etags","requesters","completeMultipart","initHeaders","urlSafe","restSignature","put","domain","track","hasContentType","setup","uploadIdPromise","initiateMultipart","abortMultipart","policySignature","initParams","cachedBucket","cachedHost","shouldReset","keyName","encodedKey","parsedErrorProps","parseError","awsResponseXml","codeEls","messageEls","parsedDoc","errorDetails","existedInLocalStorage","isValidResponse","responseData","handleFinishedUpload","handleUpload","azure","AZURE_PARAM_PREFIX","_paramNameMatchesAzureParameter","getParamsAsHeaders","parseAzureError","codeTag","messageTag","errorTag","blobProperties","_cannedBlobNames","getBlobName","onGetBlobName","_determineBlobName","deleteBlob","_deleteBlob","blobNameOptionValue","fileExtension","blobNameToUse","blobName","relatedToCancel","deleteBlobSasUri","blobUriStore","deleteFileEndpointStore","getSasSuccess","sasUri","getSasFailure","DeleteBlob","GetSas","restRequestVerb","combineChunks","getSignedUrl","mimeType","blockIdEntries","putBlockList","determineBlobUrl","containerUrl","getBlobNameSuccess","getBlobNameFailure","getSasId","getSasXhr","determineBlobUrlSuccess","blobUrl","getSasForPutBlobOrBlock","determineBlobUrlFailure","azureError","minFileSizeForChunking","getBlobMetadata","putBlob","PutBlob","putBlock","PutBlock","PutBlockList","blockIdEntry","chunkingData","sasResponseReceived","requestPromises","blobUri","requestPromise","restVerb","bloburi","codes","endpoints","createBlockId","zeros","digits","paddedPartNum","btoa","blockId","createRequestBody","latestEl","latestTextEl","fileMimeType","registerXhrCallback","blockIdsXml","x-ms-blob-content-type"],"mappings":"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","file":"all.fine-uploader.min.js","sourcesContent":[null,"/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\r\n/* jshint -W079 */\r\nvar qq = function(element) {\r\n    \"use strict\";\r\n\r\n    return {\r\n        hide: function() {\r\n            element.style.display = \"none\";\r\n            return this;\r\n        },\r\n\r\n        /** Returns the function which detaches attached event */\r\n        attach: function(type, fn) {\r\n            if (element.addEventListener) {\r\n                element.addEventListener(type, fn, false);\r\n            } else if (element.attachEvent) {\r\n                element.attachEvent(\"on\" + type, fn);\r\n            }\r\n            return function() {\r\n                qq(element).detach(type, fn);\r\n            };\r\n        },\r\n\r\n        detach: function(type, fn) {\r\n            if (element.removeEventListener) {\r\n                element.removeEventListener(type, fn, false);\r\n            } else if (element.attachEvent) {\r\n                element.detachEvent(\"on\" + type, fn);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        contains: function(descendant) {\r\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\r\n            // says a `null` (or ostensibly `undefined`) parameter\r\n            // passed into `Node.contains` should result in a false return value.\r\n            // IE7 throws an exception if the parameter is `undefined` though.\r\n            if (!descendant) {\r\n                return false;\r\n            }\r\n\r\n            // compareposition returns false in this case\r\n            if (element === descendant) {\r\n                return true;\r\n            }\r\n\r\n            if (element.contains) {\r\n                return element.contains(descendant);\r\n            } else {\r\n                /*jslint bitwise: true*/\r\n                return !!(descendant.compareDocumentPosition(element) & 8);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Insert this element before elementB.\r\n         */\r\n        insertBefore: function(elementB) {\r\n            elementB.parentNode.insertBefore(element, elementB);\r\n            return this;\r\n        },\r\n\r\n        remove: function() {\r\n            element.parentNode.removeChild(element);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets styles for an element.\r\n         * Fixes opacity in IE6-8.\r\n         */\r\n        css: function(styles) {\r\n            /*jshint eqnull: true*/\r\n            if (element.style == null) {\r\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\r\n            }\r\n\r\n            /*jshint -W116*/\r\n            if (styles.opacity != null) {\r\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\r\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\r\n                }\r\n            }\r\n            qq.extend(element.style, styles);\r\n\r\n            return this;\r\n        },\r\n\r\n        hasClass: function(name, considerParent) {\r\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\r\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\r\n        },\r\n\r\n        addClass: function(name) {\r\n            if (!qq(element).hasClass(name)) {\r\n                element.className += \" \" + name;\r\n            }\r\n            return this;\r\n        },\r\n\r\n        removeClass: function(name) {\r\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\r\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\r\n            return this;\r\n        },\r\n\r\n        getByClass: function(className, first) {\r\n            var candidates,\r\n                result = [];\r\n\r\n            if (first && element.querySelector) {\r\n                return element.querySelector(\".\" + className);\r\n            }\r\n            else if (element.querySelectorAll) {\r\n                return element.querySelectorAll(\".\" + className);\r\n            }\r\n\r\n            candidates = element.getElementsByTagName(\"*\");\r\n\r\n            qq.each(candidates, function(idx, val) {\r\n                if (qq(val).hasClass(className)) {\r\n                    result.push(val);\r\n                }\r\n            });\r\n            return first ? result[0] : result;\r\n        },\r\n\r\n        getFirstByClass: function(className) {\r\n            return qq(element).getByClass(className, true);\r\n        },\r\n\r\n        children: function() {\r\n            var children = [],\r\n                child = element.firstChild;\r\n\r\n            while (child) {\r\n                if (child.nodeType === 1) {\r\n                    children.push(child);\r\n                }\r\n                child = child.nextSibling;\r\n            }\r\n\r\n            return children;\r\n        },\r\n\r\n        setText: function(text) {\r\n            element.innerText = text;\r\n            element.textContent = text;\r\n            return this;\r\n        },\r\n\r\n        clearText: function() {\r\n            return qq(element).setText(\"\");\r\n        },\r\n\r\n        // Returns true if the attribute exists on the element\r\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\r\n        hasAttribute: function(attrName) {\r\n            var attrVal;\r\n\r\n            if (element.hasAttribute) {\r\n\r\n                if (!element.hasAttribute(attrName)) {\r\n                    return false;\r\n                }\r\n\r\n                /*jshint -W116*/\r\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\r\n            }\r\n            else {\r\n                attrVal = element[attrName];\r\n\r\n                if (attrVal === undefined) {\r\n                    return false;\r\n                }\r\n\r\n                /*jshint -W116*/\r\n                return (/^false$/i).exec(attrVal) == null;\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.canvasToBlob = function(canvas, mime, quality) {\r\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\r\n    };\r\n\r\n    qq.dataUriToBlob = function(dataUri) {\r\n        var arrayBuffer, byteString,\r\n            createBlob = function(data, mime) {\r\n                var BlobBuilder = window.BlobBuilder ||\r\n                        window.WebKitBlobBuilder ||\r\n                        window.MozBlobBuilder ||\r\n                        window.MSBlobBuilder,\r\n                    blobBuilder = BlobBuilder && new BlobBuilder();\r\n\r\n                if (blobBuilder) {\r\n                    blobBuilder.append(data);\r\n                    return blobBuilder.getBlob(mime);\r\n                }\r\n                else {\r\n                    return new Blob([data], {type: mime});\r\n                }\r\n            },\r\n            intArray, mimeString;\r\n\r\n        // convert base64 to raw binary data held in a string\r\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\r\n            byteString = atob(dataUri.split(\",\")[1]);\r\n        }\r\n        else {\r\n            byteString = decodeURI(dataUri.split(\",\")[1]);\r\n        }\r\n\r\n        // extract the MIME\r\n        mimeString = dataUri.split(\",\")[0]\r\n            .split(\":\")[1]\r\n            .split(\";\")[0];\r\n\r\n        // write the bytes of the binary string to an ArrayBuffer\r\n        arrayBuffer = new ArrayBuffer(byteString.length);\r\n        intArray = new Uint8Array(arrayBuffer);\r\n        qq.each(byteString, function(idx, character) {\r\n            intArray[idx] = character.charCodeAt(0);\r\n        });\r\n\r\n        return createBlob(arrayBuffer, mimeString);\r\n    };\r\n\r\n    qq.log = function(message, level) {\r\n        if (window.console) {\r\n            if (!level || level === \"info\") {\r\n                window.console.log(message);\r\n            }\r\n            else\r\n            {\r\n                if (window.console[level]) {\r\n                    window.console[level](message);\r\n                }\r\n                else {\r\n                    window.console.log(\"<\" + level + \"> \" + message);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    qq.isObject = function(variable) {\r\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\r\n    };\r\n\r\n    qq.isFunction = function(variable) {\r\n        return typeof (variable) === \"function\";\r\n    };\r\n\r\n    /**\r\n     * Check the type of a value.  Is it an \"array\"?\r\n     *\r\n     * @param value value to test.\r\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\r\n     */\r\n    qq.isArray = function(value) {\r\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\r\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\r\n    };\r\n\r\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\r\n    qq.isItemList = function(maybeItemList) {\r\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\r\n    };\r\n\r\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\r\n    // object that is associated with collections of Nodes.\r\n    qq.isNodeList = function(maybeNodeList) {\r\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\r\n            // If `HTMLCollection` is the actual type of the object, we must determine this\r\n            // by checking for expected properties/methods on the object\r\n            (maybeNodeList.item && maybeNodeList.namedItem);\r\n    };\r\n\r\n    qq.isString = function(maybeString) {\r\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\r\n    };\r\n\r\n    qq.trimStr = function(string) {\r\n        if (String.prototype.trim) {\r\n            return string.trim();\r\n        }\r\n\r\n        return string.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n\r\n    /**\r\n     * @param str String to format.\r\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\r\n     */\r\n    qq.format = function(str) {\r\n\r\n        var args =  Array.prototype.slice.call(arguments, 1),\r\n            newStr = str,\r\n            nextIdxToReplace = newStr.indexOf(\"{}\");\r\n\r\n        qq.each(args, function(idx, val) {\r\n            var strBefore = newStr.substring(0, nextIdxToReplace),\r\n                strAfter = newStr.substring(nextIdxToReplace + 2);\r\n\r\n            newStr = strBefore + val + strAfter;\r\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\r\n\r\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\r\n            if (nextIdxToReplace < 0) {\r\n                return false;\r\n            }\r\n        });\r\n\r\n        return newStr;\r\n    };\r\n\r\n    qq.isFile = function(maybeFile) {\r\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\r\n    };\r\n\r\n    qq.isFileList = function(maybeFileList) {\r\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\r\n    };\r\n\r\n    qq.isFileOrInput = function(maybeFileOrInput) {\r\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\r\n    };\r\n\r\n    qq.isInput = function(maybeInput, notFile) {\r\n        var evaluateType = function(type) {\r\n            var normalizedType = type.toLowerCase();\r\n\r\n            if (notFile) {\r\n                return normalizedType !== \"file\";\r\n            }\r\n\r\n            return normalizedType === \"file\";\r\n        };\r\n\r\n        if (window.HTMLInputElement) {\r\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\r\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (maybeInput.tagName) {\r\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\r\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    qq.isBlob = function(maybeBlob) {\r\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    qq.isXhrUploadSupported = function() {\r\n        var input = document.createElement(\"input\");\r\n        input.type = \"file\";\r\n\r\n        return (\r\n            input.multiple !== undefined &&\r\n                typeof File !== \"undefined\" &&\r\n                typeof FormData !== \"undefined\" &&\r\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\r\n    };\r\n\r\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\r\n    qq.createXhrInstance = function() {\r\n        if (window.XMLHttpRequest) {\r\n            return new XMLHttpRequest();\r\n        }\r\n\r\n        try {\r\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\r\n        }\r\n        catch (error) {\r\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\r\n            return null;\r\n        }\r\n    };\r\n\r\n    qq.isFolderDropSupported = function(dataTransfer) {\r\n        return dataTransfer.items &&\r\n            dataTransfer.items.length > 0 &&\r\n            dataTransfer.items[0].webkitGetAsEntry;\r\n    };\r\n\r\n    qq.isFileChunkingSupported = function() {\r\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\r\n            qq.isXhrUploadSupported() &&\r\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\r\n    };\r\n\r\n    qq.sliceBlob = function(fileOrBlob, start, end) {\r\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\r\n\r\n        return slicer.call(fileOrBlob, start, end);\r\n    };\r\n\r\n    qq.arrayBufferToHex = function(buffer) {\r\n        var bytesAsHex = \"\",\r\n            bytes = new Uint8Array(buffer);\r\n\r\n        qq.each(bytes, function(idx, byt) {\r\n            var byteAsHexStr = byt.toString(16);\r\n\r\n            if (byteAsHexStr.length < 2) {\r\n                byteAsHexStr = \"0\" + byteAsHexStr;\r\n            }\r\n\r\n            bytesAsHex += byteAsHexStr;\r\n        });\r\n\r\n        return bytesAsHex;\r\n    };\r\n\r\n    qq.readBlobToHex = function(blob, startOffset, length) {\r\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\r\n            fileReader = new FileReader(),\r\n            promise = new qq.Promise();\r\n\r\n        fileReader.onload = function() {\r\n            promise.success(qq.arrayBufferToHex(fileReader.result));\r\n        };\r\n\r\n        fileReader.onerror = promise.failure;\r\n\r\n        fileReader.readAsArrayBuffer(initialBlob);\r\n\r\n        return promise;\r\n    };\r\n\r\n    qq.extend = function(first, second, extendNested) {\r\n        qq.each(second, function(prop, val) {\r\n            if (extendNested && qq.isObject(val)) {\r\n                if (first[prop] === undefined) {\r\n                    first[prop] = {};\r\n                }\r\n                qq.extend(first[prop], val, true);\r\n            }\r\n            else {\r\n                first[prop] = val;\r\n            }\r\n        });\r\n\r\n        return first;\r\n    };\r\n\r\n    /**\r\n     * Allow properties in one object to override properties in another,\r\n     * keeping track of the original values from the target object.\r\n     *\r\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\r\n     *\r\n     * @param target Update properties in this object from some source\r\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\r\n     * @returns {object} The target object\r\n     */\r\n    qq.override = function(target, sourceFn) {\r\n        var super_ = {},\r\n            source = sourceFn(super_);\r\n\r\n        qq.each(source, function(srcPropName, srcPropVal) {\r\n            if (target[srcPropName] !== undefined) {\r\n                super_[srcPropName] = target[srcPropName];\r\n            }\r\n\r\n            target[srcPropName] = srcPropVal;\r\n        });\r\n\r\n        return target;\r\n    };\r\n\r\n    /**\r\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\r\n     */\r\n    qq.indexOf = function(arr, elt, from) {\r\n        if (arr.indexOf) {\r\n            return arr.indexOf(elt, from);\r\n        }\r\n\r\n        from = from || 0;\r\n        var len = arr.length;\r\n\r\n        if (from < 0) {\r\n            from += len;\r\n        }\r\n\r\n        for (; from < len; from += 1) {\r\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\r\n                return from;\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    //this is a version 4 UUID\r\n    qq.getUniqueId = function() {\r\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\r\n            /*jslint eqeq: true, bitwise: true*/\r\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n\r\n    //\r\n    // Browsers and platforms detection\r\n    qq.ie = function() {\r\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\r\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\r\n    };\r\n\r\n    qq.ie7 = function() {\r\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\r\n    };\r\n\r\n    qq.ie8 = function() {\r\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\r\n    };\r\n\r\n    qq.ie10 = function() {\r\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\r\n    };\r\n\r\n    qq.ie11 = function() {\r\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\r\n    };\r\n\r\n    qq.edge = function() {\r\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\r\n    };\r\n\r\n    qq.safari = function() {\r\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\r\n    };\r\n\r\n    qq.chrome = function() {\r\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\r\n    };\r\n\r\n    qq.opera = function() {\r\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\r\n    };\r\n\r\n    qq.firefox = function() {\r\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\r\n    };\r\n\r\n    qq.windows = function() {\r\n        return navigator.platform === \"Win32\";\r\n    };\r\n\r\n    qq.android = function() {\r\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\r\n    };\r\n\r\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\r\n    // such as the one that prevents a `Blob` from being uploaded.\r\n    qq.androidStock = function() {\r\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\r\n    };\r\n\r\n    qq.ios6 = function() {\r\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\r\n    };\r\n\r\n    qq.ios7 = function() {\r\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\r\n    };\r\n\r\n    qq.ios8 = function() {\r\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\r\n    };\r\n\r\n    // iOS 8.0.0\r\n    qq.ios800 = function() {\r\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\r\n    };\r\n\r\n    qq.ios = function() {\r\n        /*jshint -W014 */\r\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\r\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\r\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\r\n    };\r\n\r\n    qq.iosChrome = function() {\r\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\r\n    };\r\n\r\n    qq.iosSafari = function() {\r\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\r\n    };\r\n\r\n    qq.iosSafariWebView = function() {\r\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\r\n    };\r\n\r\n    //\r\n    // Events\r\n\r\n    qq.preventDefault = function(e) {\r\n        if (e.preventDefault) {\r\n            e.preventDefault();\r\n        } else {\r\n            e.returnValue = false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Creates and returns element from html string\r\n     * Uses innerHTML to create an element\r\n     */\r\n    qq.toElement = (function() {\r\n        var div = document.createElement(\"div\");\r\n        return function(html) {\r\n            div.innerHTML = html;\r\n            var element = div.firstChild;\r\n            div.removeChild(element);\r\n            return element;\r\n        };\r\n    }());\r\n\r\n    //key and value are passed to callback for each entry in the iterable item\r\n    qq.each = function(iterableItem, callback) {\r\n        var keyOrIndex, retVal;\r\n\r\n        if (iterableItem) {\r\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\r\n            if (window.Storage && iterableItem.constructor === window.Storage) {\r\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\r\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\r\n                    if (retVal === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\r\n            // when iterating over items inside the object.\r\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\r\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\r\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\r\n                    if (retVal === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else if (qq.isString(iterableItem)) {\r\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\r\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\r\n                    if (retVal === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (keyOrIndex in iterableItem) {\r\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\r\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\r\n                        if (retVal === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    //include any args that should be passed to the new function after the context arg\r\n    qq.bind = function(oldFunc, context) {\r\n        if (qq.isFunction(oldFunc)) {\r\n            var args =  Array.prototype.slice.call(arguments, 2);\r\n\r\n            return function() {\r\n                var newArgs = qq.extend([], args);\r\n                if (arguments.length) {\r\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\r\n                }\r\n                return oldFunc.apply(context, newArgs);\r\n            };\r\n        }\r\n\r\n        throw new Error(\"first parameter must be a function!\");\r\n    };\r\n\r\n    /**\r\n     * obj2url() takes a json-object as argument and generates\r\n     * a querystring. pretty much like jQuery.param()\r\n     *\r\n     * how to use:\r\n     *\r\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\r\n     *\r\n     * will result in:\r\n     *\r\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\r\n     *\r\n     * @param  Object JSON-Object\r\n     * @param  String current querystring-part\r\n     * @return String encoded querystring\r\n     */\r\n    qq.obj2url = function(obj, temp, prefixDone) {\r\n        /*jshint laxbreak: true*/\r\n        var uristrings = [],\r\n            prefix = \"&\",\r\n            add = function(nextObj, i) {\r\n                var nextTemp = temp\r\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\r\n                    ? temp\r\n                    : temp + \"[\" + i + \"]\"\r\n                    : i;\r\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\r\n                    uristrings.push(\r\n                        (typeof nextObj === \"object\")\r\n                            ? qq.obj2url(nextObj, nextTemp, true)\r\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\r\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\r\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\r\n                    );\r\n                }\r\n            };\r\n\r\n        if (!prefixDone && temp) {\r\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\r\n            uristrings.push(temp);\r\n            uristrings.push(qq.obj2url(obj));\r\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\r\n            qq.each(obj, function(idx, val) {\r\n                add(val, idx);\r\n            });\r\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\r\n            qq.each(obj, function(prop, val) {\r\n                add(val, prop);\r\n            });\r\n        } else {\r\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\r\n        }\r\n\r\n        if (temp) {\r\n            return uristrings.join(prefix);\r\n        } else {\r\n            return uristrings.join(prefix)\r\n                .replace(/^&/, \"\")\r\n                .replace(/%20/g, \"+\");\r\n        }\r\n    };\r\n\r\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\r\n        if (!formData) {\r\n            formData = new FormData();\r\n        }\r\n\r\n        qq.each(obj, function(key, val) {\r\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\r\n\r\n            if (qq.isObject(val)) {\r\n                qq.obj2FormData(val, formData, key);\r\n            }\r\n            else if (qq.isFunction(val)) {\r\n                formData.append(key, val());\r\n            }\r\n            else {\r\n                formData.append(key, val);\r\n            }\r\n        });\r\n\r\n        return formData;\r\n    };\r\n\r\n    qq.obj2Inputs = function(obj, form) {\r\n        var input;\r\n\r\n        if (!form) {\r\n            form = document.createElement(\"form\");\r\n        }\r\n\r\n        qq.obj2FormData(obj, {\r\n            append: function(key, val) {\r\n                input = document.createElement(\"input\");\r\n                input.setAttribute(\"name\", key);\r\n                input.setAttribute(\"value\", val);\r\n                form.appendChild(input);\r\n            }\r\n        });\r\n\r\n        return form;\r\n    };\r\n\r\n    /**\r\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\r\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\r\n     */\r\n    qq.parseJson = function(json) {\r\n        /*jshint evil: true*/\r\n        if (window.JSON && qq.isFunction(JSON.parse)) {\r\n            return JSON.parse(json);\r\n        } else {\r\n            return eval(\"(\" + json + \")\");\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Retrieve the extension of a file, if it exists.\r\n     *\r\n     * @param filename\r\n     * @returns {string || undefined}\r\n     */\r\n    qq.getExtension = function(filename) {\r\n        var extIdx = filename.lastIndexOf(\".\") + 1;\r\n\r\n        if (extIdx > 0) {\r\n            return filename.substr(extIdx, filename.length - extIdx);\r\n        }\r\n    };\r\n\r\n    qq.getFilename = function(blobOrFileInput) {\r\n        /*jslint regexp: true*/\r\n\r\n        if (qq.isInput(blobOrFileInput)) {\r\n            // get input value and remove path to normalize\r\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\r\n        }\r\n        else if (qq.isFile(blobOrFileInput)) {\r\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\r\n                return blobOrFileInput.fileName;\r\n            }\r\n        }\r\n\r\n        return blobOrFileInput.name;\r\n    };\r\n\r\n    /**\r\n     * A generic module which supports object disposing in dispose() method.\r\n     * */\r\n    qq.DisposeSupport = function() {\r\n        var disposers = [];\r\n\r\n        return {\r\n            /** Run all registered disposers */\r\n            dispose: function() {\r\n                var disposer;\r\n                do {\r\n                    disposer = disposers.shift();\r\n                    if (disposer) {\r\n                        disposer();\r\n                    }\r\n                }\r\n                while (disposer);\r\n            },\r\n\r\n            /** Attach event handler and register de-attacher as a disposer */\r\n            attach: function() {\r\n                var args = arguments;\r\n                /*jslint undef:true*/\r\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\r\n            },\r\n\r\n            /** Add disposer to the collection */\r\n            addDisposer: function(disposeFunction) {\r\n                disposers.push(disposeFunction);\r\n            }\r\n        };\r\n    };\r\n}());\r\n","/* globals define, module, global, qq */\r\n(function() {\r\n    \"use strict\";\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(function() {\r\n            return qq;\r\n        });\r\n    }\r\n    else if (typeof module !== \"undefined\" && module.exports) {\r\n        module.exports = qq;\r\n    }\r\n    else {\r\n        global.qq = qq;\r\n    }\r\n}());\r\n","/* globals qq */\r\n/**\r\n * Fine Uploader top-level Error container.  Inherits from `Error`.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.Error = function(message) {\r\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\r\n    };\r\n\r\n    qq.Error.prototype = new Error();\r\n}());\r\n","/*global qq */\r\nqq.version = \"5.15.0\";\r\n","/* globals qq */\r\nqq.supportedFeatures = (function() {\r\n    \"use strict\";\r\n\r\n    var supportsUploading,\r\n        supportsUploadingBlobs,\r\n        supportsFileDrop,\r\n        supportsAjaxFileUploading,\r\n        supportsFolderDrop,\r\n        supportsChunking,\r\n        supportsResume,\r\n        supportsUploadViaPaste,\r\n        supportsUploadCors,\r\n        supportsDeleteFileXdr,\r\n        supportsDeleteFileCorsXhr,\r\n        supportsDeleteFileCors,\r\n        supportsFolderSelection,\r\n        supportsImagePreviews,\r\n        supportsUploadProgress;\r\n\r\n    function testSupportsFileInputElement() {\r\n        var supported = true,\r\n            tempInput;\r\n\r\n        try {\r\n            tempInput = document.createElement(\"input\");\r\n            tempInput.type = \"file\";\r\n            qq(tempInput).hide();\r\n\r\n            if (tempInput.disabled) {\r\n                supported = false;\r\n            }\r\n        }\r\n        catch (ex) {\r\n            supported = false;\r\n        }\r\n\r\n        return supported;\r\n    }\r\n\r\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\r\n    function isChrome21OrHigher() {\r\n        return (qq.chrome() || qq.opera()) &&\r\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\r\n    }\r\n\r\n    //only way to test for complete Clipboard API support at this time\r\n    function isChrome14OrHigher() {\r\n        return (qq.chrome() || qq.opera()) &&\r\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\r\n    }\r\n\r\n    //Ensure we can send cross-origin `XMLHttpRequest`s\r\n    function isCrossOriginXhrSupported() {\r\n        if (window.XMLHttpRequest) {\r\n            var xhr = qq.createXhrInstance();\r\n\r\n            //Commonly accepted test for XHR CORS support.\r\n            return xhr.withCredentials !== undefined;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\r\n    function isXdrSupported() {\r\n        return window.XDomainRequest !== undefined;\r\n    }\r\n\r\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\r\n    // or if `XDomainRequest` is an available alternative.\r\n    function isCrossOriginAjaxSupported() {\r\n        if (isCrossOriginXhrSupported()) {\r\n            return true;\r\n        }\r\n\r\n        return isXdrSupported();\r\n    }\r\n\r\n    function isFolderSelectionSupported() {\r\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\r\n        return document.createElement(\"input\").webkitdirectory !== undefined;\r\n    }\r\n\r\n    function isLocalStorageSupported() {\r\n        try {\r\n            return !!window.localStorage &&\r\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\r\n                qq.isFunction(window.localStorage.setItem);\r\n        }\r\n        catch (error) {\r\n            // probably caught a security exception, so no localStorage for you\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function isDragAndDropSupported() {\r\n        var span = document.createElement(\"span\");\r\n\r\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\r\n            !qq.android() && !qq.ios();\r\n    }\r\n\r\n    supportsUploading = testSupportsFileInputElement();\r\n\r\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\r\n\r\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\r\n\r\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\r\n\r\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\r\n\r\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\r\n\r\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\r\n\r\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\r\n\r\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\r\n\r\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\r\n\r\n    supportsDeleteFileXdr = isXdrSupported();\r\n\r\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\r\n\r\n    supportsFolderSelection = isFolderSelectionSupported();\r\n\r\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\r\n\r\n    supportsUploadProgress = (function() {\r\n        if (supportsAjaxFileUploading) {\r\n            return !qq.androidStock() && !qq.iosChrome();\r\n        }\r\n        return false;\r\n    }());\r\n\r\n    return {\r\n        ajaxUploading: supportsAjaxFileUploading,\r\n        blobUploading: supportsUploadingBlobs,\r\n        canDetermineSize: supportsAjaxFileUploading,\r\n        chunking: supportsChunking,\r\n        deleteFileCors: supportsDeleteFileCors,\r\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\r\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\r\n        dialogElement: !!window.HTMLDialogElement,\r\n        fileDrop: supportsFileDrop,\r\n        folderDrop: supportsFolderDrop,\r\n        folderSelection: supportsFolderSelection,\r\n        imagePreviews: supportsImagePreviews,\r\n        imageValidation: supportsImagePreviews,\r\n        itemSizeValidation: supportsAjaxFileUploading,\r\n        pause: supportsChunking,\r\n        progressBar: supportsUploadProgress,\r\n        resume: supportsResume,\r\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\r\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\r\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\r\n        uploading: supportsUploading,\r\n        uploadCors: supportsUploadCors,\r\n        uploadCustomHeaders: supportsAjaxFileUploading,\r\n        uploadNonMultipart: supportsAjaxFileUploading,\r\n        uploadViaPaste: supportsUploadViaPaste\r\n    };\r\n\r\n}());\r\n","/*globals qq*/\r\n\r\n// Is the passed object a promise instance?\r\nqq.isGenericPromise = function(maybePromise) {\r\n    \"use strict\";\r\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\r\n};\r\n\r\nqq.Promise = function() {\r\n    \"use strict\";\r\n\r\n    var successArgs, failureArgs,\r\n        successCallbacks = [],\r\n        failureCallbacks = [],\r\n        doneCallbacks = [],\r\n        state = 0;\r\n\r\n    qq.extend(this, {\r\n        then: function(onSuccess, onFailure) {\r\n            if (state === 0) {\r\n                if (onSuccess) {\r\n                    successCallbacks.push(onSuccess);\r\n                }\r\n                if (onFailure) {\r\n                    failureCallbacks.push(onFailure);\r\n                }\r\n            }\r\n            else if (state === -1) {\r\n                onFailure && onFailure.apply(null, failureArgs);\r\n            }\r\n            else if (onSuccess) {\r\n                onSuccess.apply(null, successArgs);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        done: function(callback) {\r\n            if (state === 0) {\r\n                doneCallbacks.push(callback);\r\n            }\r\n            else {\r\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        success: function() {\r\n            state = 1;\r\n            successArgs = arguments;\r\n\r\n            if (successCallbacks.length) {\r\n                qq.each(successCallbacks, function(idx, callback) {\r\n                    callback.apply(null, successArgs);\r\n                });\r\n            }\r\n\r\n            if (doneCallbacks.length) {\r\n                qq.each(doneCallbacks, function(idx, callback) {\r\n                    callback.apply(null, successArgs);\r\n                });\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        failure: function() {\r\n            state = -1;\r\n            failureArgs = arguments;\r\n\r\n            if (failureCallbacks.length) {\r\n                qq.each(failureCallbacks, function(idx, callback) {\r\n                    callback.apply(null, failureArgs);\r\n                });\r\n            }\r\n\r\n            if (doneCallbacks.length) {\r\n                qq.each(doneCallbacks, function(idx, callback) {\r\n                    callback.apply(null, failureArgs);\r\n                });\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n};\r\n","/* globals qq */\r\n/**\r\n * Placeholder for a Blob that will be generated on-demand.\r\n *\r\n * @param referenceBlob Parent of the generated blob\r\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\r\n * @constructor\r\n */\r\nqq.BlobProxy = function(referenceBlob, onCreate) {\r\n    \"use strict\";\r\n\r\n    qq.extend(this, {\r\n        referenceBlob: referenceBlob,\r\n\r\n        create: function() {\r\n            return onCreate(referenceBlob);\r\n        }\r\n    });\r\n};\r\n","/*globals qq*/\r\n\r\n/**\r\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\r\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\r\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\r\n * provided here by adding CSS classes to the container on hover/focus.\r\n *\r\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\r\n * available on all supported browsers.\r\n *\r\n * @param o Options to override the default values\r\n */\r\nqq.UploadButton = function(o) {\r\n    \"use strict\";\r\n\r\n    var self = this,\r\n\r\n        disposeSupport = new qq.DisposeSupport(),\r\n\r\n        options = {\r\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\r\n            acceptFiles: null,\r\n\r\n            // \"Container\" element\r\n            element: null,\r\n\r\n            focusClass: \"qq-upload-button-focus\",\r\n\r\n            // A true value allows folders to be selected, if supported by the UA\r\n            folders: false,\r\n\r\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\r\n            hoverClass: \"qq-upload-button-hover\",\r\n\r\n            ios8BrowserCrashWorkaround: false,\r\n\r\n            // If true adds `multiple` attribute to `<input type=\"file\">`\r\n            multiple: false,\r\n\r\n            // `name` attribute of `<input type=\"file\">`\r\n            name: \"qqfile\",\r\n\r\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\r\n            onChange: function(input) {},\r\n\r\n            title: null\r\n        },\r\n        input, buttonId;\r\n\r\n    // Overrides any of the default option values with any option values passed in during construction.\r\n    qq.extend(options, o);\r\n\r\n    buttonId = qq.getUniqueId();\r\n\r\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\r\n    function createInput() {\r\n        var input = document.createElement(\"input\");\r\n\r\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\r\n        input.setAttribute(\"title\", options.title);\r\n\r\n        self.setMultiple(options.multiple, input);\r\n\r\n        if (options.folders && qq.supportedFeatures.folderSelection) {\r\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\r\n            input.setAttribute(\"webkitdirectory\", \"\");\r\n        }\r\n\r\n        if (options.acceptFiles) {\r\n            input.setAttribute(\"accept\", options.acceptFiles);\r\n        }\r\n\r\n        input.setAttribute(\"type\", \"file\");\r\n        input.setAttribute(\"name\", options.name);\r\n\r\n        qq(input).css({\r\n            position: \"absolute\",\r\n            // in Opera only 'browse' button\r\n            // is clickable and it is located at\r\n            // the right side of the input\r\n            right: 0,\r\n            top: 0,\r\n            fontFamily: \"Arial\",\r\n            // It's especially important to make this an arbitrarily large value\r\n            // to ensure the rendered input button in IE takes up the entire\r\n            // space of the container element.  Otherwise, the left side of the\r\n            // button will require a double-click to invoke the file chooser.\r\n            // In other browsers, this might cause other issues, so a large font-size\r\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\r\n            // in some cases when the font-size is large.  So, this workaround is not applied\r\n            // to IE8.\r\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\r\n            margin: 0,\r\n            padding: 0,\r\n            cursor: \"pointer\",\r\n            opacity: 0\r\n        });\r\n\r\n        // Setting the file input's height to 100% in IE7 causes\r\n        // most of the visible button to be unclickable.\r\n        !qq.ie7() && qq(input).css({height: \"100%\"});\r\n\r\n        options.element.appendChild(input);\r\n\r\n        disposeSupport.attach(input, \"change\", function() {\r\n            options.onChange(input);\r\n        });\r\n\r\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\r\n        disposeSupport.attach(input, \"mouseover\", function() {\r\n            qq(options.element).addClass(options.hoverClass);\r\n        });\r\n        disposeSupport.attach(input, \"mouseout\", function() {\r\n            qq(options.element).removeClass(options.hoverClass);\r\n        });\r\n\r\n        disposeSupport.attach(input, \"focus\", function() {\r\n            qq(options.element).addClass(options.focusClass);\r\n        });\r\n        disposeSupport.attach(input, \"blur\", function() {\r\n            qq(options.element).removeClass(options.focusClass);\r\n        });\r\n\r\n        return input;\r\n    }\r\n\r\n    // Make button suitable container for input\r\n    qq(options.element).css({\r\n        position: \"relative\",\r\n        overflow: \"hidden\",\r\n        // Make sure browse button is in the right side in Internet Explorer\r\n        direction: \"ltr\"\r\n    });\r\n\r\n    // Exposed API\r\n    qq.extend(this, {\r\n        getInput: function() {\r\n            return input;\r\n        },\r\n\r\n        getButtonId: function() {\r\n            return buttonId;\r\n        },\r\n\r\n        setMultiple: function(isMultiple, optInput) {\r\n            var input = optInput || this.getInput();\r\n\r\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\r\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\r\n            // See #1283.\r\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\r\n                input.setAttribute(\"multiple\", \"\");\r\n            }\r\n\r\n            else {\r\n                if (isMultiple) {\r\n                    input.setAttribute(\"multiple\", \"\");\r\n                }\r\n                else {\r\n                    input.removeAttribute(\"multiple\");\r\n                }\r\n            }\r\n        },\r\n\r\n        setAcceptFiles: function(acceptFiles) {\r\n            if (acceptFiles !== options.acceptFiles) {\r\n                input.setAttribute(\"accept\", acceptFiles);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            if (input.parentNode) {\r\n                qq(input).remove();\r\n            }\r\n\r\n            qq(options.element).removeClass(options.focusClass);\r\n            input = null;\r\n            input = createInput();\r\n        }\r\n    });\r\n\r\n    input = createInput();\r\n};\r\n\r\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\r\n","/*globals qq */\r\nqq.UploadData = function(uploaderProxy) {\r\n    \"use strict\";\r\n\r\n    var data = [],\r\n        byUuid = {},\r\n        byStatus = {},\r\n        byProxyGroupId = {},\r\n        byBatchId = {};\r\n\r\n    function getDataByIds(idOrIds) {\r\n        if (qq.isArray(idOrIds)) {\r\n            var entries = [];\r\n\r\n            qq.each(idOrIds, function(idx, id) {\r\n                entries.push(data[id]);\r\n            });\r\n\r\n            return entries;\r\n        }\r\n\r\n        return data[idOrIds];\r\n    }\r\n\r\n    function getDataByUuids(uuids) {\r\n        if (qq.isArray(uuids)) {\r\n            var entries = [];\r\n\r\n            qq.each(uuids, function(idx, uuid) {\r\n                entries.push(data[byUuid[uuid]]);\r\n            });\r\n\r\n            return entries;\r\n        }\r\n\r\n        return data[byUuid[uuids]];\r\n    }\r\n\r\n    function getDataByStatus(status) {\r\n        var statusResults = [],\r\n            statuses = [].concat(status);\r\n\r\n        qq.each(statuses, function(index, statusEnum) {\r\n            var statusResultIndexes = byStatus[statusEnum];\r\n\r\n            if (statusResultIndexes !== undefined) {\r\n                qq.each(statusResultIndexes, function(i, dataIndex) {\r\n                    statusResults.push(data[dataIndex]);\r\n                });\r\n            }\r\n        });\r\n\r\n        return statusResults;\r\n    }\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Adds a new file to the data cache for tracking purposes.\r\n         *\r\n         * @param spec Data that describes this file.  Possible properties are:\r\n         *\r\n         * - uuid: Initial UUID for this file.\r\n         * - name: Initial name of this file.\r\n         * - size: Size of this file, omit if this cannot be determined\r\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\r\n         * - batchId: ID of the batch this file belongs to\r\n         * - proxyGroupId: ID of the proxy group associated with this file\r\n         * - onBeforeStatusChange(fileId): callback that is executed before the status change is broadcast\r\n         *\r\n         * @returns {number} Internal ID for this file.\r\n         */\r\n        addFile: function(spec) {\r\n            var status = spec.status || qq.status.SUBMITTING,\r\n                id = data.push({\r\n                    name: spec.name,\r\n                    originalName: spec.name,\r\n                    uuid: spec.uuid,\r\n                    size: spec.size == null ? -1 : spec.size,\r\n                    status: status\r\n                }) - 1;\r\n\r\n            if (spec.batchId) {\r\n                data[id].batchId = spec.batchId;\r\n\r\n                if (byBatchId[spec.batchId] === undefined) {\r\n                    byBatchId[spec.batchId] = [];\r\n                }\r\n                byBatchId[spec.batchId].push(id);\r\n            }\r\n\r\n            if (spec.proxyGroupId) {\r\n                data[id].proxyGroupId = spec.proxyGroupId;\r\n\r\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\r\n                    byProxyGroupId[spec.proxyGroupId] = [];\r\n                }\r\n                byProxyGroupId[spec.proxyGroupId].push(id);\r\n            }\r\n\r\n            data[id].id = id;\r\n            byUuid[spec.uuid] = id;\r\n\r\n            if (byStatus[status] === undefined) {\r\n                byStatus[status] = [];\r\n            }\r\n            byStatus[status].push(id);\r\n\r\n            spec.onBeforeStatusChange && spec.onBeforeStatusChange(id);\r\n            uploaderProxy.onStatusChange(id, null, status);\r\n\r\n            return id;\r\n        },\r\n\r\n        retrieve: function(optionalFilter) {\r\n            if (qq.isObject(optionalFilter) && data.length)  {\r\n                if (optionalFilter.id !== undefined) {\r\n                    return getDataByIds(optionalFilter.id);\r\n                }\r\n\r\n                else if (optionalFilter.uuid !== undefined) {\r\n                    return getDataByUuids(optionalFilter.uuid);\r\n                }\r\n\r\n                else if (optionalFilter.status) {\r\n                    return getDataByStatus(optionalFilter.status);\r\n                }\r\n            }\r\n            else {\r\n                return qq.extend([], data, true);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            data = [];\r\n            byUuid = {};\r\n            byStatus = {};\r\n            byBatchId = {};\r\n        },\r\n\r\n        setStatus: function(id, newStatus) {\r\n            var oldStatus = data[id].status,\r\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\r\n\r\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\r\n\r\n            data[id].status = newStatus;\r\n\r\n            if (byStatus[newStatus] === undefined) {\r\n                byStatus[newStatus] = [];\r\n            }\r\n            byStatus[newStatus].push(id);\r\n\r\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\r\n        },\r\n\r\n        uuidChanged: function(id, newUuid) {\r\n            var oldUuid = data[id].uuid;\r\n\r\n            data[id].uuid = newUuid;\r\n            byUuid[newUuid] = id;\r\n            delete byUuid[oldUuid];\r\n        },\r\n\r\n        updateName: function(id, newName) {\r\n            data[id].name = newName;\r\n        },\r\n\r\n        updateSize: function(id, newSize) {\r\n            data[id].size = newSize;\r\n        },\r\n\r\n        // Only applicable if this file has a parent that we may want to reference later.\r\n        setParentId: function(targetId, parentId) {\r\n            data[targetId].parentId = parentId;\r\n        },\r\n\r\n        getIdsInProxyGroup: function(id) {\r\n            var proxyGroupId = data[id].proxyGroupId;\r\n\r\n            if (proxyGroupId) {\r\n                return byProxyGroupId[proxyGroupId];\r\n            }\r\n            return [];\r\n        },\r\n\r\n        getIdsInBatch: function(id) {\r\n            var batchId = data[id].batchId;\r\n\r\n            return byBatchId[batchId];\r\n        }\r\n    });\r\n};\r\n\r\nqq.status = {\r\n    SUBMITTING: \"submitting\",\r\n    SUBMITTED: \"submitted\",\r\n    REJECTED: \"rejected\",\r\n    QUEUED: \"queued\",\r\n    CANCELED: \"canceled\",\r\n    PAUSED: \"paused\",\r\n    UPLOADING: \"uploading\",\r\n    UPLOAD_RETRYING: \"retrying upload\",\r\n    UPLOAD_SUCCESSFUL: \"upload successful\",\r\n    UPLOAD_FAILED: \"upload failed\",\r\n    DELETE_FAILED: \"delete failed\",\r\n    DELETING: \"deleting\",\r\n    DELETED: \"deleted\"\r\n};\r\n","/*globals qq*/\r\n/**\r\n * Defines the public API for FineUploaderBasic mode.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.basePublicApi = {\r\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\r\n        addBlobs: function(blobDataOrArray, params, endpoint) {\r\n            this.addFiles(blobDataOrArray, params, endpoint);\r\n        },\r\n\r\n        addInitialFiles: function(cannedFileList) {\r\n            var self = this;\r\n\r\n            qq.each(cannedFileList, function(index, cannedFile) {\r\n                self._addCannedFile(cannedFile);\r\n            });\r\n        },\r\n\r\n        addFiles: function(data, params, endpoint) {\r\n            this._maybeHandleIos8SafariWorkaround();\r\n\r\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\r\n\r\n                processBlob = qq.bind(function(blob) {\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: this._options.blobs.defaultName\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processBlobData = qq.bind(function(blobData) {\r\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processCanvas = qq.bind(function(canvas) {\r\n                    var blob = qq.canvasToBlob(canvas);\r\n\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: this._options.blobs.defaultName + \".png\"\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processCanvasData = qq.bind(function(canvasData) {\r\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\r\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\r\n\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: canvasData.name\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processFileOrInput = qq.bind(function(fileOrInput) {\r\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\r\n                        var files = Array.prototype.slice.call(fileOrInput.files),\r\n                            self = this;\r\n\r\n                        qq.each(files, function(idx, file) {\r\n                            self._handleNewFile(file, batchId, verifiedFiles);\r\n                        });\r\n                    }\r\n                    else {\r\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\r\n                    }\r\n                }, this),\r\n\r\n                normalizeData = function() {\r\n                    if (qq.isFileList(data)) {\r\n                        data = Array.prototype.slice.call(data);\r\n                    }\r\n                    data = [].concat(data);\r\n                },\r\n\r\n                self = this,\r\n                verifiedFiles = [];\r\n\r\n            this._currentBatchId = batchId;\r\n\r\n            if (data) {\r\n                normalizeData();\r\n\r\n                qq.each(data, function(idx, fileContainer) {\r\n                    if (qq.isFileOrInput(fileContainer)) {\r\n                        processFileOrInput(fileContainer);\r\n                    }\r\n                    else if (qq.isBlob(fileContainer)) {\r\n                        processBlob(fileContainer);\r\n                    }\r\n                    else if (qq.isObject(fileContainer)) {\r\n                        if (fileContainer.blob && fileContainer.name) {\r\n                            processBlobData(fileContainer);\r\n                        }\r\n                        else if (fileContainer.canvas && fileContainer.name) {\r\n                            processCanvasData(fileContainer);\r\n                        }\r\n                    }\r\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\r\n                        processCanvas(fileContainer);\r\n                    }\r\n                    else {\r\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\r\n                    }\r\n                });\r\n\r\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\r\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\r\n            }\r\n        },\r\n\r\n        cancel: function(id) {\r\n            this._handler.cancel(id);\r\n        },\r\n\r\n        cancelAll: function() {\r\n            var storedIdsCopy = [],\r\n                self = this;\r\n\r\n            qq.extend(storedIdsCopy, this._storedIds);\r\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\r\n                self.cancel(storedFileId);\r\n            });\r\n\r\n            this._handler.cancelAll();\r\n        },\r\n\r\n        clearStoredFiles: function() {\r\n            this._storedIds = [];\r\n        },\r\n\r\n        continueUpload: function(id) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\r\n                return false;\r\n            }\r\n\r\n            if (uploadData.status === qq.status.PAUSED) {\r\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\r\n                this._uploadFile(id);\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        deleteFile: function(id) {\r\n            return this._onSubmitDelete(id);\r\n        },\r\n\r\n        // TODO document?\r\n        doesExist: function(fileOrBlobId) {\r\n            return this._handler.isValid(fileOrBlobId);\r\n        },\r\n\r\n        // Generate a variable size thumbnail on an img or canvas,\r\n        // returning a promise that is fulfilled when the attempt completes.\r\n        // Thumbnail can either be based off of a URL for an image returned\r\n        // by the server in the upload response, or the associated `Blob`.\r\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\r\n            var promiseToReturn = new qq.Promise(),\r\n                fileOrUrl, options;\r\n\r\n            if (this._imageGenerator) {\r\n                fileOrUrl = this._thumbnailUrls[fileId];\r\n                options = {\r\n                    customResizeFunction: customResizeFunction,\r\n                    maxSize: maxSize > 0 ? maxSize : null,\r\n                    scale: maxSize > 0\r\n                };\r\n\r\n                // If client-side preview generation is possible\r\n                // and we are not specifically looking for the image URl returned by the server...\r\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\r\n                    fileOrUrl = this.getFile(fileId);\r\n                }\r\n\r\n                /* jshint eqeqeq:false,eqnull:true */\r\n                if (fileOrUrl == null) {\r\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\r\n                }\r\n                else {\r\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\r\n                        function success(modifiedContainer) {\r\n                            promiseToReturn.success(modifiedContainer);\r\n                        },\r\n\r\n                        function failure(container, reason) {\r\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\r\n            }\r\n\r\n            return promiseToReturn;\r\n        },\r\n\r\n        getButton: function(fileId) {\r\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\r\n        },\r\n\r\n        getEndpoint: function(fileId) {\r\n            return this._endpointStore.get(fileId);\r\n        },\r\n\r\n        getFile: function(fileOrBlobId) {\r\n            return this._handler.getFile(fileOrBlobId) || null;\r\n        },\r\n\r\n        getInProgress: function() {\r\n            return this._uploadData.retrieve({\r\n                status: [\r\n                    qq.status.UPLOADING,\r\n                    qq.status.UPLOAD_RETRYING,\r\n                    qq.status.QUEUED\r\n                ]\r\n            }).length;\r\n        },\r\n\r\n        getName: function(id) {\r\n            return this._uploadData.retrieve({id: id}).name;\r\n        },\r\n\r\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\r\n        getParentId: function(id) {\r\n            var uploadDataEntry = this.getUploads({id: id}),\r\n                parentId = null;\r\n\r\n            if (uploadDataEntry) {\r\n                if (uploadDataEntry.parentId !== undefined) {\r\n                    parentId = uploadDataEntry.parentId;\r\n                }\r\n            }\r\n\r\n            return parentId;\r\n        },\r\n\r\n        getResumableFilesData: function() {\r\n            return this._handler.getResumableFilesData();\r\n        },\r\n\r\n        getSize: function(id) {\r\n            return this._uploadData.retrieve({id: id}).size;\r\n        },\r\n\r\n        getNetUploads: function() {\r\n            return this._netUploaded;\r\n        },\r\n\r\n        getRemainingAllowedItems: function() {\r\n            var allowedItems = this._currentItemLimit;\r\n\r\n            if (allowedItems > 0) {\r\n                return allowedItems - this._netUploadedOrQueued;\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        getUploads: function(optionalFilter) {\r\n            return this._uploadData.retrieve(optionalFilter);\r\n        },\r\n\r\n        getUuid: function(id) {\r\n            return this._uploadData.retrieve({id: id}).uuid;\r\n        },\r\n\r\n        log: function(str, level) {\r\n            if (this._options.debug && (!level || level === \"info\")) {\r\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\r\n            }\r\n            else if (level && level !== \"info\") {\r\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\r\n\r\n            }\r\n        },\r\n\r\n        pauseUpload: function(id) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\r\n                return false;\r\n            }\r\n\r\n            // Pause only really makes sense if the file is uploading or retrying\r\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\r\n                if (this._handler.pause(id)) {\r\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\r\n                    return true;\r\n                }\r\n                else {\r\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\r\n                }\r\n            }\r\n            else {\r\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        removeFileRef: function(id) {\r\n            this._handler.expunge(id);\r\n        },\r\n\r\n        reset: function() {\r\n            this.log(\"Resetting uploader...\");\r\n\r\n            this._handler.reset();\r\n            this._storedIds = [];\r\n            this._autoRetries = [];\r\n            this._retryTimeouts = [];\r\n            this._preventRetries = [];\r\n            this._thumbnailUrls = [];\r\n\r\n            qq.each(this._buttons, function(idx, button) {\r\n                button.reset();\r\n            });\r\n\r\n            this._paramsStore.reset();\r\n            this._endpointStore.reset();\r\n            this._netUploadedOrQueued = 0;\r\n            this._netUploaded = 0;\r\n            this._uploadData.reset();\r\n            this._buttonIdsForFileIds = [];\r\n\r\n            this._pasteHandler && this._pasteHandler.reset();\r\n            this._options.session.refreshOnReset && this._refreshSessionData();\r\n\r\n            this._succeededSinceLastAllComplete = [];\r\n            this._failedSinceLastAllComplete = [];\r\n\r\n            this._totalProgress && this._totalProgress.reset();\r\n        },\r\n\r\n        retry: function(id) {\r\n            return this._manualRetry(id);\r\n        },\r\n\r\n        scaleImage: function(id, specs) {\r\n            var self = this;\r\n\r\n            return qq.Scaler.prototype.scaleImage(id, specs, {\r\n                log: qq.bind(self.log, self),\r\n                getFile: qq.bind(self.getFile, self),\r\n                uploadData: self._uploadData\r\n            });\r\n        },\r\n\r\n        setCustomHeaders: function(headers, id) {\r\n            this._customHeadersStore.set(headers, id);\r\n        },\r\n\r\n        setDeleteFileCustomHeaders: function(headers, id) {\r\n            this._deleteFileCustomHeadersStore.set(headers, id);\r\n        },\r\n\r\n        setDeleteFileEndpoint: function(endpoint, id) {\r\n            this._deleteFileEndpointStore.set(endpoint, id);\r\n        },\r\n\r\n        setDeleteFileParams: function(params, id) {\r\n            this._deleteFileParamsStore.set(params, id);\r\n        },\r\n\r\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\r\n        setEndpoint: function(endpoint, id) {\r\n            this._endpointStore.set(endpoint, id);\r\n        },\r\n\r\n        setForm: function(elementOrId) {\r\n            this._updateFormSupportAndParams(elementOrId);\r\n        },\r\n\r\n        setItemLimit: function(newItemLimit) {\r\n            this._currentItemLimit = newItemLimit;\r\n        },\r\n\r\n        setName: function(id, newName) {\r\n            this._uploadData.updateName(id, newName);\r\n        },\r\n\r\n        setParams: function(params, id) {\r\n            this._paramsStore.set(params, id);\r\n        },\r\n\r\n        setUuid: function(id, newUuid) {\r\n            return this._uploadData.uuidChanged(id, newUuid);\r\n        },\r\n\r\n        /**\r\n         * Expose the internal status of a file id to the public api for manual state changes\r\n         * @public\r\n         *\r\n         * @param {Number} id,\r\n         * @param {String} newStatus\r\n         *\r\n         * @todo Implement the remaining methods\r\n         */\r\n        setStatus: function(id, newStatus) {\r\n            var fileRecord = this.getUploads({id: id});\r\n            if (!fileRecord) {\r\n                throw new qq.Error(id + \" is not a valid file ID.\");\r\n            }\r\n\r\n            switch (newStatus) {\r\n                case qq.status.DELETED:\r\n                    this._onDeleteComplete(id, null, false);\r\n                    break;\r\n                case qq.status.DELETE_FAILED:\r\n                    this._onDeleteComplete(id, null, true);\r\n                    break;\r\n                default:\r\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\r\n                    this.log(errorMessage);\r\n                    throw new qq.Error(errorMessage);\r\n            }\r\n        },\r\n\r\n        uploadStoredFiles: function() {\r\n            if (this._storedIds.length === 0) {\r\n                this._itemError(\"noFilesError\");\r\n            }\r\n            else {\r\n                this._uploadStoredFiles();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Defines the private (internal) API for FineUploaderBasic mode.\r\n     */\r\n    qq.basePrivateApi = {\r\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\r\n        _addCannedFile: function(sessionData) {\r\n            var self = this;\r\n\r\n            return this._uploadData.addFile({\r\n                uuid: sessionData.uuid,\r\n                name: sessionData.name,\r\n                size: sessionData.size,\r\n                status: qq.status.UPLOAD_SUCCESSFUL,\r\n                onBeforeStatusChange: function(id) {\r\n                    sessionData.deleteFileEndpoint && self.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\r\n                    sessionData.deleteFileParams && self.setDeleteFileParams(sessionData.deleteFileParams, id);\r\n\r\n                    if (sessionData.thumbnailUrl) {\r\n                        self._thumbnailUrls[id] = sessionData.thumbnailUrl;\r\n                    }\r\n\r\n                    self._netUploaded++;\r\n                    self._netUploadedOrQueued++;\r\n                }\r\n            });\r\n        },\r\n\r\n        _annotateWithButtonId: function(file, associatedInput) {\r\n            if (qq.isFile(file)) {\r\n                file.qqButtonId = this._getButtonId(associatedInput);\r\n            }\r\n        },\r\n\r\n        _batchError: function(message) {\r\n            this._options.callbacks.onError(null, null, message, undefined);\r\n        },\r\n\r\n        _createDeleteHandler: function() {\r\n            var self = this;\r\n\r\n            return new qq.DeleteFileAjaxRequester({\r\n                method: this._options.deleteFile.method.toUpperCase(),\r\n                maxConnections: this._options.maxConnections,\r\n                uuidParamName: this._options.request.uuidName,\r\n                customHeaders: this._deleteFileCustomHeadersStore,\r\n                paramsStore: this._deleteFileParamsStore,\r\n                endpointStore: this._deleteFileEndpointStore,\r\n                cors: this._options.cors,\r\n                log: qq.bind(self.log, self),\r\n                onDelete: function(id) {\r\n                    self._onDelete(id);\r\n                    self._options.callbacks.onDelete(id);\r\n                },\r\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\r\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\r\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\r\n                }\r\n\r\n            });\r\n        },\r\n\r\n        _createPasteHandler: function() {\r\n            var self = this;\r\n\r\n            return new qq.PasteSupport({\r\n                targetElement: this._options.paste.targetElement,\r\n                callbacks: {\r\n                    log: qq.bind(self.log, self),\r\n                    pasteReceived: function(blob) {\r\n                        self._handleCheckedCallback({\r\n                            name: \"onPasteReceived\",\r\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\r\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\r\n                            identifier: \"pasted image\"\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        _createStore: function(initialValue, _readOnlyValues_) {\r\n            var store = {},\r\n                catchall = initialValue,\r\n                perIdReadOnlyValues = {},\r\n                readOnlyValues = _readOnlyValues_,\r\n                copy = function(orig) {\r\n                    if (qq.isObject(orig)) {\r\n                        return qq.extend({}, orig);\r\n                    }\r\n                    return orig;\r\n                },\r\n                getReadOnlyValues = function() {\r\n                    if (qq.isFunction(readOnlyValues)) {\r\n                        return readOnlyValues();\r\n                    }\r\n                    return readOnlyValues;\r\n                },\r\n                includeReadOnlyValues = function(id, existing) {\r\n                    if (readOnlyValues && qq.isObject(existing)) {\r\n                        qq.extend(existing, getReadOnlyValues());\r\n                    }\r\n\r\n                    if (perIdReadOnlyValues[id]) {\r\n                        qq.extend(existing, perIdReadOnlyValues[id]);\r\n                    }\r\n                };\r\n\r\n            return {\r\n                set: function(val, id) {\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    if (id == null) {\r\n                        store = {};\r\n                        catchall = copy(val);\r\n                    }\r\n                    else {\r\n                        store[id] = copy(val);\r\n                    }\r\n                },\r\n\r\n                get: function(id) {\r\n                    var values;\r\n\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    if (id != null && store[id]) {\r\n                        values = store[id];\r\n                    }\r\n                    else {\r\n                        values = copy(catchall);\r\n                    }\r\n\r\n                    includeReadOnlyValues(id, values);\r\n\r\n                    return copy(values);\r\n                },\r\n\r\n                addReadOnly: function(id, values) {\r\n                    // Only applicable to Object stores\r\n                    if (qq.isObject(store)) {\r\n                        // If null ID, apply readonly values to all files\r\n                        if (id === null) {\r\n                            if (qq.isFunction(values)) {\r\n                                readOnlyValues = values;\r\n                            }\r\n                            else {\r\n                                readOnlyValues = readOnlyValues || {};\r\n                                qq.extend(readOnlyValues, values);\r\n                            }\r\n                        }\r\n                        else {\r\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\r\n                            qq.extend(perIdReadOnlyValues[id], values);\r\n                        }\r\n                    }\r\n                },\r\n\r\n                remove: function(fileId) {\r\n                    return delete store[fileId];\r\n                },\r\n\r\n                reset: function() {\r\n                    store = {};\r\n                    perIdReadOnlyValues = {};\r\n                    catchall = initialValue;\r\n                }\r\n            };\r\n        },\r\n\r\n        _createUploadDataTracker: function() {\r\n            var self = this;\r\n\r\n            return new qq.UploadData({\r\n                getName: function(id) {\r\n                    return self.getName(id);\r\n                },\r\n                getUuid: function(id) {\r\n                    return self.getUuid(id);\r\n                },\r\n                getSize: function(id) {\r\n                    return self.getSize(id);\r\n                },\r\n                onStatusChange: function(id, oldStatus, newStatus) {\r\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\r\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\r\n                    self._maybeAllComplete(id, newStatus);\r\n\r\n                    if (self._totalProgress) {\r\n                        setTimeout(function() {\r\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\r\n                        }, 0);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Generate a tracked upload button.\r\n         *\r\n         * @param spec Object containing a required `element` property\r\n         * along with optional `multiple`, `accept`, and `folders`.\r\n         * @returns {qq.UploadButton}\r\n         * @private\r\n         */\r\n        _createUploadButton: function(spec) {\r\n            var self = this,\r\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\r\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\r\n                button;\r\n\r\n            function allowMultiple() {\r\n                if (qq.supportedFeatures.ajaxUploading) {\r\n                    // Workaround for bug in iOS7+ (see #1039)\r\n                    if (self._options.workarounds.iosEmptyVideos &&\r\n                        qq.ios() &&\r\n                        !qq.ios6() &&\r\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\r\n\r\n                        return false;\r\n                    }\r\n\r\n                    if (spec.multiple === undefined) {\r\n                        return self._options.multiple;\r\n                    }\r\n\r\n                    return spec.multiple;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            button = new qq.UploadButton({\r\n                acceptFiles: acceptFiles,\r\n                element: spec.element,\r\n                focusClass: this._options.classes.buttonFocus,\r\n                folders: spec.folders,\r\n                hoverClass: this._options.classes.buttonHover,\r\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\r\n                multiple: allowMultiple(),\r\n                name: this._options.request.inputName,\r\n                onChange: function(input) {\r\n                    self._onInputChange(input);\r\n                },\r\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\r\n            });\r\n\r\n            this._disposeSupport.addDisposer(function() {\r\n                button.dispose();\r\n            });\r\n\r\n            self._buttons.push(button);\r\n\r\n            return button;\r\n        },\r\n\r\n        _createUploadHandler: function(additionalOptions, namespace) {\r\n            var self = this,\r\n                lastOnProgress = {},\r\n                options = {\r\n                    debug: this._options.debug,\r\n                    maxConnections: this._options.maxConnections,\r\n                    cors: this._options.cors,\r\n                    paramsStore: this._paramsStore,\r\n                    endpointStore: this._endpointStore,\r\n                    chunking: this._options.chunking,\r\n                    resume: this._options.resume,\r\n                    blobs: this._options.blobs,\r\n                    log: qq.bind(self.log, self),\r\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\r\n                    onProgress: function(id, name, loaded, total) {\r\n                        if (loaded < 0 || total < 0) {\r\n                            return;\r\n                        }\r\n\r\n                        if (lastOnProgress[id]) {\r\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\r\n                                self._onProgress(id, name, loaded, total);\r\n                                self._options.callbacks.onProgress(id, name, loaded, total);\r\n                            }\r\n                        }\r\n                        else {\r\n                            self._onProgress(id, name, loaded, total);\r\n                            self._options.callbacks.onProgress(id, name, loaded, total);\r\n                        }\r\n\r\n                        lastOnProgress[id] = {loaded: loaded, total: total};\r\n\r\n                    },\r\n                    onComplete: function(id, name, result, xhr) {\r\n                        delete lastOnProgress[id];\r\n\r\n                        var status = self.getUploads({id: id}).status,\r\n                            retVal;\r\n\r\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\r\n                        // invoked by the browser multiple times for the same XHR instance with the same state\r\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\r\n                        // done this.\r\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\r\n                            return;\r\n                        }\r\n\r\n                        retVal = self._onComplete(id, name, result, xhr);\r\n\r\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\r\n                        // until the promise has been fulfilled.\r\n                        if (retVal instanceof  qq.Promise) {\r\n                            retVal.done(function() {\r\n                                self._options.callbacks.onComplete(id, name, result, xhr);\r\n                            });\r\n                        }\r\n                        else {\r\n                            self._options.callbacks.onComplete(id, name, result, xhr);\r\n                        }\r\n                    },\r\n                    onCancel: function(id, name, cancelFinalizationEffort) {\r\n                        var promise = new qq.Promise();\r\n\r\n                        self._handleCheckedCallback({\r\n                            name: \"onCancel\",\r\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\r\n                            onFailure: promise.failure,\r\n                            onSuccess: function() {\r\n                                cancelFinalizationEffort.then(function() {\r\n                                    self._onCancel(id, name);\r\n                                });\r\n\r\n                                promise.success();\r\n                            },\r\n                            identifier: id\r\n                        });\r\n\r\n                        return promise;\r\n                    },\r\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\r\n                    onUpload: function(id, name) {\r\n                        self._onUpload(id, name);\r\n                        self._options.callbacks.onUpload(id, name);\r\n                    },\r\n                    onUploadChunk: function(id, name, chunkData) {\r\n                        self._onUploadChunk(id, chunkData);\r\n                        self._options.callbacks.onUploadChunk(id, name, chunkData);\r\n                    },\r\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\r\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\r\n                    },\r\n                    onResume: function(id, name, chunkData) {\r\n                        return self._options.callbacks.onResume(id, name, chunkData);\r\n                    },\r\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\r\n                        return self._onAutoRetry.apply(self, arguments);\r\n                    },\r\n                    onUuidChanged: function(id, newUuid) {\r\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\r\n                        self.setUuid(id, newUuid);\r\n                    },\r\n                    getName: qq.bind(self.getName, self),\r\n                    getUuid: qq.bind(self.getUuid, self),\r\n                    getSize: qq.bind(self.getSize, self),\r\n                    setSize: qq.bind(self._setSize, self),\r\n                    getDataByUuid: function(uuid) {\r\n                        return self.getUploads({uuid: uuid});\r\n                    },\r\n                    isQueued: function(id) {\r\n                        var status = self.getUploads({id: id}).status;\r\n                        return status === qq.status.QUEUED ||\r\n                            status === qq.status.SUBMITTED ||\r\n                            status === qq.status.UPLOAD_RETRYING ||\r\n                            status === qq.status.PAUSED;\r\n                    },\r\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\r\n                    getIdsInBatch: self._uploadData.getIdsInBatch\r\n                };\r\n\r\n            qq.each(this._options.request, function(prop, val) {\r\n                options[prop] = val;\r\n            });\r\n\r\n            options.customHeaders = this._customHeadersStore;\r\n\r\n            if (additionalOptions) {\r\n                qq.each(additionalOptions, function(key, val) {\r\n                    options[key] = val;\r\n                });\r\n            }\r\n\r\n            return new qq.UploadHandlerController(options, namespace);\r\n        },\r\n\r\n        _fileOrBlobRejected: function(id) {\r\n            this._netUploadedOrQueued--;\r\n            this._uploadData.setStatus(id, qq.status.REJECTED);\r\n        },\r\n\r\n        _formatSize: function(bytes) {\r\n            if (bytes === 0) {\r\n                return bytes + this._options.text.sizeSymbols[0];\r\n            }\r\n            var i = -1;\r\n            do {\r\n                bytes = bytes / 1000;\r\n                i++;\r\n            } while (bytes > 999);\r\n\r\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\r\n        },\r\n\r\n        // Creates an internal object that tracks various properties of each extra button,\r\n        // and then actually creates the extra button.\r\n        _generateExtraButtonSpecs: function() {\r\n            var self = this;\r\n\r\n            this._extraButtonSpecs = {};\r\n\r\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\r\n                var multiple = extraButtonOptionEntry.multiple,\r\n                    validation = qq.extend({}, self._options.validation, true),\r\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\r\n\r\n                if (multiple === undefined) {\r\n                    multiple = self._options.multiple;\r\n                }\r\n\r\n                if (extraButtonSpec.validation) {\r\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\r\n                }\r\n\r\n                qq.extend(extraButtonSpec, {\r\n                    multiple: multiple,\r\n                    validation: validation\r\n                }, true);\r\n\r\n                self._initExtraButton(extraButtonSpec);\r\n            });\r\n        },\r\n\r\n        _getButton: function(buttonId) {\r\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\r\n\r\n            if (extraButtonsSpec) {\r\n                return extraButtonsSpec.element;\r\n            }\r\n            else if (buttonId === this._defaultButtonId) {\r\n                return this._options.button;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets the internally used tracking ID for a button.\r\n         *\r\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\r\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\r\n         * @private\r\n         */\r\n        _getButtonId: function(buttonOrFileInputOrFile) {\r\n            var inputs, fileInput,\r\n                fileBlobOrInput = buttonOrFileInputOrFile;\r\n\r\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\r\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\r\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\r\n            }\r\n\r\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\r\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\r\n                if (qq.isFile(fileBlobOrInput)) {\r\n                    return fileBlobOrInput.qqButtonId;\r\n                }\r\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\r\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\r\n\r\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\r\n                }\r\n\r\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\r\n\r\n                qq.each(inputs, function(idx, input) {\r\n                    if (input.getAttribute(\"type\") === \"file\") {\r\n                        fileInput = input;\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                if (fileInput) {\r\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\r\n                }\r\n            }\r\n        },\r\n\r\n        _getNotFinished: function() {\r\n            return this._uploadData.retrieve({\r\n                status: [\r\n                    qq.status.UPLOADING,\r\n                    qq.status.UPLOAD_RETRYING,\r\n                    qq.status.QUEUED,\r\n                    qq.status.SUBMITTING,\r\n                    qq.status.SUBMITTED,\r\n                    qq.status.PAUSED\r\n                ]\r\n            }).length;\r\n        },\r\n\r\n        // Get the validation options for this button.  Could be the default validation option\r\n        // or a specific one assigned to this particular button.\r\n        _getValidationBase: function(buttonId) {\r\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\r\n\r\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\r\n        },\r\n\r\n        _getValidationDescriptor: function(fileWrapper) {\r\n            if (fileWrapper.file instanceof qq.BlobProxy) {\r\n                return {\r\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\r\n                    size: fileWrapper.file.referenceBlob.size\r\n                };\r\n            }\r\n\r\n            return {\r\n                name: this.getUploads({id: fileWrapper.id}).name,\r\n                size: this.getUploads({id: fileWrapper.id}).size\r\n            };\r\n        },\r\n\r\n        _getValidationDescriptors: function(fileWrappers) {\r\n            var self = this,\r\n                fileDescriptors = [];\r\n\r\n            qq.each(fileWrappers, function(idx, fileWrapper) {\r\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\r\n            });\r\n\r\n            return fileDescriptors;\r\n        },\r\n\r\n        // Allows camera access on either the default or an extra button for iOS devices.\r\n        _handleCameraAccess: function() {\r\n            if (this._options.camera.ios && qq.ios()) {\r\n                var acceptIosCamera = \"image/*;capture=camera\",\r\n                    button = this._options.camera.button,\r\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\r\n                    optionRoot = this._options;\r\n\r\n                // If we are not targeting the default button, it is an \"extra\" button\r\n                if (buttonId && buttonId !== this._defaultButtonId) {\r\n                    optionRoot = this._extraButtonSpecs[buttonId];\r\n                }\r\n\r\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\r\n                optionRoot.multiple = false;\r\n\r\n                // update the options\r\n                if (optionRoot.validation.acceptFiles === null) {\r\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\r\n                }\r\n                else {\r\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\r\n                }\r\n\r\n                // update the already-created button\r\n                qq.each(this._buttons, function(idx, button) {\r\n                    if (button.getButtonId() === buttonId) {\r\n                        button.setMultiple(optionRoot.multiple);\r\n                        button.setAcceptFiles(optionRoot.acceptFiles);\r\n\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        _handleCheckedCallback: function(details) {\r\n            var self = this,\r\n                callbackRetVal = details.callback();\r\n\r\n            if (qq.isGenericPromise(callbackRetVal)) {\r\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\r\n                return callbackRetVal.then(\r\n                    function(successParam) {\r\n                        self.log(details.name + \" promise success for \" + details.identifier);\r\n                        details.onSuccess(successParam);\r\n                    },\r\n                    function() {\r\n                        if (details.onFailure) {\r\n                            self.log(details.name + \" promise failure for \" + details.identifier);\r\n                            details.onFailure();\r\n                        }\r\n                        else {\r\n                            self.log(details.name + \" promise failure for \" + details.identifier);\r\n                        }\r\n                    });\r\n            }\r\n\r\n            if (callbackRetVal !== false) {\r\n                details.onSuccess(callbackRetVal);\r\n            }\r\n            else {\r\n                if (details.onFailure) {\r\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\r\n                    details.onFailure();\r\n                }\r\n                else {\r\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\r\n                }\r\n            }\r\n\r\n            return callbackRetVal;\r\n        },\r\n\r\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\r\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\r\n            var self = this,\r\n                uuid = qq.getUniqueId(),\r\n                size = -1,\r\n                name = qq.getFilename(file),\r\n                actualFile = file.blob || file,\r\n                handler = this._customNewFileHandler ?\r\n                    this._customNewFileHandler :\r\n                    qq.bind(self._handleNewFileGeneric, self);\r\n\r\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\r\n                size = actualFile.size;\r\n            }\r\n\r\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\r\n                uploadData: self._uploadData,\r\n                paramsStore: self._paramsStore,\r\n                addFileToHandler: function(id, file) {\r\n                    self._handler.add(id, file);\r\n                    self._netUploadedOrQueued++;\r\n                    self._trackButton(id);\r\n                }\r\n            });\r\n        },\r\n\r\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\r\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\r\n\r\n            this._handler.add(id, file);\r\n            this._trackButton(id);\r\n\r\n            this._netUploadedOrQueued++;\r\n\r\n            fileList.push({id: id, file: file});\r\n        },\r\n\r\n        _handlePasteSuccess: function(blob, extSuppliedName) {\r\n            var extension = blob.type.split(\"/\")[1],\r\n                name = extSuppliedName;\r\n\r\n            /*jshint eqeqeq: true, eqnull: true*/\r\n            if (name == null) {\r\n                name = this._options.paste.defaultName;\r\n            }\r\n\r\n            name += \".\" + extension;\r\n\r\n            this.addFiles({\r\n                name: name,\r\n                blob: blob\r\n            });\r\n        },\r\n\r\n        _handleDeleteSuccess: function(id) {\r\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\r\n                var name = this.getName(id);\r\n\r\n                this._netUploadedOrQueued--;\r\n                this._netUploaded--;\r\n                this._handler.expunge(id);\r\n                this._uploadData.setStatus(id, qq.status.DELETED);\r\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\r\n            }\r\n        },\r\n\r\n        _handleDeleteFailed: function(id, xhrOrXdr) {\r\n            var name = this.getName(id);\r\n\r\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\r\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\r\n\r\n            // Check first if xhrOrXdr is actually passed or valid\r\n            // For error reporting, we only have access to the response status if this is not\r\n            // an `XDomainRequest`.\r\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\r\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\r\n            }\r\n            else {\r\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\r\n            }\r\n        },\r\n\r\n        // Creates an extra button element\r\n        _initExtraButton: function(spec) {\r\n            var button = this._createUploadButton({\r\n                accept: spec.validation.acceptFiles,\r\n                allowedExtensions: spec.validation.allowedExtensions,\r\n                element: spec.element,\r\n                folders: spec.folders,\r\n                multiple: spec.multiple,\r\n                title: spec.fileInputTitle\r\n            });\r\n\r\n            this._extraButtonSpecs[button.getButtonId()] = spec;\r\n        },\r\n\r\n        _initFormSupportAndParams: function() {\r\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\r\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\r\n            );\r\n\r\n            if (this._formSupport && this._formSupport.attachedToForm) {\r\n                this._paramsStore = this._createStore(\r\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\r\n                );\r\n\r\n                this._options.autoUpload = this._formSupport.newAutoUpload;\r\n                if (this._formSupport.newEndpoint) {\r\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\r\n                }\r\n            }\r\n            else {\r\n                this._paramsStore = this._createStore(this._options.request.params);\r\n            }\r\n        },\r\n\r\n        _isDeletePossible: function() {\r\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\r\n                return false;\r\n            }\r\n\r\n            if (this._options.cors.expected) {\r\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\r\n                    return true;\r\n                }\r\n\r\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        _isAllowedExtension: function(allowed, fileName) {\r\n            var valid = false;\r\n\r\n            if (!allowed.length) {\r\n                return true;\r\n            }\r\n\r\n            qq.each(allowed, function(idx, allowedExt) {\r\n                /**\r\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\r\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\r\n                 */\r\n                if (qq.isString(allowedExt)) {\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\r\n\r\n                    if (fileName.match(extRegex) != null) {\r\n                        valid = true;\r\n                        return false;\r\n                    }\r\n                }\r\n            });\r\n\r\n            return valid;\r\n        },\r\n\r\n        /**\r\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\r\n         *\r\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\r\n         * @param maybeNameOrNames names of the items that have failed, if applicable\r\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\r\n         * @private\r\n         */\r\n        _itemError: function(code, maybeNameOrNames, item) {\r\n            var message = this._options.messages[code],\r\n                allowedExtensions = [],\r\n                names = [].concat(maybeNameOrNames),\r\n                name = names[0],\r\n                buttonId = this._getButtonId(item),\r\n                validationBase = this._getValidationBase(buttonId),\r\n                extensionsForMessage, placeholderMatch;\r\n\r\n            function r(name, replacement) { message = message.replace(name, replacement); }\r\n\r\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\r\n                /**\r\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\r\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\r\n                 */\r\n                if (qq.isString(allowedExtension)) {\r\n                    allowedExtensions.push(allowedExtension);\r\n                }\r\n            });\r\n\r\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\r\n\r\n            r(\"{file}\", this._options.formatFileName(name));\r\n            r(\"{extensions}\", extensionsForMessage);\r\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\r\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\r\n\r\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\r\n            if (placeholderMatch !== null) {\r\n                qq.each(placeholderMatch, function(idx, placeholder) {\r\n                    r(placeholder, names[idx]);\r\n                });\r\n            }\r\n\r\n            this._options.callbacks.onError(null, name, message, undefined);\r\n\r\n            return message;\r\n        },\r\n\r\n        /**\r\n         * Conditionally orders a manual retry of a failed upload.\r\n         *\r\n         * @param id File ID of the failed upload\r\n         * @param callback Optional callback to invoke if a retry is prudent.\r\n         * In lieu of asking the upload handler to retry.\r\n         * @returns {boolean} true if a manual retry will occur\r\n         * @private\r\n         */\r\n        _manualRetry: function(id, callback) {\r\n            if (this._onBeforeManualRetry(id)) {\r\n                this._netUploadedOrQueued++;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\r\n\r\n                if (callback) {\r\n                    callback(id);\r\n                }\r\n                else {\r\n                    this._handler.retry(id);\r\n                }\r\n\r\n                return true;\r\n            }\r\n        },\r\n\r\n        _maybeAllComplete: function(id, status) {\r\n            var self = this,\r\n                notFinished = this._getNotFinished();\r\n\r\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\r\n                this._succeededSinceLastAllComplete.push(id);\r\n            }\r\n            else if (status === qq.status.UPLOAD_FAILED) {\r\n                this._failedSinceLastAllComplete.push(id);\r\n            }\r\n\r\n            if (notFinished === 0 &&\r\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\r\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\r\n                setTimeout(function() {\r\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        _maybeHandleIos8SafariWorkaround: function() {\r\n            var self = this;\r\n\r\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\r\n                setTimeout(function() {\r\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\r\n                }, 0);\r\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\r\n            }\r\n        },\r\n\r\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\r\n            // Assuming no one will actually set the response code to something other than 200\r\n            // and still set 'success' to true...\r\n            if (!response.success) {\r\n                if (xhr && xhr.status !== 200 && !response.error) {\r\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\r\n                }\r\n                else {\r\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\r\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\r\n                }\r\n            }\r\n        },\r\n\r\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\r\n            var self = this;\r\n\r\n            if (items.length > index) {\r\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\r\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\r\n                    setTimeout(function() {\r\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\r\n                            buttonId = self._getButtonId(items[index].file),\r\n                            button = self._getButton(buttonId);\r\n\r\n                        self._handleCheckedCallback({\r\n                            name: \"onValidate\",\r\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\r\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\r\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\r\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\r\n                        });\r\n                    }, 0);\r\n                }\r\n                else if (!validItem) {\r\n                    for (; index < items.length; index++) {\r\n                        self._fileOrBlobRejected(items[index].id);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        _onAllComplete: function(successful, failed) {\r\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\r\n\r\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\r\n\r\n            this._succeededSinceLastAllComplete = [];\r\n            this._failedSinceLastAllComplete = [];\r\n        },\r\n\r\n        /**\r\n         * Attempt to automatically retry a failed upload.\r\n         *\r\n         * @param id The file ID of the failed upload\r\n         * @param name The name of the file associated with the failed upload\r\n         * @param responseJSON Response from the server, parsed into a javascript object\r\n         * @param xhr Ajax transport used to send the failed request\r\n         * @param callback Optional callback to be invoked if a retry is prudent.\r\n         * Invoked in lieu of asking the upload handler to retry.\r\n         * @returns {boolean} true if an auto-retry will occur\r\n         * @private\r\n         */\r\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\r\n            var self = this;\r\n\r\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\r\n\r\n            if (self._shouldAutoRetry(id, name, responseJSON)) {\r\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\r\n\r\n                self._maybeParseAndSendUploadError.apply(self, arguments);\r\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\r\n                self._onBeforeAutoRetry(id, name);\r\n\r\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\r\n                self._retryTimeouts[id] = setTimeout(function() {\r\n                    self.log(\"Starting retry for \" + name + \"...\");\r\n\r\n                    if (callback) {\r\n                        callback(id);\r\n                    }\r\n                    else {\r\n                        self._handler.retry(id);\r\n                    }\r\n                }, retryWaitPeriod);\r\n\r\n                return true;\r\n            }\r\n        },\r\n\r\n        _onBeforeAutoRetry: function(id, name) {\r\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\r\n        },\r\n\r\n        //return false if we should not attempt the requested retry\r\n        _onBeforeManualRetry: function(id) {\r\n            var itemLimit = this._currentItemLimit,\r\n                fileName;\r\n\r\n            if (this._preventRetries[id]) {\r\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\r\n                return false;\r\n            }\r\n            else if (this._handler.isValid(id)) {\r\n                fileName = this.getName(id);\r\n\r\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\r\n                    return false;\r\n                }\r\n\r\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\r\n                    this._itemError(\"retryFailTooManyItems\");\r\n                    return false;\r\n                }\r\n\r\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onCancel: function(id, name) {\r\n            this._netUploadedOrQueued--;\r\n\r\n            clearTimeout(this._retryTimeouts[id]);\r\n\r\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\r\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\r\n                this._storedIds.splice(storedItemIndex, 1);\r\n            }\r\n\r\n            this._uploadData.setStatus(id, qq.status.CANCELED);\r\n        },\r\n\r\n        _onComplete: function(id, name, result, xhr) {\r\n            if (!result.success) {\r\n                this._netUploadedOrQueued--;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\r\n\r\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\r\n                    this._preventRetries[id] = true;\r\n                }\r\n            }\r\n            else {\r\n                if (result.thumbnailUrl) {\r\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\r\n                }\r\n\r\n                this._netUploaded++;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\r\n            }\r\n\r\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\r\n\r\n            return result.success ? true : false;\r\n        },\r\n\r\n        _onDelete: function(id) {\r\n            this._uploadData.setStatus(id, qq.status.DELETING);\r\n        },\r\n\r\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\r\n            var name = this.getName(id);\r\n\r\n            if (isError) {\r\n                this._handleDeleteFailed(id, xhrOrXdr);\r\n            }\r\n            else {\r\n                this._handleDeleteSuccess(id);\r\n            }\r\n        },\r\n\r\n        _onInputChange: function(input) {\r\n            var fileIndex;\r\n\r\n            if (qq.supportedFeatures.ajaxUploading) {\r\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\r\n                    this._annotateWithButtonId(input.files[fileIndex], input);\r\n                }\r\n\r\n                this.addFiles(input.files);\r\n            }\r\n            // Android 2.3.x will fire `onchange` even if no file has been selected\r\n            else if (input.value.length > 0) {\r\n                this.addFiles(input);\r\n            }\r\n\r\n            qq.each(this._buttons, function(idx, button) {\r\n                button.reset();\r\n            });\r\n        },\r\n\r\n        _onProgress: function(id, name, loaded, total) {\r\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\r\n        },\r\n\r\n        _onSubmit: function(id, name) {\r\n            //nothing to do yet in core uploader\r\n        },\r\n\r\n        _onSubmitCallbackSuccess: function(id, name) {\r\n            this._onSubmit.apply(this, arguments);\r\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\r\n            this._onSubmitted.apply(this, arguments);\r\n\r\n            if (this._options.autoUpload) {\r\n                this._options.callbacks.onSubmitted.apply(this, arguments);\r\n                this._uploadFile(id);\r\n            }\r\n            else {\r\n                this._storeForLater(id);\r\n                this._options.callbacks.onSubmitted.apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\r\n            var uuid = this.getUuid(id),\r\n                adjustedOnSuccessCallback;\r\n\r\n            if (onSuccessCallback) {\r\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\r\n            }\r\n\r\n            if (this._isDeletePossible()) {\r\n                this._handleCheckedCallback({\r\n                    name: \"onSubmitDelete\",\r\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\r\n                    onSuccess: adjustedOnSuccessCallback ||\r\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\r\n                    identifier: id\r\n                });\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\r\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onSubmitted: function(id) {\r\n            //nothing to do in the base uploader\r\n        },\r\n\r\n        _onTotalProgress: function(loaded, total) {\r\n            this._options.callbacks.onTotalProgress(loaded, total);\r\n        },\r\n\r\n        _onUploadPrep: function(id) {\r\n            // nothing to do in the core uploader for now\r\n        },\r\n\r\n        _onUpload: function(id, name) {\r\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\r\n        },\r\n\r\n        _onUploadChunk: function(id, chunkData) {\r\n            //nothing to do in the base uploader\r\n        },\r\n\r\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\r\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\r\n            if (newStatus === qq.status.PAUSED) {\r\n                clearTimeout(this._retryTimeouts[id]);\r\n            }\r\n        },\r\n\r\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\r\n            var self = this;\r\n\r\n            qq.each(fileWrappers, function(idx, fileWrapper) {\r\n                self._fileOrBlobRejected(fileWrapper.id);\r\n            });\r\n        },\r\n\r\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\r\n            var errorMessage,\r\n                itemLimit = this._currentItemLimit,\r\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\r\n\r\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\r\n                if (items.length > 0) {\r\n                    this._handleCheckedCallback({\r\n                        name: \"onValidate\",\r\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\r\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\r\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\r\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\r\n                    });\r\n                }\r\n                else {\r\n                    this._itemError(\"noFilesError\");\r\n                }\r\n            }\r\n            else {\r\n                this._onValidateBatchCallbackFailure(items);\r\n                errorMessage = this._options.messages.tooManyItemsError\r\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\r\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\r\n                this._batchError(errorMessage);\r\n            }\r\n        },\r\n\r\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\r\n            var nextIndex = index + 1;\r\n\r\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\r\n\r\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\r\n        },\r\n\r\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\r\n            var self = this,\r\n                nextIndex = index + 1,\r\n                validationDescriptor = this._getValidationDescriptor(items[index]);\r\n\r\n            this._validateFileOrBlobData(items[index], validationDescriptor)\r\n                .then(\r\n                function() {\r\n                    self._upload(items[index].id, params, endpoint);\r\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\r\n                },\r\n                function() {\r\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\r\n                }\r\n            );\r\n        },\r\n\r\n        _prepareItemsForUpload: function(items, params, endpoint) {\r\n            if (items.length === 0) {\r\n                this._itemError(\"noFilesError\");\r\n                return;\r\n            }\r\n\r\n            var validationDescriptors = this._getValidationDescriptors(items),\r\n                buttonId = this._getButtonId(items[0].file),\r\n                button = this._getButton(buttonId);\r\n\r\n            this._handleCheckedCallback({\r\n                name: \"onValidateBatch\",\r\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\r\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\r\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\r\n                identifier: \"batch validation\"\r\n            });\r\n        },\r\n\r\n        _preventLeaveInProgress: function() {\r\n            var self = this;\r\n\r\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\r\n                if (self.getInProgress()) {\r\n                    e = e || window.event;\r\n                    // for ie, ff\r\n                    e.returnValue = self._options.messages.onLeave;\r\n                    // for webkit\r\n                    return self._options.messages.onLeave;\r\n                }\r\n            });\r\n        },\r\n\r\n        // Attempts to refresh session data only if the `qq.Session` module exists\r\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\r\n        // callback will be invoked once the refresh is complete.\r\n        _refreshSessionData: function() {\r\n            var self = this,\r\n                options = this._options.session;\r\n\r\n            /* jshint eqnull:true */\r\n            if (qq.Session && this._options.session.endpoint != null) {\r\n                if (!this._session) {\r\n                    qq.extend(options, {cors: this._options.cors});\r\n\r\n                    options.log = qq.bind(this.log, this);\r\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\r\n\r\n                    this._session = new qq.Session(options);\r\n                }\r\n\r\n                setTimeout(function() {\r\n                    self._session.refresh().then(function(response, xhrOrXdr) {\r\n                        self._sessionRequestComplete();\r\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\r\n\r\n                    }, function(response, xhrOrXdr) {\r\n\r\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\r\n                    });\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        _sessionRequestComplete: function() {},\r\n\r\n        _setSize: function(id, newSize) {\r\n            this._uploadData.updateSize(id, newSize);\r\n            this._totalProgress && this._totalProgress.onNewSize(id);\r\n        },\r\n\r\n        _shouldAutoRetry: function(id, name, responseJSON) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            /*jshint laxbreak: true */\r\n            if (!this._preventRetries[id]\r\n                && this._options.retry.enableAuto\r\n                && uploadData.status !== qq.status.PAUSED) {\r\n\r\n                if (this._autoRetries[id] === undefined) {\r\n                    this._autoRetries[id] = 0;\r\n                }\r\n\r\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\r\n                    this._autoRetries[id] += 1;\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        _storeForLater: function(id) {\r\n            this._storedIds.push(id);\r\n        },\r\n\r\n        // Maps a file with the button that was used to select it.\r\n        _trackButton: function(id) {\r\n            var buttonId;\r\n\r\n            if (qq.supportedFeatures.ajaxUploading) {\r\n                buttonId = this._handler.getFile(id).qqButtonId;\r\n            }\r\n            else {\r\n                buttonId = this._getButtonId(this._handler.getInput(id));\r\n            }\r\n\r\n            if (buttonId) {\r\n                this._buttonIdsForFileIds[id] = buttonId;\r\n            }\r\n        },\r\n\r\n        _updateFormSupportAndParams: function(formElementOrId) {\r\n            this._options.form.element = formElementOrId;\r\n\r\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\r\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\r\n                );\r\n\r\n            if (this._formSupport && this._formSupport.attachedToForm) {\r\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\r\n\r\n                this._options.autoUpload = this._formSupport.newAutoUpload;\r\n                if (this._formSupport.newEndpoint) {\r\n                    this.setEndpoint(this._formSupport.newEndpoint);\r\n                }\r\n            }\r\n        },\r\n\r\n        _upload: function(id, params, endpoint) {\r\n            var name = this.getName(id);\r\n\r\n            if (params) {\r\n                this.setParams(params, id);\r\n            }\r\n\r\n            if (endpoint) {\r\n                this.setEndpoint(endpoint, id);\r\n            }\r\n\r\n            this._handleCheckedCallback({\r\n                name: \"onSubmit\",\r\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\r\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\r\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\r\n                identifier: id\r\n            });\r\n        },\r\n\r\n        _uploadFile: function(id) {\r\n            if (!this._handler.upload(id)) {\r\n                this._uploadData.setStatus(id, qq.status.QUEUED);\r\n            }\r\n        },\r\n\r\n        _uploadStoredFiles: function() {\r\n            var idToUpload, stillSubmitting,\r\n                self = this;\r\n\r\n            while (this._storedIds.length) {\r\n                idToUpload = this._storedIds.shift();\r\n                this._uploadFile(idToUpload);\r\n            }\r\n\r\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\r\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\r\n            if (stillSubmitting) {\r\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\r\n                setTimeout(function() {\r\n                    self._uploadStoredFiles();\r\n                }, 1000);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Performs some internal validation checks on an item, defined in the `validation` option.\r\n         *\r\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\r\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\r\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\r\n         * @private\r\n         */\r\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\r\n            var self = this,\r\n                file = (function() {\r\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\r\n                        return fileWrapper.file.referenceBlob;\r\n                    }\r\n                    return fileWrapper.file;\r\n                }()),\r\n                name = validationDescriptor.name,\r\n                size = validationDescriptor.size,\r\n                buttonId = this._getButtonId(fileWrapper.file),\r\n                validationBase = this._getValidationBase(buttonId),\r\n                validityChecker = new qq.Promise();\r\n\r\n            validityChecker.then(\r\n                function() {},\r\n                function() {\r\n                    self._fileOrBlobRejected(fileWrapper.id, name);\r\n                });\r\n\r\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\r\n                this._itemError(\"typeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (!this._options.validation.allowEmpty && size === 0) {\r\n                this._itemError(\"emptyError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\r\n                this._itemError(\"sizeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (size > 0 && size < validationBase.minSizeLimit) {\r\n                this._itemError(\"minSizeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\r\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\r\n                    validityChecker.success,\r\n                    function(errorCode) {\r\n                        self._itemError(errorCode + \"ImageError\", name, file);\r\n                        validityChecker.failure();\r\n                    }\r\n                );\r\n            }\r\n            else {\r\n                validityChecker.success();\r\n            }\r\n\r\n            return validityChecker;\r\n        },\r\n\r\n        _wrapCallbacks: function() {\r\n            var self, safeCallback, prop;\r\n\r\n            self = this;\r\n\r\n            safeCallback = function(name, callback, args) {\r\n                var errorMsg;\r\n\r\n                try {\r\n                    return callback.apply(self, args);\r\n                }\r\n                catch (exception) {\r\n                    errorMsg = exception.message || exception.toString();\r\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\r\n                }\r\n            };\r\n\r\n            /* jshint forin: false, loopfunc: true */\r\n            for (prop in this._options.callbacks) {\r\n                (function() {\r\n                    var callbackName, callbackFunc;\r\n                    callbackName = prop;\r\n                    callbackFunc = self._options.callbacks[callbackName];\r\n                    self._options.callbacks[callbackName] = function() {\r\n                        return safeCallback(callbackName, callbackFunc, arguments);\r\n                    };\r\n                }());\r\n            }\r\n        }\r\n    };\r\n}());\r\n","/*globals qq*/\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.FineUploaderBasic = function(o) {\r\n        var self = this;\r\n\r\n        // These options define FineUploaderBasic mode.\r\n        this._options = {\r\n            debug: false,\r\n            button: null,\r\n            multiple: true,\r\n            maxConnections: 3,\r\n            disableCancelForFormUploads: false,\r\n            autoUpload: true,\r\n\r\n            request: {\r\n                customHeaders: {},\r\n                endpoint: \"/server/upload\",\r\n                filenameParam: \"qqfilename\",\r\n                forceMultipart: true,\r\n                inputName: \"qqfile\",\r\n                method: \"POST\",\r\n                params: {},\r\n                paramsInBody: true,\r\n                totalFileSizeName: \"qqtotalfilesize\",\r\n                uuidName: \"qquuid\"\r\n            },\r\n\r\n            validation: {\r\n                allowedExtensions: [],\r\n                sizeLimit: 0,\r\n                minSizeLimit: 0,\r\n                itemLimit: 0,\r\n                stopOnFirstInvalidFile: true,\r\n                acceptFiles: null,\r\n                image: {\r\n                    maxHeight: 0,\r\n                    maxWidth: 0,\r\n                    minHeight: 0,\r\n                    minWidth: 0\r\n                },\r\n                allowEmpty: false\r\n            },\r\n\r\n            callbacks: {\r\n                onSubmit: function(id, name) {},\r\n                onSubmitted: function(id, name) {},\r\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\r\n                onAllComplete: function(successful, failed) {},\r\n                onCancel: function(id, name) {},\r\n                onUpload: function(id, name) {},\r\n                onUploadChunk: function(id, name, chunkData) {},\r\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\r\n                onResume: function(id, fileName, chunkData) {},\r\n                onProgress: function(id, name, loaded, total) {},\r\n                onTotalProgress: function(loaded, total) {},\r\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\r\n                onAutoRetry: function(id, name, attemptNumber) {},\r\n                onManualRetry: function(id, name) {},\r\n                onValidateBatch: function(fileOrBlobData) {},\r\n                onValidate: function(fileOrBlobData) {},\r\n                onSubmitDelete: function(id) {},\r\n                onDelete: function(id) {},\r\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\r\n                onPasteReceived: function(blob) {},\r\n                onStatusChange: function(id, oldStatus, newStatus) {},\r\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\r\n            },\r\n\r\n            messages: {\r\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\r\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\r\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\r\n                emptyError: \"{file} is empty, please select files again without it.\",\r\n                noFilesError: \"No files to upload.\",\r\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\r\n                maxHeightImageError: \"Image is too tall.\",\r\n                maxWidthImageError: \"Image is too wide.\",\r\n                minHeightImageError: \"Image is not tall enough.\",\r\n                minWidthImageError: \"Image is not wide enough.\",\r\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\r\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\r\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\r\n            },\r\n\r\n            retry: {\r\n                enableAuto: false,\r\n                maxAutoAttempts: 3,\r\n                autoAttemptDelay: 5,\r\n                preventRetryResponseProperty: \"preventRetry\"\r\n            },\r\n\r\n            classes: {\r\n                buttonHover: \"qq-upload-button-hover\",\r\n                buttonFocus: \"qq-upload-button-focus\"\r\n            },\r\n\r\n            chunking: {\r\n                enabled: false,\r\n                concurrent: {\r\n                    enabled: false\r\n                },\r\n                mandatory: false,\r\n                paramNames: {\r\n                    partIndex: \"qqpartindex\",\r\n                    partByteOffset: \"qqpartbyteoffset\",\r\n                    chunkSize: \"qqchunksize\",\r\n                    totalFileSize: \"qqtotalfilesize\",\r\n                    totalParts: \"qqtotalparts\"\r\n                },\r\n                partSize: 2000000,\r\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\r\n                success: {\r\n                    endpoint: null\r\n                }\r\n            },\r\n\r\n            resume: {\r\n                enabled: false,\r\n                recordsExpireIn: 7, //days\r\n                paramNames: {\r\n                    resuming: \"qqresume\"\r\n                }\r\n            },\r\n\r\n            formatFileName: function(fileOrBlobName) {\r\n                return fileOrBlobName;\r\n            },\r\n\r\n            text: {\r\n                defaultResponseError: \"Upload failure reason unknown\",\r\n                fileInputTitle: \"file input\",\r\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\r\n            },\r\n\r\n            deleteFile: {\r\n                enabled: false,\r\n                method: \"DELETE\",\r\n                endpoint: \"/server/upload\",\r\n                customHeaders: {},\r\n                params: {}\r\n            },\r\n\r\n            cors: {\r\n                expected: false,\r\n                sendCredentials: false,\r\n                allowXdr: false\r\n            },\r\n\r\n            blobs: {\r\n                defaultName: \"misc_data\"\r\n            },\r\n\r\n            paste: {\r\n                targetElement: null,\r\n                defaultName: \"pasted_image\"\r\n            },\r\n\r\n            camera: {\r\n                ios: false,\r\n\r\n                // if ios is true: button is null means target the default button, otherwise target the button specified\r\n                button: null\r\n            },\r\n\r\n            // This refers to additional upload buttons to be handled by Fine Uploader.\r\n            // Each element is an object, containing `element` as the only required\r\n            // property.  The `element` must be a container that will ultimately\r\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\r\n            // Optional properties of each object include `multiple`, `validation`,\r\n            // and `folders`.\r\n            extraButtons: [],\r\n\r\n            // Depends on the session module.  Used to query the server for an initial file list\r\n            // during initialization and optionally after a `reset`.\r\n            session: {\r\n                endpoint: null,\r\n                params: {},\r\n                customHeaders: {},\r\n                refreshOnReset: true\r\n            },\r\n\r\n            // Send parameters associated with an existing form along with the files\r\n            form: {\r\n                // Element ID, HTMLElement, or null\r\n                element: \"qq-form\",\r\n\r\n                // Overrides the base `autoUpload`, unless `element` is null.\r\n                autoUpload: false,\r\n\r\n                // true = upload files on form submission (and squelch submit event)\r\n                interceptSubmit: true\r\n            },\r\n\r\n            // scale images client side, upload a new file for each scaled version\r\n            scaling: {\r\n                customResizer: null,\r\n\r\n                // send the original file as well\r\n                sendOriginal: true,\r\n\r\n                // fox orientation for scaled images\r\n                orient: true,\r\n\r\n                // If null, scaled image type will match reference image type.  This value will be referred to\r\n                // for any size record that does not specific a type.\r\n                defaultType: null,\r\n\r\n                defaultQuality: 80,\r\n\r\n                failureText: \"Failed to scale\",\r\n\r\n                includeExif: false,\r\n\r\n                // metadata about each requested scaled version\r\n                sizes: []\r\n            },\r\n\r\n            workarounds: {\r\n                iosEmptyVideos: true,\r\n                ios8SafariUploads: true,\r\n                ios8BrowserCrash: false\r\n            }\r\n        };\r\n\r\n        // Replace any default options with user defined ones\r\n        qq.extend(this._options, o, true);\r\n\r\n        this._buttons = [];\r\n        this._extraButtonSpecs = {};\r\n        this._buttonIdsForFileIds = [];\r\n\r\n        this._wrapCallbacks();\r\n        this._disposeSupport =  new qq.DisposeSupport();\r\n\r\n        this._storedIds = [];\r\n        this._autoRetries = [];\r\n        this._retryTimeouts = [];\r\n        this._preventRetries = [];\r\n        this._thumbnailUrls = [];\r\n\r\n        this._netUploadedOrQueued = 0;\r\n        this._netUploaded = 0;\r\n        this._uploadData = this._createUploadDataTracker();\r\n\r\n        this._initFormSupportAndParams();\r\n\r\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\r\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\r\n\r\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\r\n\r\n        this._endpointStore = this._createStore(this._options.request.endpoint);\r\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\r\n\r\n        this._handler = this._createUploadHandler();\r\n\r\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\r\n\r\n        if (this._options.button) {\r\n            this._defaultButtonId = this._createUploadButton({\r\n                element: this._options.button,\r\n                title: this._options.text.fileInputTitle\r\n            }).getButtonId();\r\n        }\r\n\r\n        this._generateExtraButtonSpecs();\r\n\r\n        this._handleCameraAccess();\r\n\r\n        if (this._options.paste.targetElement) {\r\n            if (qq.PasteSupport) {\r\n                this._pasteHandler = this._createPasteHandler();\r\n            }\r\n            else {\r\n                this.log(\"Paste support module not found\", \"error\");\r\n            }\r\n        }\r\n\r\n        this._preventLeaveInProgress();\r\n\r\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\r\n        this._refreshSessionData();\r\n\r\n        this._succeededSinceLastAllComplete = [];\r\n        this._failedSinceLastAllComplete = [];\r\n\r\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\r\n        if (this._scaler.enabled) {\r\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\r\n        }\r\n\r\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\r\n            this._totalProgress = new qq.TotalProgress(\r\n                qq.bind(this._onTotalProgress, this),\r\n\r\n                function(id) {\r\n                    var entry = self._uploadData.retrieve({id: id});\r\n                    return (entry && entry.size) || 0;\r\n                }\r\n            );\r\n        }\r\n\r\n        this._currentItemLimit = this._options.validation.itemLimit;\r\n    };\r\n\r\n    // Define the private & public API methods.\r\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\r\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\r\n}());\r\n","/*globals qq, XDomainRequest*/\r\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\r\nqq.AjaxRequester = function(o) {\r\n    \"use strict\";\r\n\r\n    var log, shouldParamsBeInQueryString,\r\n        queue = [],\r\n        requestData = {},\r\n        options = {\r\n            acceptHeader: null,\r\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\r\n            method: \"POST\",\r\n            contentType: \"application/x-www-form-urlencoded\",\r\n            maxConnections: 3,\r\n            customHeaders: {},\r\n            endpointStore: {},\r\n            paramsStore: {},\r\n            mandatedParams: {},\r\n            allowXRequestedWithAndCacheControl: true,\r\n            successfulResponseCodes: {\r\n                DELETE: [200, 202, 204],\r\n                PATCH: [200, 201, 202, 203, 204],\r\n                POST: [200, 201, 202, 203, 204],\r\n                PUT: [200, 201, 202, 203, 204],\r\n                GET: [200]\r\n            },\r\n            cors: {\r\n                expected: false,\r\n                sendCredentials: false\r\n            },\r\n            log: function(str, level) {},\r\n            onSend: function(id) {},\r\n            onComplete: function(id, xhrOrXdr, isError) {},\r\n            onProgress: null\r\n        };\r\n\r\n    qq.extend(options, o);\r\n    log = options.log;\r\n\r\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\r\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\r\n    }\r\n\r\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\r\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\r\n    // make a CORS request eligible to be exempt from preflighting.\r\n    function isSimpleMethod() {\r\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\r\n    }\r\n\r\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\r\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\r\n    // make a CORS request eligible to be exempt from preflighting.\r\n    function containsNonSimpleHeaders(headers) {\r\n        var containsNonSimple = false;\r\n\r\n        qq.each(containsNonSimple, function(idx, header) {\r\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\r\n                containsNonSimple = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        return containsNonSimple;\r\n    }\r\n\r\n    function isXdr(xhr) {\r\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\r\n        return options.cors.expected && xhr.withCredentials === undefined;\r\n    }\r\n\r\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\r\n    function getCorsAjaxTransport() {\r\n        var xhrOrXdr;\r\n\r\n        if (window.XMLHttpRequest || window.ActiveXObject) {\r\n            xhrOrXdr = qq.createXhrInstance();\r\n\r\n            if (xhrOrXdr.withCredentials === undefined) {\r\n                xhrOrXdr = new XDomainRequest();\r\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\r\n                xhrOrXdr.onload = function() {};\r\n                xhrOrXdr.onerror = function() {};\r\n                xhrOrXdr.ontimeout = function() {};\r\n                xhrOrXdr.onprogress = function() {};\r\n            }\r\n        }\r\n\r\n        return xhrOrXdr;\r\n    }\r\n\r\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\r\n    function getXhrOrXdr(id, suppliedXhr) {\r\n        var xhrOrXdr = requestData[id].xhr;\r\n\r\n        if (!xhrOrXdr) {\r\n            if (suppliedXhr) {\r\n                xhrOrXdr = suppliedXhr;\r\n            }\r\n            else {\r\n                if (options.cors.expected) {\r\n                    xhrOrXdr = getCorsAjaxTransport();\r\n                }\r\n                else {\r\n                    xhrOrXdr = qq.createXhrInstance();\r\n                }\r\n            }\r\n\r\n            requestData[id].xhr = xhrOrXdr;\r\n        }\r\n\r\n        return xhrOrXdr;\r\n    }\r\n\r\n    // Removes element from queue, sends next request\r\n    function dequeue(id) {\r\n        var i = qq.indexOf(queue, id),\r\n            max = options.maxConnections,\r\n            nextId;\r\n\r\n        delete requestData[id];\r\n        queue.splice(i, 1);\r\n\r\n        if (queue.length >= max && i < max) {\r\n            nextId = queue[max - 1];\r\n            sendRequest(nextId);\r\n        }\r\n    }\r\n\r\n    function onComplete(id, xdrError) {\r\n        var xhr = getXhrOrXdr(id),\r\n            method = options.method,\r\n            isError = xdrError === true;\r\n\r\n        dequeue(id);\r\n\r\n        if (isError) {\r\n            log(method + \" request for \" + id + \" has failed\", \"error\");\r\n        }\r\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\r\n            isError = true;\r\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\r\n        }\r\n\r\n        options.onComplete(id, xhr, isError);\r\n    }\r\n\r\n    function getParams(id) {\r\n        var onDemandParams = requestData[id].additionalParams,\r\n            mandatedParams = options.mandatedParams,\r\n            params;\r\n\r\n        if (options.paramsStore.get) {\r\n            params = options.paramsStore.get(id);\r\n        }\r\n\r\n        if (onDemandParams) {\r\n            qq.each(onDemandParams, function(name, val) {\r\n                params = params || {};\r\n                params[name] = val;\r\n            });\r\n        }\r\n\r\n        if (mandatedParams) {\r\n            qq.each(mandatedParams, function(name, val) {\r\n                params = params || {};\r\n                params[name] = val;\r\n            });\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n    function sendRequest(id, optXhr) {\r\n        var xhr = getXhrOrXdr(id, optXhr),\r\n            method = options.method,\r\n            params = getParams(id),\r\n            payload = requestData[id].payload,\r\n            url;\r\n\r\n        options.onSend(id);\r\n\r\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\r\n\r\n        // XDR and XHR status detection APIs differ a bit.\r\n        if (isXdr(xhr)) {\r\n            xhr.onload = getXdrLoadHandler(id);\r\n            xhr.onerror = getXdrErrorHandler(id);\r\n        }\r\n        else {\r\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\r\n        }\r\n\r\n        registerForUploadProgress(id);\r\n\r\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\r\n        xhr.open(method, url, true);\r\n\r\n        // Instruct the transport to send cookies along with the CORS request,\r\n        // unless we are using `XDomainRequest`, which is not capable of this.\r\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\r\n            xhr.withCredentials = true;\r\n        }\r\n\r\n        setHeaders(id);\r\n\r\n        log(\"Sending \" + method + \" request for \" + id);\r\n\r\n        if (payload) {\r\n            xhr.send(payload);\r\n        }\r\n        else if (shouldParamsBeInQueryString || !params) {\r\n            xhr.send();\r\n        }\r\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\r\n            xhr.send(qq.obj2url(params, \"\"));\r\n        }\r\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\r\n            xhr.send(JSON.stringify(params));\r\n        }\r\n        else {\r\n            xhr.send(params);\r\n        }\r\n\r\n        return xhr;\r\n    }\r\n\r\n    function createUrl(id, params, additionalQueryParams) {\r\n        var endpoint = options.endpointStore.get(id),\r\n            addToPath = requestData[id].addToPath;\r\n\r\n        /*jshint -W116,-W041 */\r\n        if (addToPath != undefined) {\r\n            endpoint += \"/\" + addToPath;\r\n        }\r\n\r\n        if (shouldParamsBeInQueryString && params) {\r\n            endpoint = qq.obj2url(params, endpoint);\r\n        }\r\n\r\n        if (additionalQueryParams) {\r\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\r\n        }\r\n\r\n        return endpoint;\r\n    }\r\n\r\n    // Invoked by the UA to indicate a number of possible states that describe\r\n    // a live `XMLHttpRequest` transport.\r\n    function getXhrReadyStateChangeHandler(id) {\r\n        return function() {\r\n            if (getXhrOrXdr(id).readyState === 4) {\r\n                onComplete(id);\r\n            }\r\n        };\r\n    }\r\n\r\n    function registerForUploadProgress(id) {\r\n        var onProgress = options.onProgress;\r\n\r\n        if (onProgress) {\r\n            getXhrOrXdr(id).upload.onprogress = function(e) {\r\n                if (e.lengthComputable) {\r\n                    onProgress(id, e.loaded, e.total);\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    // This will be called by IE to indicate **success** for an associated\r\n    // `XDomainRequest` transported request.\r\n    function getXdrLoadHandler(id) {\r\n        return function() {\r\n            onComplete(id);\r\n        };\r\n    }\r\n\r\n    // This will be called by IE to indicate **failure** for an associated\r\n    // `XDomainRequest` transported request.\r\n    function getXdrErrorHandler(id) {\r\n        return function() {\r\n            onComplete(id, true);\r\n        };\r\n    }\r\n\r\n    function setHeaders(id) {\r\n        var xhr = getXhrOrXdr(id),\r\n            customHeaders = options.customHeaders,\r\n            onDemandHeaders = requestData[id].additionalHeaders || {},\r\n            method = options.method,\r\n            allHeaders = {};\r\n\r\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\r\n        if (!isXdr(xhr)) {\r\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\r\n\r\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\r\n            if (options.allowXRequestedWithAndCacheControl) {\r\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\r\n                // OR the cross-origin request contains a non-simple method or header.\r\n                // This is done to ensure a preflight is not triggered exclusively based on the\r\n                // addition of these 2 non-simple headers.\r\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\r\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\r\n                }\r\n            }\r\n\r\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\r\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\r\n            }\r\n\r\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\r\n            qq.extend(allHeaders, onDemandHeaders);\r\n\r\n            qq.each(allHeaders, function(name, val) {\r\n                xhr.setRequestHeader(name, val);\r\n            });\r\n        }\r\n    }\r\n\r\n    function isResponseSuccessful(responseCode) {\r\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\r\n    }\r\n\r\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\r\n        requestData[id] = {\r\n            addToPath: addToPath,\r\n            additionalParams: additionalParams,\r\n            additionalQueryParams: additionalQueryParams,\r\n            additionalHeaders: additionalHeaders,\r\n            payload: payload\r\n        };\r\n\r\n        var len = queue.push(id);\r\n\r\n        // if too many active connections, wait...\r\n        if (len <= options.maxConnections) {\r\n            return sendRequest(id, optXhr);\r\n        }\r\n    }\r\n\r\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\r\n\r\n    qq.extend(this, {\r\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\r\n        initTransport: function(id) {\r\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\r\n\r\n            return {\r\n                // Optionally specify the end of the endpoint path for the request.\r\n                withPath: function(appendToPath) {\r\n                    path = appendToPath;\r\n                    return this;\r\n                },\r\n\r\n                // Optionally specify additional parameters to send along with the request.\r\n                // These will be added to the query string for GET/DELETE requests or the payload\r\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\r\n                // how these parameters should be formatted as well.\r\n                withParams: function(additionalParams) {\r\n                    params = additionalParams;\r\n                    return this;\r\n                },\r\n\r\n                withQueryParams: function(_additionalQueryParams_) {\r\n                    additionalQueryParams = _additionalQueryParams_;\r\n                    return this;\r\n                },\r\n\r\n                // Optionally specify additional headers to send along with the request.\r\n                withHeaders: function(additionalHeaders) {\r\n                    headers = additionalHeaders;\r\n                    return this;\r\n                },\r\n\r\n                // Optionally specify a payload/body for the request.\r\n                withPayload: function(thePayload) {\r\n                    payload = thePayload;\r\n                    return this;\r\n                },\r\n\r\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\r\n                withCacheBuster: function() {\r\n                    cacheBuster = true;\r\n                    return this;\r\n                },\r\n\r\n                // Send the constructed request.\r\n                send: function(optXhr) {\r\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\r\n                        params.qqtimestamp = new Date().getTime();\r\n                    }\r\n\r\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\r\n                }\r\n            };\r\n        },\r\n\r\n        canceled: function(id) {\r\n            dequeue(id);\r\n        }\r\n    });\r\n};\r\n","/* globals qq */\r\n/**\r\n * Common upload handler functions.\r\n *\r\n * @constructor\r\n */\r\nqq.UploadHandler = function(spec) {\r\n    \"use strict\";\r\n\r\n    var proxy = spec.proxy,\r\n        fileState = {},\r\n        onCancel = proxy.onCancel,\r\n        getName = proxy.getName;\r\n\r\n    qq.extend(this, {\r\n        add: function(id, fileItem) {\r\n            fileState[id] = fileItem;\r\n            fileState[id].temp = {};\r\n        },\r\n\r\n        cancel: function(id) {\r\n            var self = this,\r\n                cancelFinalizationEffort = new qq.Promise(),\r\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\r\n\r\n            onCancelRetVal.then(function() {\r\n                if (self.isValid(id)) {\r\n                    fileState[id].canceled = true;\r\n                    self.expunge(id);\r\n                }\r\n                cancelFinalizationEffort.success();\r\n            });\r\n        },\r\n\r\n        expunge: function(id) {\r\n            delete fileState[id];\r\n        },\r\n\r\n        getThirdPartyFileId: function(id) {\r\n            return fileState[id].key;\r\n        },\r\n\r\n        isValid: function(id) {\r\n            return fileState[id] !== undefined;\r\n        },\r\n\r\n        reset: function() {\r\n            fileState = {};\r\n        },\r\n\r\n        _getFileState: function(id) {\r\n            return fileState[id];\r\n        },\r\n\r\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\r\n            fileState[id].key = thirdPartyFileId;\r\n        },\r\n\r\n        _wasCanceled: function(id) {\r\n            return !!fileState[id].canceled;\r\n        }\r\n    });\r\n};\r\n","/*globals qq*/\r\n/**\r\n * Base upload handler module.  Controls more specific handlers.\r\n *\r\n * @param o Options.  Passed along to the specific handler submodule as well.\r\n * @param namespace [optional] Namespace for the specific handler.\r\n */\r\nqq.UploadHandlerController = function(o, namespace) {\r\n    \"use strict\";\r\n\r\n    var controller = this,\r\n        chunkingPossible = false,\r\n        concurrentChunkingPossible = false,\r\n        chunking, preventRetryResponse, log, handler,\r\n\r\n    options = {\r\n        paramsStore: {},\r\n        maxConnections: 3, // maximum number of concurrent uploads\r\n        chunking: {\r\n            enabled: false,\r\n            multiple: {\r\n                enabled: false\r\n            }\r\n        },\r\n        log: function(str, level) {},\r\n        onProgress: function(id, fileName, loaded, total) {},\r\n        onComplete: function(id, fileName, response, xhr) {},\r\n        onCancel: function(id, fileName) {},\r\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\r\n        onUpload: function(id, fileName) {},\r\n        onUploadChunk: function(id, fileName, chunkData) {},\r\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\r\n        onAutoRetry: function(id, fileName, response, xhr) {},\r\n        onResume: function(id, fileName, chunkData) {},\r\n        onUuidChanged: function(id, newUuid) {},\r\n        getName: function(id) {},\r\n        setSize: function(id, newSize) {},\r\n        isQueued: function(id) {},\r\n        getIdsInProxyGroup: function(id) {},\r\n        getIdsInBatch: function(id) {}\r\n    },\r\n\r\n    chunked = {\r\n        // Called when each chunk has uploaded successfully\r\n        done: function(id, chunkIdx, response, xhr) {\r\n            var chunkData = handler._getChunkData(id, chunkIdx);\r\n\r\n            handler._getFileState(id).attemptingResume = false;\r\n\r\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\r\n            handler._getFileState(id).loaded += chunkData.size;\r\n\r\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\r\n        },\r\n\r\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\r\n        // logic associated with closing out the file, such as combining the chunks.\r\n        finalize: function(id) {\r\n            var size = options.getSize(id),\r\n                name = options.getName(id);\r\n\r\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\r\n            handler.finalizeChunks(id).then(\r\n                function(response, xhr) {\r\n                    log(\"Finalize successful for \" + id);\r\n\r\n                    var normaizedResponse = upload.normalizeResponse(response, true);\r\n\r\n                    options.onProgress(id, name, size, size);\r\n                    handler._maybeDeletePersistedChunkData(id);\r\n                    upload.cleanup(id, normaizedResponse, xhr);\r\n                },\r\n                function(response, xhr) {\r\n                    var normaizedResponse = upload.normalizeResponse(response, false);\r\n\r\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normaizedResponse.error, \"error\");\r\n\r\n                    if (normaizedResponse.reset) {\r\n                        chunked.reset(id);\r\n                    }\r\n\r\n                    if (!options.onAutoRetry(id, name, normaizedResponse, xhr)) {\r\n                        upload.cleanup(id, normaizedResponse, xhr);\r\n                    }\r\n                }\r\n            );\r\n        },\r\n\r\n        handleFailure: function(chunkIdx, id, response, xhr) {\r\n            var name = options.getName(id);\r\n\r\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\r\n\r\n            handler.clearCachedChunk(id, chunkIdx);\r\n\r\n            var responseToReport = upload.normalizeResponse(response, false),\r\n                inProgressIdx;\r\n\r\n            if (responseToReport.reset) {\r\n                chunked.reset(id);\r\n            }\r\n            else {\r\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\r\n                if (inProgressIdx >= 0) {\r\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\r\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\r\n                }\r\n            }\r\n\r\n            // We may have aborted all other in-progress chunks for this file due to a failure.\r\n            // If so, ignore the failures associated with those aborts.\r\n            if (!handler._getFileState(id).temp.ignoreFailure) {\r\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\r\n                // chunks since they will be explicitly aborted\r\n                if (concurrentChunkingPossible) {\r\n                    handler._getFileState(id).temp.ignoreFailure = true;\r\n\r\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\r\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\r\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\r\n                        ckXhr.abort();\r\n                        // Flag the transport, in case we are waiting for some other async operation\r\n                        // to complete before attempting to upload the chunk\r\n                        ckXhr._cancelled = true;\r\n                    });\r\n\r\n                    // We must indicate that all aborted chunks are no longer in progress\r\n                    handler.moveInProgressToRemaining(id);\r\n\r\n                    // Free up any connections used by these chunks, but don't allow any\r\n                    // other files to take up the connections (until we have exhausted all auto-retries)\r\n                    connectionManager.free(id, true);\r\n                }\r\n\r\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\r\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\r\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\r\n                    // is a failure or not.\r\n                    upload.cleanup(id, responseToReport, xhr);\r\n                }\r\n            }\r\n        },\r\n\r\n        hasMoreParts: function(id) {\r\n            return !!handler._getFileState(id).chunking.remaining.length;\r\n        },\r\n\r\n        nextPart: function(id) {\r\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\r\n\r\n            if (nextIdx >= handler._getTotalChunks(id)) {\r\n                nextIdx = null;\r\n            }\r\n\r\n            return nextIdx;\r\n        },\r\n\r\n        reset: function(id) {\r\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\r\n\r\n            handler._maybeDeletePersistedChunkData(id);\r\n            handler.reevaluateChunking(id);\r\n            handler._getFileState(id).loaded = 0;\r\n        },\r\n\r\n        sendNext: function(id) {\r\n            var size = options.getSize(id),\r\n                name = options.getName(id),\r\n                chunkIdx = chunked.nextPart(id),\r\n                chunkData = handler._getChunkData(id, chunkIdx),\r\n                resuming = handler._getFileState(id).attemptingResume,\r\n                inProgressChunks = handler._getFileState(id).chunking.inProgress || [];\r\n\r\n            if (handler._getFileState(id).loaded == null) {\r\n                handler._getFileState(id).loaded = 0;\r\n            }\r\n\r\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\r\n            if (resuming && options.onResume(id, name, chunkData) === false) {\r\n                chunked.reset(id);\r\n                chunkIdx = chunked.nextPart(id);\r\n                chunkData = handler._getChunkData(id, chunkIdx);\r\n                resuming = false;\r\n            }\r\n\r\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\r\n            if (chunkIdx == null && inProgressChunks.length === 0) {\r\n                chunked.finalize(id);\r\n            }\r\n\r\n            // Send the next chunk\r\n            else {\r\n                log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\r\n                options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\r\n                inProgressChunks.push(chunkIdx);\r\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\r\n\r\n                if (concurrentChunkingPossible) {\r\n                    connectionManager.open(id, chunkIdx);\r\n                }\r\n\r\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\r\n                    chunked.sendNext(id);\r\n                }\r\n\r\n                if (chunkData.blob.size === 0) {\r\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\r\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\r\n                }\r\n                else {\r\n                    handler.uploadChunk(id, chunkIdx, resuming).then(\r\n                        // upload chunk success\r\n                        function success(response, xhr) {\r\n                            log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\r\n\r\n                            handler.clearCachedChunk(id, chunkIdx);\r\n\r\n                            var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\r\n                                responseToReport = upload.normalizeResponse(response, true),\r\n                                inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\r\n\r\n                            log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\r\n\r\n                            chunked.done(id, chunkIdx, responseToReport, xhr);\r\n\r\n                            if (inProgressChunkIdx >= 0) {\r\n                                inProgressChunks.splice(inProgressChunkIdx, 1);\r\n                            }\r\n\r\n                            handler._maybePersistChunkedState(id);\r\n\r\n                            if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\r\n                                chunked.finalize(id);\r\n                            }\r\n                            else if (chunked.hasMoreParts(id)) {\r\n                                chunked.sendNext(id);\r\n                            }\r\n                            else {\r\n                                log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\r\n                            }\r\n                        },\r\n\r\n                        // upload chunk failure\r\n                        function failure(response, xhr) {\r\n                            chunked.handleFailure(chunkIdx, id, response, xhr);\r\n                        }\r\n                        )\r\n                        .done(function() {\r\n                            handler.clearXhr(id, chunkIdx);\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    connectionManager = {\r\n        _open: [],\r\n        _openChunks: {},\r\n        _waiting: [],\r\n\r\n        available: function() {\r\n            var max = options.maxConnections,\r\n                openChunkEntriesCount = 0,\r\n                openChunksCount = 0;\r\n\r\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\r\n                openChunkEntriesCount++;\r\n                openChunksCount += openChunkIndexes.length;\r\n            });\r\n\r\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\r\n        },\r\n\r\n        /**\r\n         * Removes element from queue, starts upload of next\r\n         */\r\n        free: function(id, dontAllowNext) {\r\n            var allowNext = !dontAllowNext,\r\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\r\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\r\n                nextId;\r\n\r\n            delete connectionManager._openChunks[id];\r\n\r\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\r\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\r\n                delete handler._getFileState(id).file;\r\n            }\r\n\r\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\r\n            if (waitingIndex >= 0) {\r\n                connectionManager._waiting.splice(waitingIndex, 1);\r\n            }\r\n            // If this file was consuming a connection, allow the next file to be uploaded\r\n            else if (allowNext && connectionsIndex >= 0) {\r\n                connectionManager._open.splice(connectionsIndex, 1);\r\n\r\n                nextId = connectionManager._waiting.shift();\r\n                if (nextId >= 0) {\r\n                    connectionManager._open.push(nextId);\r\n                    upload.start(nextId);\r\n                }\r\n            }\r\n        },\r\n\r\n        getWaitingOrConnected: function() {\r\n            var waitingOrConnected = [];\r\n\r\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\r\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\r\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\r\n                if (chunks && chunks.length) {\r\n                    waitingOrConnected.push(parseInt(fileId));\r\n                }\r\n            });\r\n\r\n            // For non-chunked files, only one connection will be consumed per file.\r\n            // This is where we aggregate those file IDs.\r\n            qq.each(connectionManager._open, function(idx, fileId) {\r\n                if (!connectionManager._openChunks[fileId]) {\r\n                    waitingOrConnected.push(parseInt(fileId));\r\n                }\r\n            });\r\n\r\n            // There may be files waiting for a connection.\r\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\r\n\r\n            return waitingOrConnected;\r\n        },\r\n\r\n        isUsingConnection: function(id) {\r\n            return qq.indexOf(connectionManager._open, id) >= 0;\r\n        },\r\n\r\n        open: function(id, chunkIdx) {\r\n            if (chunkIdx == null) {\r\n                connectionManager._waiting.push(id);\r\n            }\r\n\r\n            if (connectionManager.available()) {\r\n                if (chunkIdx == null) {\r\n                    connectionManager._waiting.pop();\r\n                    connectionManager._open.push(id);\r\n                }\r\n                else {\r\n                    (function() {\r\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\r\n                        openChunksEntry.push(chunkIdx);\r\n                        connectionManager._openChunks[id] = openChunksEntry;\r\n                    }());\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        reset: function() {\r\n            connectionManager._waiting = [];\r\n            connectionManager._open = [];\r\n        }\r\n    },\r\n\r\n    simple = {\r\n        send: function(id, name) {\r\n            handler._getFileState(id).loaded = 0;\r\n\r\n            log(\"Sending simple upload request for \" + id);\r\n            handler.uploadFile(id).then(\r\n                function(response, optXhr) {\r\n                    log(\"Simple upload request succeeded for \" + id);\r\n\r\n                    var responseToReport = upload.normalizeResponse(response, true),\r\n                        size = options.getSize(id);\r\n\r\n                    options.onProgress(id, name, size, size);\r\n                    upload.maybeNewUuid(id, responseToReport);\r\n                    upload.cleanup(id, responseToReport, optXhr);\r\n                },\r\n\r\n                function(response, optXhr) {\r\n                    log(\"Simple upload request failed for \" + id);\r\n\r\n                    var responseToReport = upload.normalizeResponse(response, false);\r\n\r\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\r\n                        upload.cleanup(id, responseToReport, optXhr);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    },\r\n\r\n    upload = {\r\n        cancel: function(id) {\r\n            log(\"Cancelling \" + id);\r\n            options.paramsStore.remove(id);\r\n            connectionManager.free(id);\r\n        },\r\n\r\n        cleanup: function(id, response, optXhr) {\r\n            var name = options.getName(id);\r\n\r\n            options.onComplete(id, name, response, optXhr);\r\n\r\n            if (handler._getFileState(id)) {\r\n                handler._clearXhrs && handler._clearXhrs(id);\r\n            }\r\n\r\n            connectionManager.free(id);\r\n        },\r\n\r\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\r\n        // if none of these are available for the ID\r\n        getProxyOrBlob: function(id) {\r\n            return (handler.getProxy && handler.getProxy(id)) ||\r\n                (handler.getFile && handler.getFile(id));\r\n        },\r\n\r\n        initHandler: function() {\r\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\r\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\r\n\r\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\r\n                options,\r\n                {\r\n                    getDataByUuid: options.getDataByUuid,\r\n                    getName: options.getName,\r\n                    getSize: options.getSize,\r\n                    getUuid: options.getUuid,\r\n                    log: log,\r\n                    onCancel: options.onCancel,\r\n                    onProgress: options.onProgress,\r\n                    onUuidChanged: options.onUuidChanged\r\n                }\r\n            );\r\n\r\n            if (handler._removeExpiredChunkingRecords) {\r\n                handler._removeExpiredChunkingRecords();\r\n            }\r\n        },\r\n\r\n        isDeferredEligibleForUpload: function(id) {\r\n            return options.isQueued(id);\r\n        },\r\n\r\n        // For Blobs that are part of a group of generated images, along with a reference image,\r\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\r\n        // even if some async processing must be completed on one or more Blobs first.\r\n        maybeDefer: function(id, blob) {\r\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\r\n            // and then submit the upload to the specific handler once the blob is available.\r\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\r\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\r\n\r\n                // Blob creation may take some time, so the caller may want to update the\r\n                // UI to indicate that an operation is in progress, even before the actual\r\n                // upload begins and an onUpload callback is invoked.\r\n                options.onUploadPrep(id);\r\n\r\n                log(\"Attempting to generate a blob on-demand for \" + id);\r\n                blob.create().then(function(generatedBlob) {\r\n                    log(\"Generated an on-demand blob for \" + id);\r\n\r\n                    // Update record associated with this file by providing the generated Blob\r\n                    handler.updateBlob(id, generatedBlob);\r\n\r\n                    // Propagate the size for this generated Blob\r\n                    options.setSize(id, generatedBlob.size);\r\n\r\n                    // Order handler to recalculate chunking possibility, if applicable\r\n                    handler.reevaluateChunking(id);\r\n\r\n                    upload.maybeSendDeferredFiles(id);\r\n                },\r\n\r\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\r\n                function(errorMessage) {\r\n                    var errorResponse = {};\r\n\r\n                    if (errorMessage) {\r\n                        errorResponse.error = errorMessage;\r\n                    }\r\n\r\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\r\n\r\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\r\n                    upload.maybeSendDeferredFiles(id);\r\n                    connectionManager.free(id);\r\n                });\r\n            }\r\n            else {\r\n                return upload.maybeSendDeferredFiles(id);\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\r\n        maybeSendDeferredFiles: function(id) {\r\n            var idsInGroup = options.getIdsInProxyGroup(id),\r\n                uploadedThisId = false;\r\n\r\n            if (idsInGroup && idsInGroup.length) {\r\n                log(\"Maybe ready to upload proxy group file \" + id);\r\n\r\n                qq.each(idsInGroup, function(idx, idInGroup) {\r\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\r\n                        uploadedThisId = idInGroup === id;\r\n                        upload.now(idInGroup);\r\n                    }\r\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                uploadedThisId = true;\r\n                upload.now(id);\r\n            }\r\n\r\n            return uploadedThisId;\r\n        },\r\n\r\n        maybeNewUuid: function(id, response) {\r\n            if (response.newUuid !== undefined) {\r\n                options.onUuidChanged(id, response.newUuid);\r\n            }\r\n        },\r\n\r\n        // The response coming from handler implementations may be in various formats.\r\n        // Instead of hoping a promise nested 5 levels deep will always return an object\r\n        // as its first param, let's just normalize the response here.\r\n        normalizeResponse: function(originalResponse, successful) {\r\n            var response = originalResponse;\r\n\r\n            // The passed \"response\" param may not be a response at all.\r\n            // It could be a string, detailing the error, for example.\r\n            if (!qq.isObject(originalResponse)) {\r\n                response = {};\r\n\r\n                if (qq.isString(originalResponse) && !successful) {\r\n                    response.error = originalResponse;\r\n                }\r\n            }\r\n\r\n            response.success = successful;\r\n\r\n            return response;\r\n        },\r\n\r\n        now: function(id) {\r\n            var name = options.getName(id);\r\n\r\n            if (!controller.isValid(id)) {\r\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\r\n            }\r\n\r\n            options.onUpload(id, name);\r\n\r\n            if (chunkingPossible && handler._shouldChunkThisFile(id)) {\r\n                chunked.sendNext(id);\r\n            }\r\n            else {\r\n                simple.send(id, name);\r\n            }\r\n        },\r\n\r\n        start: function(id) {\r\n            var blobToUpload = upload.getProxyOrBlob(id);\r\n\r\n            if (blobToUpload) {\r\n                return upload.maybeDefer(id, blobToUpload);\r\n            }\r\n            else {\r\n                upload.now(id);\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Adds file or file input to the queue\r\n         **/\r\n        add: function(id, file) {\r\n            handler.add.apply(this, arguments);\r\n        },\r\n\r\n        /**\r\n         * Sends the file identified by id\r\n         */\r\n        upload: function(id) {\r\n            if (connectionManager.open(id)) {\r\n                return upload.start(id);\r\n            }\r\n            return false;\r\n        },\r\n\r\n        retry: function(id) {\r\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\r\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\r\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\r\n            // any more failures at this point.\r\n            if (concurrentChunkingPossible) {\r\n                handler._getFileState(id).temp.ignoreFailure = false;\r\n            }\r\n\r\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\r\n            // Just go ahead and ask the handler to upload again.\r\n            if (connectionManager.isUsingConnection(id)) {\r\n                return upload.start(id);\r\n            }\r\n\r\n            // If we are attempting to retry a file that is not currently consuming a connection,\r\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\r\n            // before the retry commences.\r\n            else {\r\n                return controller.upload(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancels file upload by id\r\n         */\r\n        cancel: function(id) {\r\n            var cancelRetVal = handler.cancel(id);\r\n\r\n            if (qq.isGenericPromise(cancelRetVal)) {\r\n                cancelRetVal.then(function() {\r\n                    upload.cancel(id);\r\n                });\r\n            }\r\n            else if (cancelRetVal !== false) {\r\n                upload.cancel(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancels all queued or in-progress uploads\r\n         */\r\n        cancelAll: function() {\r\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\r\n                i;\r\n\r\n            // ensure files are cancelled in reverse order which they were added\r\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\r\n            if (waitingOrConnected.length) {\r\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\r\n                    controller.cancel(waitingOrConnected[i]);\r\n                }\r\n            }\r\n\r\n            connectionManager.reset();\r\n        },\r\n\r\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\r\n        // Undefined if no file record is available.\r\n        getFile: function(id) {\r\n            if (handler.getProxy && handler.getProxy(id)) {\r\n                return handler.getProxy(id).referenceBlob;\r\n            }\r\n\r\n            return handler.getFile && handler.getFile(id);\r\n        },\r\n\r\n        // Returns true if the Blob associated with the ID is related to a proxy s\r\n        isProxied: function(id) {\r\n            return !!(handler.getProxy && handler.getProxy(id));\r\n        },\r\n\r\n        getInput: function(id) {\r\n            if (handler.getInput) {\r\n                return handler.getInput(id);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            log(\"Resetting upload handler\");\r\n            controller.cancelAll();\r\n            connectionManager.reset();\r\n            handler.reset();\r\n        },\r\n\r\n        expunge: function(id) {\r\n            if (controller.isValid(id)) {\r\n                return handler.expunge(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Determine if the file exists.\r\n         */\r\n        isValid: function(id) {\r\n            return handler.isValid(id);\r\n        },\r\n\r\n        getResumableFilesData: function() {\r\n            if (handler.getResumableFilesData) {\r\n                return handler.getResumableFilesData();\r\n            }\r\n            return [];\r\n        },\r\n\r\n        /**\r\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\r\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\r\n         * will be undefined.\r\n         *\r\n         * @param id Internal file ID\r\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\r\n         */\r\n        getThirdPartyFileId: function(id) {\r\n            if (controller.isValid(id)) {\r\n                return handler.getThirdPartyFileId(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\r\n         * @param id ID of the upload/file to pause\r\n         * @returns {boolean} true if the upload was paused\r\n         */\r\n        pause: function(id) {\r\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\r\n                connectionManager.free(id);\r\n                handler.moveInProgressToRemaining(id);\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        // True if the file is eligible for pause/resume.\r\n        isResumable: function(id) {\r\n            return !!handler.isResumable && handler.isResumable(id);\r\n        }\r\n    });\r\n\r\n    qq.extend(options, o);\r\n    log = options.log;\r\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\r\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\r\n\r\n    preventRetryResponse = (function() {\r\n        var response = {};\r\n\r\n        response[options.preventRetryParam] = true;\r\n\r\n        return response;\r\n    }());\r\n\r\n    upload.initHandler();\r\n};\r\n","/*globals qq */\r\n/*jshint -W117 */\r\nqq.WindowReceiveMessage = function(o) {\r\n    \"use strict\";\r\n\r\n    var options = {\r\n            log: function(message, level) {}\r\n        },\r\n        callbackWrapperDetachers = {};\r\n\r\n    qq.extend(options, o);\r\n\r\n    qq.extend(this, {\r\n        receiveMessage: function(id, callback) {\r\n            var onMessageCallbackWrapper = function(event) {\r\n                    callback(event.data);\r\n                };\r\n\r\n            if (window.postMessage) {\r\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\r\n            }\r\n            else {\r\n                log(\"iframe message passing not supported in this browser!\", \"error\");\r\n            }\r\n        },\r\n\r\n        stopReceivingMessages: function(id) {\r\n            if (window.postMessage) {\r\n                var detacher = callbackWrapperDetachers[id];\r\n                if (detacher) {\r\n                    detacher();\r\n                }\r\n            }\r\n        }\r\n    });\r\n};\r\n","/* globals qq */\r\n/**\r\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\r\n * in some cases by specific form upload handlers.\r\n *\r\n * @constructor\r\n */\r\nqq.FormUploadHandler = function(spec) {\r\n    \"use strict\";\r\n\r\n    var options = spec.options,\r\n        handler = this,\r\n        proxy = spec.proxy,\r\n        formHandlerInstanceId = qq.getUniqueId(),\r\n        onloadCallbacks = {},\r\n        detachLoadEvents = {},\r\n        postMessageCallbackTimers = {},\r\n        isCors = options.isCors,\r\n        inputName = options.inputName,\r\n        getUuid = proxy.getUuid,\r\n        log = proxy.log,\r\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\r\n\r\n    /**\r\n     * Remove any trace of the file from the handler.\r\n     *\r\n     * @param id ID of the associated file\r\n     */\r\n    function expungeFile(id) {\r\n        delete detachLoadEvents[id];\r\n\r\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\r\n        // In that case, terminate the timer waiting for a message from the loaded iframe\r\n        // and stop listening for any more messages coming from this iframe.\r\n        if (isCors) {\r\n            clearTimeout(postMessageCallbackTimers[id]);\r\n            delete postMessageCallbackTimers[id];\r\n            corsMessageReceiver.stopReceivingMessages(id);\r\n        }\r\n\r\n        var iframe = document.getElementById(handler._getIframeName(id));\r\n        if (iframe) {\r\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\r\n            // because it doesn't trigger ie6 prompt on https\r\n            /* jshint scripturl:true */\r\n            iframe.setAttribute(\"src\", \"javascript:false;\");\r\n\r\n            qq(iframe).remove();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param iframeName `document`-unique Name of the associated iframe\r\n     * @returns {*} ID of the associated file\r\n     */\r\n    function getFileIdForIframeName(iframeName) {\r\n        return iframeName.split(\"_\")[0];\r\n    }\r\n\r\n    /**\r\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\r\n     * to the current `document`.  Note that the iframe is hidden from view.\r\n     *\r\n     * @param name Name of the iframe.\r\n     * @returns {HTMLIFrameElement} The created iframe\r\n     */\r\n    function initIframeForUpload(name) {\r\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\r\n\r\n        iframe.setAttribute(\"id\", name);\r\n\r\n        iframe.style.display = \"none\";\r\n        document.body.appendChild(iframe);\r\n\r\n        return iframe;\r\n    }\r\n\r\n    /**\r\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\r\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\r\n     *\r\n     * @param iframe Listen for messages on this iframe.\r\n     * @param callback Invoke this callback with the message from the iframe.\r\n     */\r\n    function registerPostMessageCallback(iframe, callback) {\r\n        var iframeName = iframe.id,\r\n            fileId = getFileIdForIframeName(iframeName),\r\n            uuid = getUuid(fileId);\r\n\r\n        onloadCallbacks[uuid] = callback;\r\n\r\n        // When the iframe has loaded (after the server responds to an upload request)\r\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\r\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\r\n            if (handler.getInput(fileId)) {\r\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\r\n\r\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\r\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\r\n                    log(errorMessage, \"error\");\r\n                    callback({\r\n                        error: errorMessage\r\n                    });\r\n                }, 1000);\r\n            }\r\n        });\r\n\r\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\r\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\r\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\r\n            log(\"Received the following window message: '\" + message + \"'\");\r\n            var fileId = getFileIdForIframeName(iframeName),\r\n                response = handler._parseJsonResponse(message),\r\n                uuid = response.uuid,\r\n                onloadCallback;\r\n\r\n            if (uuid && onloadCallbacks[uuid]) {\r\n                log(\"Handling response for iframe name \" + iframeName);\r\n                clearTimeout(postMessageCallbackTimers[iframeName]);\r\n                delete postMessageCallbackTimers[iframeName];\r\n\r\n                handler._detachLoadEvent(iframeName);\r\n\r\n                onloadCallback = onloadCallbacks[uuid];\r\n\r\n                delete onloadCallbacks[uuid];\r\n                corsMessageReceiver.stopReceivingMessages(iframeName);\r\n                onloadCallback(response);\r\n            }\r\n            else if (!uuid) {\r\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\r\n            }\r\n        });\r\n    }\r\n\r\n    qq.extend(this, new qq.UploadHandler(spec));\r\n\r\n    qq.override(this, function(super_) {\r\n        return {\r\n            /**\r\n             * Adds File or Blob to the queue\r\n             **/\r\n            add: function(id, fileInput) {\r\n                super_.add(id, {input: fileInput});\r\n\r\n                fileInput.setAttribute(\"name\", inputName);\r\n\r\n                // remove file input from DOM\r\n                if (fileInput.parentNode) {\r\n                    qq(fileInput).remove();\r\n                }\r\n            },\r\n\r\n            expunge: function(id) {\r\n                expungeFile(id);\r\n                super_.expunge(id);\r\n            },\r\n\r\n            isValid: function(id) {\r\n                return super_.isValid(id) &&\r\n                    handler._getFileState(id).input !== undefined;\r\n            }\r\n        };\r\n    });\r\n\r\n    qq.extend(this, {\r\n        getInput: function(id) {\r\n            return handler._getFileState(id).input;\r\n        },\r\n\r\n        /**\r\n         * This function either delegates to a more specific message handler if CORS is involved,\r\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\r\n         * after determining if the content of the iframe is accessible.\r\n         *\r\n         * @param iframe Associated iframe\r\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\r\n         */\r\n        _attachLoadEvent: function(iframe, callback) {\r\n            /*jslint eqeq: true*/\r\n            var responseDescriptor;\r\n\r\n            if (isCors) {\r\n                registerPostMessageCallback(iframe, callback);\r\n            }\r\n            else {\r\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\r\n                    log(\"Received response for \" + iframe.id);\r\n\r\n                    // when we remove iframe from dom\r\n                    // the request stops, but in IE load\r\n                    // event fires\r\n                    if (!iframe.parentNode) {\r\n                        return;\r\n                    }\r\n\r\n                    try {\r\n                        // fixing Opera 10.53\r\n                        if (iframe.contentDocument &&\r\n                            iframe.contentDocument.body &&\r\n                            iframe.contentDocument.body.innerHTML == \"false\") {\r\n                            // In Opera event is fired second time\r\n                            // when body.innerHTML changed from false\r\n                            // to server response approx. after 1 sec\r\n                            // when we upload file with iframe\r\n                            return;\r\n                        }\r\n                    }\r\n                    catch (error) {\r\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\r\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\r\n                        responseDescriptor = {success: false};\r\n                    }\r\n\r\n                    callback(responseDescriptor);\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates an iframe with a specific document-unique name.\r\n         *\r\n         * @param id ID of the associated file\r\n         * @returns {HTMLIFrameElement}\r\n         */\r\n        _createIframe: function(id) {\r\n            var iframeName = handler._getIframeName(id);\r\n\r\n            return initIframeForUpload(iframeName);\r\n        },\r\n\r\n        /**\r\n         * Called when we are no longer interested in being notified when an iframe has loaded.\r\n         *\r\n         * @param id Associated file ID\r\n         */\r\n        _detachLoadEvent: function(id) {\r\n            if (detachLoadEvents[id] !== undefined) {\r\n                detachLoadEvents[id]();\r\n                delete detachLoadEvents[id];\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param fileId ID of the associated file\r\n         * @returns {string} The `document`-unique name of the iframe\r\n         */\r\n        _getIframeName: function(fileId) {\r\n            return fileId + \"_\" + formHandlerInstanceId;\r\n        },\r\n\r\n        /**\r\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\r\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\r\n         * that the form is hidden from view.\r\n         *\r\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\r\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\r\n         * @returns {HTMLFormElement} The created form\r\n         */\r\n        _initFormForUpload: function(spec) {\r\n            var method = spec.method,\r\n                endpoint = spec.endpoint,\r\n                params = spec.params,\r\n                paramsInBody = spec.paramsInBody,\r\n                targetName = spec.targetName,\r\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\r\n                url = endpoint;\r\n\r\n            if (paramsInBody) {\r\n                qq.obj2Inputs(params, form);\r\n            }\r\n            else {\r\n                url = qq.obj2url(params, endpoint);\r\n            }\r\n\r\n            form.setAttribute(\"action\", url);\r\n            form.setAttribute(\"target\", targetName);\r\n            form.style.display = \"none\";\r\n            document.body.appendChild(form);\r\n\r\n            return form;\r\n        },\r\n\r\n        /**\r\n         * @param innerHtmlOrMessage JSON message\r\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\r\n         */\r\n        _parseJsonResponse: function(innerHtmlOrMessage) {\r\n            var response = {};\r\n\r\n            try {\r\n                response = qq.parseJson(innerHtmlOrMessage);\r\n            }\r\n            catch (error) {\r\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\r\n            }\r\n\r\n            return response;\r\n        }\r\n    });\r\n};\r\n","/* globals qq */\r\n/**\r\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\r\n * XHR upload handlers.\r\n *\r\n * @constructor\r\n */\r\nqq.XhrUploadHandler = function(spec) {\r\n    \"use strict\";\r\n\r\n    var handler = this,\r\n        namespace = spec.options.namespace,\r\n        proxy = spec.proxy,\r\n        chunking = spec.options.chunking,\r\n        resume = spec.options.resume,\r\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\r\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\r\n        getName = proxy.getName,\r\n        getSize = proxy.getSize,\r\n        getUuid = proxy.getUuid,\r\n        getEndpoint = proxy.getEndpoint,\r\n        getDataByUuid = proxy.getDataByUuid,\r\n        onUuidChanged = proxy.onUuidChanged,\r\n        onProgress = proxy.onProgress,\r\n        log = proxy.log;\r\n\r\n    function abort(id) {\r\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\r\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\r\n\r\n            xhr.onreadystatechange = null;\r\n            xhr.upload.onprogress = null;\r\n            xhr.abort();\r\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\r\n        });\r\n    }\r\n\r\n    qq.extend(this, new qq.UploadHandler(spec));\r\n\r\n    qq.override(this, function(super_) {\r\n        return {\r\n            /**\r\n             * Adds File or Blob to the queue\r\n             **/\r\n            add: function(id, blobOrProxy) {\r\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\r\n                    super_.add(id, {file: blobOrProxy});\r\n                }\r\n                else if (blobOrProxy instanceof qq.BlobProxy) {\r\n                    super_.add(id, {proxy: blobOrProxy});\r\n                }\r\n                else {\r\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\r\n                }\r\n\r\n                handler._initTempState(id);\r\n                resumeEnabled && handler._maybePrepareForResume(id);\r\n            },\r\n\r\n            expunge: function(id) {\r\n                abort(id);\r\n                handler._maybeDeletePersistedChunkData(id);\r\n                handler._clearXhrs(id);\r\n                super_.expunge(id);\r\n            }\r\n        };\r\n    });\r\n\r\n    qq.extend(this, {\r\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\r\n        clearCachedChunk: function(id, chunkIdx) {\r\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\r\n        },\r\n\r\n        clearXhr: function(id, chunkIdx) {\r\n            var tempState = handler._getFileState(id).temp;\r\n\r\n            if (tempState.xhrs) {\r\n                delete tempState.xhrs[chunkIdx];\r\n            }\r\n            if (tempState.ajaxRequesters) {\r\n                delete tempState.ajaxRequesters[chunkIdx];\r\n            }\r\n        },\r\n\r\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\r\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\r\n        finalizeChunks: function(id, responseParser) {\r\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\r\n                xhr = handler._getXhr(id, lastChunkIdx);\r\n\r\n            if (responseParser) {\r\n                return new qq.Promise().success(responseParser(xhr), xhr);\r\n            }\r\n\r\n            return new qq.Promise().success({}, xhr);\r\n        },\r\n\r\n        getFile: function(id) {\r\n            return handler.isValid(id) && handler._getFileState(id).file;\r\n        },\r\n\r\n        getProxy: function(id) {\r\n            return handler.isValid(id) && handler._getFileState(id).proxy;\r\n        },\r\n\r\n        /**\r\n         * @returns {Array} Array of objects containing properties useful to integrators\r\n         * when it is important to determine which files are potentially resumable.\r\n         */\r\n        getResumableFilesData: function() {\r\n            var resumableFilesData = [];\r\n\r\n            handler._iterateResumeRecords(function(key, uploadData) {\r\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\r\n\r\n                var data = {\r\n                    name: uploadData.name,\r\n                    remaining: uploadData.chunking.remaining,\r\n                    size: uploadData.size,\r\n                    uuid: uploadData.uuid\r\n                };\r\n\r\n                if (uploadData.key) {\r\n                    data.key = uploadData.key;\r\n                }\r\n\r\n                resumableFilesData.push(data);\r\n            });\r\n\r\n            return resumableFilesData;\r\n        },\r\n\r\n        isResumable: function(id) {\r\n            return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;\r\n        },\r\n\r\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\r\n            var inProgress = optInProgress || handler._getFileState(id).chunking.inProgress,\r\n                remaining = optRemaining || handler._getFileState(id).chunking.remaining;\r\n\r\n            if (inProgress) {\r\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\r\n                inProgress.reverse();\r\n                qq.each(inProgress, function(idx, chunkIdx) {\r\n                    remaining.unshift(chunkIdx);\r\n                });\r\n                inProgress.length = 0;\r\n            }\r\n        },\r\n\r\n        pause: function(id) {\r\n            if (handler.isValid(id)) {\r\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\r\n                handler._getFileState(id).paused = true;\r\n                abort(id);\r\n                return true;\r\n            }\r\n        },\r\n\r\n        reevaluateChunking: function(id) {\r\n            if (chunking && handler.isValid(id)) {\r\n                var state = handler._getFileState(id),\r\n                    totalChunks,\r\n                    i;\r\n\r\n                delete state.chunking;\r\n\r\n                state.chunking = {};\r\n                totalChunks = handler._getTotalChunks(id);\r\n                if (totalChunks > 1 || chunking.mandatory) {\r\n                    state.chunking.enabled = true;\r\n                    state.chunking.parts = totalChunks;\r\n                    state.chunking.remaining = [];\r\n\r\n                    for (i = 0; i < totalChunks; i++) {\r\n                        state.chunking.remaining.push(i);\r\n                    }\r\n\r\n                    handler._initTempState(id);\r\n                }\r\n                else {\r\n                    state.chunking.enabled = false;\r\n                }\r\n            }\r\n        },\r\n\r\n        updateBlob: function(id, newBlob) {\r\n            if (handler.isValid(id)) {\r\n                handler._getFileState(id).file = newBlob;\r\n            }\r\n        },\r\n\r\n        _clearXhrs: function(id) {\r\n            var tempState = handler._getFileState(id).temp;\r\n\r\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\r\n                delete tempState.ajaxRequesters[chunkId];\r\n            });\r\n\r\n            qq.each(tempState.xhrs, function(chunkId) {\r\n                delete tempState.xhrs[chunkId];\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Creates an XHR instance for this file and stores it in the fileState.\r\n         *\r\n         * @param id File ID\r\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\r\n         * @returns {XMLHttpRequest}\r\n         */\r\n        _createXhr: function(id, optChunkIdx) {\r\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\r\n        },\r\n\r\n        _getAjaxRequester: function(id, optChunkIdx) {\r\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\r\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\r\n        },\r\n\r\n        _getChunkData: function(id, chunkIndex) {\r\n            var chunkSize = chunking.partSize,\r\n                fileSize = getSize(id),\r\n                fileOrBlob = handler.getFile(id),\r\n                startBytes = chunkSize * chunkIndex,\r\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\r\n                totalChunks = handler._getTotalChunks(id),\r\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\r\n\r\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\r\n            // See https://github.com/Widen/fine-uploader/issues/937#issuecomment-41418760\r\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\r\n\r\n            cachedChunks[chunkIndex] = blob;\r\n\r\n            return {\r\n                part: chunkIndex,\r\n                start: startBytes,\r\n                end: endBytes,\r\n                count: totalChunks,\r\n                blob: blob,\r\n                size: endBytes - startBytes\r\n            };\r\n        },\r\n\r\n        _getChunkDataForCallback: function(chunkData) {\r\n            return {\r\n                partIndex: chunkData.part,\r\n                startByte: chunkData.start + 1,\r\n                endByte: chunkData.end,\r\n                totalParts: chunkData.count\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @param id File ID\r\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\r\n         */\r\n        _getLocalStorageId: function(id) {\r\n            var formatVersion = \"5.0\",\r\n                name = getName(id),\r\n                size = getSize(id),\r\n                chunkSize = chunking.partSize,\r\n                endpoint = getEndpoint(id);\r\n\r\n            return qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\r\n        },\r\n\r\n        _getMimeType: function(id) {\r\n            return handler.getFile(id).type;\r\n        },\r\n\r\n        _getPersistableData: function(id) {\r\n            return handler._getFileState(id).chunking;\r\n        },\r\n\r\n        /**\r\n         * @param id ID of the associated file\r\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\r\n         */\r\n        _getTotalChunks: function(id) {\r\n            if (chunking) {\r\n                var fileSize = getSize(id),\r\n                    chunkSize = chunking.partSize;\r\n\r\n                return Math.ceil(fileSize / chunkSize);\r\n            }\r\n        },\r\n\r\n        _getXhr: function(id, optChunkIdx) {\r\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\r\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\r\n        },\r\n\r\n        _getXhrs: function(id) {\r\n            return handler._getFileState(id).temp.xhrs;\r\n        },\r\n\r\n        // Iterates through all XHR handler-created resume records (in local storage),\r\n        // invoking the passed callback and passing in the key and value of each local storage record.\r\n        _iterateResumeRecords: function(callback) {\r\n            if (resumeEnabled) {\r\n                qq.each(localStorage, function(key, item) {\r\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\r\n                        var uploadData = JSON.parse(item);\r\n                        callback(key, uploadData);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        _initTempState: function(id) {\r\n            handler._getFileState(id).temp = {\r\n                ajaxRequesters: {},\r\n                chunkProgress: {},\r\n                xhrs: {},\r\n                cachedChunks: {}\r\n            };\r\n        },\r\n\r\n        _markNotResumable: function(id) {\r\n            handler._getFileState(id).notResumable = true;\r\n        },\r\n\r\n        // Removes a chunked upload record from local storage, if possible.\r\n        // Returns true if the item was removed, false otherwise.\r\n        _maybeDeletePersistedChunkData: function(id) {\r\n            var localStorageId;\r\n\r\n            if (resumeEnabled && handler.isResumable(id)) {\r\n                localStorageId = handler._getLocalStorageId(id);\r\n\r\n                if (localStorageId && localStorage.getItem(localStorageId)) {\r\n                    localStorage.removeItem(localStorageId);\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\r\n        // so we can pick up from where we left off.\r\n        _maybePrepareForResume: function(id) {\r\n            var state = handler._getFileState(id),\r\n                localStorageId, persistedData;\r\n\r\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\r\n            // so prepare for a resume attempt.\r\n            if (resumeEnabled && state.key === undefined) {\r\n                localStorageId = handler._getLocalStorageId(id);\r\n                persistedData = localStorage.getItem(localStorageId);\r\n\r\n                // If we found this item in local storage, maybe we should resume it.\r\n                if (persistedData) {\r\n                    persistedData = JSON.parse(persistedData);\r\n\r\n                    // If we found a resume record but we have already handled this file in this session,\r\n                    // don't try to resume it & ensure we don't persist future check data\r\n                    if (getDataByUuid(persistedData.uuid)) {\r\n                        handler._markNotResumable(id);\r\n                    }\r\n                    else {\r\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\r\n\r\n                        onUuidChanged(id, persistedData.uuid);\r\n\r\n                        state.key = persistedData.key;\r\n                        state.chunking = persistedData.chunking;\r\n                        state.loaded = persistedData.loaded;\r\n                        state.attemptingResume = true;\r\n\r\n                        handler.moveInProgressToRemaining(id);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        // Persist any data needed to resume this upload in a new session.\r\n        _maybePersistChunkedState: function(id) {\r\n            var state = handler._getFileState(id),\r\n                localStorageId, persistedData;\r\n\r\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\r\n            if (resumeEnabled && handler.isResumable(id)) {\r\n                localStorageId = handler._getLocalStorageId(id);\r\n\r\n                persistedData = {\r\n                    name: getName(id),\r\n                    size: getSize(id),\r\n                    uuid: getUuid(id),\r\n                    key: state.key,\r\n                    chunking: state.chunking,\r\n                    loaded: state.loaded,\r\n                    lastUpdated: Date.now()\r\n                };\r\n\r\n                try {\r\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\r\n                }\r\n                catch (error) {\r\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\r\n                }\r\n            }\r\n        },\r\n\r\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\r\n            var xhr = handler._getXhr(id, chunkIdx),\r\n                name = getName(id),\r\n                progressCalculator = {\r\n                    simple: function(loaded, total) {\r\n                        var fileSize = getSize(id);\r\n\r\n                        if (loaded === total) {\r\n                            onProgress(id, name, fileSize, fileSize);\r\n                        }\r\n                        else {\r\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\r\n                        }\r\n                    },\r\n\r\n                    chunked: function(loaded, total) {\r\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\r\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\r\n                            loadedForRequest = loaded,\r\n                            totalForRequest = total,\r\n                            totalFileSize = getSize(id),\r\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\r\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\r\n\r\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\r\n\r\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\r\n                            totalLoadedForFile += chunkLoaded;\r\n                        });\r\n\r\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\r\n                    }\r\n                };\r\n\r\n            xhr.upload.onprogress = function(e) {\r\n                if (e.lengthComputable) {\r\n                    /* jshint eqnull: true */\r\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\r\n                    progressCalculator[type](e.loaded, e.total);\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Registers an XHR transport instance created elsewhere.\r\n         *\r\n         * @param id ID of the associated file\r\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\r\n         * @param xhr XMLHttpRequest object instance\r\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\r\n         * @returns {XMLHttpRequest}\r\n         */\r\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\r\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\r\n                tempState = handler._getFileState(id).temp;\r\n\r\n            tempState.xhrs = tempState.xhrs || {};\r\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\r\n\r\n            tempState.xhrs[xhrsId] = xhr;\r\n\r\n            if (optAjaxRequester) {\r\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\r\n            }\r\n\r\n            return xhr;\r\n        },\r\n\r\n        // Deletes any local storage records that are \"expired\".\r\n        _removeExpiredChunkingRecords: function() {\r\n            var expirationDays = resume.recordsExpireIn;\r\n\r\n            handler._iterateResumeRecords(function(key, uploadData) {\r\n                var expirationDate = new Date(uploadData.lastUpdated);\r\n\r\n                // transform updated date into expiration date\r\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\r\n\r\n                if (expirationDate.getTime() <= Date.now()) {\r\n                    log(\"Removing expired resume record with key \" + key);\r\n                    localStorage.removeItem(key);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Determine if the associated file should be chunked.\r\n         *\r\n         * @param id ID of the associated file\r\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\r\n         */\r\n        _shouldChunkThisFile: function(id) {\r\n            var state = handler._getFileState(id);\r\n\r\n            if (!state.chunking) {\r\n                handler.reevaluateChunking(id);\r\n            }\r\n\r\n            return state.chunking.enabled;\r\n        }\r\n    });\r\n};\r\n","/*globals qq, XMLHttpRequest*/\r\nqq.DeleteFileAjaxRequester = function(o) {\r\n    \"use strict\";\r\n\r\n    var requester,\r\n        options = {\r\n            method: \"DELETE\",\r\n            uuidParamName: \"qquuid\",\r\n            endpointStore: {},\r\n            maxConnections: 3,\r\n            customHeaders: function(id) {return {};},\r\n            paramsStore: {},\r\n            cors: {\r\n                expected: false,\r\n                sendCredentials: false\r\n            },\r\n            log: function(str, level) {},\r\n            onDelete: function(id) {},\r\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\r\n        };\r\n\r\n    qq.extend(options, o);\r\n\r\n    function getMandatedParams() {\r\n        if (options.method.toUpperCase() === \"POST\") {\r\n            return {\r\n                _method: \"DELETE\"\r\n            };\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    requester = qq.extend(this, new qq.AjaxRequester({\r\n        acceptHeader: \"application/json\",\r\n        validMethods: [\"POST\", \"DELETE\"],\r\n        method: options.method,\r\n        endpointStore: options.endpointStore,\r\n        paramsStore: options.paramsStore,\r\n        mandatedParams: getMandatedParams(),\r\n        maxConnections: options.maxConnections,\r\n        customHeaders: function(id) {\r\n            return options.customHeaders.get(id);\r\n        },\r\n        log: options.log,\r\n        onSend: options.onDelete,\r\n        onComplete: options.onDeleteComplete,\r\n        cors: options.cors\r\n    }));\r\n\r\n    qq.extend(this, {\r\n        sendDelete: function(id, uuid, additionalMandatedParams) {\r\n            var additionalOptions = additionalMandatedParams || {};\r\n\r\n            options.log(\"Submitting delete file request for \" + id);\r\n\r\n            if (options.method === \"DELETE\") {\r\n                requester.initTransport(id)\r\n                    .withPath(uuid)\r\n                    .withParams(additionalOptions)\r\n                    .send();\r\n            }\r\n            else {\r\n                additionalOptions[options.uuidParamName] = uuid;\r\n                requester.initTransport(id)\r\n                    .withParams(additionalOptions)\r\n                    .send();\r\n            }\r\n        }\r\n    });\r\n};\r\n","/*global qq, define */\r\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\r\n/**\r\n * Mega pixel image rendering library for iOS6+\r\n *\r\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\r\n * which causes unexpected subsampling when drawing it in canvas.\r\n * By using this library, you can safely render the image with proper stretching.\r\n *\r\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\r\n * Released under the MIT license\r\n *\r\n * Heavily modified by Widen for Fine Uploader\r\n */\r\n(function() {\r\n\r\n    /**\r\n     * Detect subsampling in loaded image.\r\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\r\n     */\r\n    function detectSubsampling(img) {\r\n        var iw = img.naturalWidth,\r\n            ih = img.naturalHeight,\r\n            canvas = document.createElement(\"canvas\"),\r\n            ctx;\r\n\r\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\r\n            canvas.width = canvas.height = 1;\r\n            ctx = canvas.getContext(\"2d\");\r\n            ctx.drawImage(img, -iw + 1, 0);\r\n            // subsampled image becomes half smaller in rendering size.\r\n            // check alpha channel value to confirm image is covering edge pixel or not.\r\n            // if alpha value is 0 image is not covering, hence subsampled.\r\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Detecting vertical squash in loaded image.\r\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\r\n     */\r\n    function detectVerticalSquash(img, iw, ih) {\r\n        var canvas = document.createElement(\"canvas\"),\r\n            sy = 0,\r\n            ey = ih,\r\n            py = ih,\r\n            ctx, data, alpha, ratio;\r\n\r\n        canvas.width = 1;\r\n        canvas.height = ih;\r\n        ctx = canvas.getContext(\"2d\");\r\n        ctx.drawImage(img, 0, 0);\r\n        data = ctx.getImageData(0, 0, 1, ih).data;\r\n\r\n        // search image edge pixel position in case it is squashed vertically.\r\n        while (py > sy) {\r\n            alpha = data[(py - 1) * 4 + 3];\r\n            if (alpha === 0) {\r\n                ey = py;\r\n            } else {\r\n                sy = py;\r\n            }\r\n            py = (ey + sy) >> 1;\r\n        }\r\n\r\n        ratio = (py / ih);\r\n        return (ratio === 0) ? 1 : ratio;\r\n    }\r\n\r\n    /**\r\n     * Rendering image element (with resizing) and get its data URL\r\n     */\r\n    function renderImageToDataURL(img, blob, options, doSquash) {\r\n        var canvas = document.createElement(\"canvas\"),\r\n            mime = options.mime || \"image/jpeg\",\r\n            promise = new qq.Promise();\r\n\r\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\r\n            .then(function() {\r\n                promise.success(\r\n                    canvas.toDataURL(mime, options.quality || 0.8)\r\n                );\r\n            });\r\n\r\n        return promise;\r\n    }\r\n\r\n    function maybeCalculateDownsampledDimensions(spec) {\r\n        var maxPixels = 5241000; //iOS specific value\r\n\r\n        if (!qq.ios()) {\r\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\r\n        }\r\n\r\n        if (spec.origHeight * spec.origWidth > maxPixels) {\r\n            return {\r\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\r\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Rendering image element (with resizing) into the canvas element\r\n     */\r\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\r\n        var iw = img.naturalWidth,\r\n            ih = img.naturalHeight,\r\n            width = options.width,\r\n            height = options.height,\r\n            ctx = canvas.getContext(\"2d\"),\r\n            promise = new qq.Promise(),\r\n            modifiedDimensions;\r\n\r\n        ctx.save();\r\n\r\n        if (options.resize) {\r\n            return renderImageToCanvasWithCustomResizer({\r\n                blob: blob,\r\n                canvas: canvas,\r\n                image: img,\r\n                imageHeight: ih,\r\n                imageWidth: iw,\r\n                orientation: options.orientation,\r\n                resize: options.resize,\r\n                targetHeight: height,\r\n                targetWidth: width\r\n            });\r\n        }\r\n\r\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\r\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\r\n                origWidth: width,\r\n                origHeight: height\r\n            });\r\n\r\n            if (modifiedDimensions) {\r\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\r\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\r\n                    \"warn\");\r\n\r\n                width = modifiedDimensions.newWidth;\r\n                height = modifiedDimensions.newHeight;\r\n            }\r\n        }\r\n\r\n        transformCoordinate(canvas, width, height, options.orientation);\r\n\r\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\r\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\r\n        if (qq.ios()) {\r\n            (function() {\r\n                if (detectSubsampling(img)) {\r\n                    iw /= 2;\r\n                    ih /= 2;\r\n                }\r\n\r\n                var d = 1024, // size of tiling canvas\r\n                    tmpCanvas = document.createElement(\"canvas\"),\r\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\r\n                    dw = Math.ceil(d * width / iw),\r\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\r\n                    sy = 0,\r\n                    dy = 0,\r\n                    tmpCtx, sx, dx;\r\n\r\n                tmpCanvas.width = tmpCanvas.height = d;\r\n                tmpCtx = tmpCanvas.getContext(\"2d\");\r\n\r\n                while (sy < ih) {\r\n                    sx = 0;\r\n                    dx = 0;\r\n                    while (sx < iw) {\r\n                        tmpCtx.clearRect(0, 0, d, d);\r\n                        tmpCtx.drawImage(img, -sx, -sy);\r\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\r\n                        sx += d;\r\n                        dx += dw;\r\n                    }\r\n                    sy += d;\r\n                    dy += dh;\r\n                }\r\n                ctx.restore();\r\n                tmpCanvas = tmpCtx = null;\r\n            }());\r\n        }\r\n        else {\r\n            ctx.drawImage(img, 0, 0, width, height);\r\n        }\r\n\r\n        canvas.qqImageRendered && canvas.qqImageRendered();\r\n        promise.success();\r\n\r\n        return promise;\r\n    }\r\n\r\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\r\n        var blob = resizeInfo.blob,\r\n            image = resizeInfo.image,\r\n            imageHeight = resizeInfo.imageHeight,\r\n            imageWidth = resizeInfo.imageWidth,\r\n            orientation = resizeInfo.orientation,\r\n            promise = new qq.Promise(),\r\n            resize = resizeInfo.resize,\r\n            sourceCanvas = document.createElement(\"canvas\"),\r\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\r\n            targetCanvas = resizeInfo.canvas,\r\n            targetHeight = resizeInfo.targetHeight,\r\n            targetWidth = resizeInfo.targetWidth;\r\n\r\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\r\n\r\n        targetCanvas.height = targetHeight;\r\n        targetCanvas.width = targetWidth;\r\n\r\n        sourceCanvasContext.drawImage(image, 0, 0);\r\n\r\n        resize({\r\n            blob: blob,\r\n            height: targetHeight,\r\n            image: image,\r\n            sourceCanvas: sourceCanvas,\r\n            targetCanvas: targetCanvas,\r\n            width: targetWidth\r\n        })\r\n            .then(\r\n                function success() {\r\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\r\n                    promise.success();\r\n                },\r\n                promise.failure\r\n            );\r\n\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     * Transform canvas coordination according to specified frame size and orientation\r\n     * Orientation value is from EXIF tag\r\n     */\r\n    function transformCoordinate(canvas, width, height, orientation) {\r\n        switch (orientation) {\r\n            case 5:\r\n            case 6:\r\n            case 7:\r\n            case 8:\r\n                canvas.width = height;\r\n                canvas.height = width;\r\n                break;\r\n            default:\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n        }\r\n        var ctx = canvas.getContext(\"2d\");\r\n        switch (orientation) {\r\n            case 2:\r\n                // horizontal flip\r\n                ctx.translate(width, 0);\r\n                ctx.scale(-1, 1);\r\n                break;\r\n            case 3:\r\n                // 180 rotate left\r\n                ctx.translate(width, height);\r\n                ctx.rotate(Math.PI);\r\n                break;\r\n            case 4:\r\n                // vertical flip\r\n                ctx.translate(0, height);\r\n                ctx.scale(1, -1);\r\n                break;\r\n            case 5:\r\n                // vertical flip + 90 rotate right\r\n                ctx.rotate(0.5 * Math.PI);\r\n                ctx.scale(1, -1);\r\n                break;\r\n            case 6:\r\n                // 90 rotate right\r\n                ctx.rotate(0.5 * Math.PI);\r\n                ctx.translate(0, -height);\r\n                break;\r\n            case 7:\r\n                // horizontal flip + 90 rotate right\r\n                ctx.rotate(0.5 * Math.PI);\r\n                ctx.translate(width, -height);\r\n                ctx.scale(-1, 1);\r\n                break;\r\n            case 8:\r\n                // 90 rotate left\r\n                ctx.rotate(-0.5 * Math.PI);\r\n                ctx.translate(-width, 0);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * MegaPixImage class\r\n     */\r\n    function MegaPixImage(srcImage, errorCallback) {\r\n        var self = this;\r\n\r\n        if (window.Blob && srcImage instanceof Blob) {\r\n            (function() {\r\n                var img = new Image(),\r\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\r\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\r\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\r\n                img.src = URL.createObjectURL(srcImage);\r\n                self.blob = srcImage;\r\n                srcImage = img;\r\n            }());\r\n        }\r\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\r\n            srcImage.onload = function() {\r\n                var listeners = self.imageLoadListeners;\r\n                if (listeners) {\r\n                    self.imageLoadListeners = null;\r\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\r\n                    // so let's push this to the end of the UI thread queue.\r\n                    setTimeout(function() {\r\n                        for (var i = 0, len = listeners.length; i < len; i++) {\r\n                            listeners[i]();\r\n                        }\r\n                    }, 0);\r\n                }\r\n            };\r\n            srcImage.onerror = errorCallback;\r\n            this.imageLoadListeners = [];\r\n        }\r\n        this.srcImage = srcImage;\r\n    }\r\n\r\n    /**\r\n     * Rendering megapix image into specified target element\r\n     */\r\n    MegaPixImage.prototype.render = function(target, options) {\r\n        options = options || {};\r\n\r\n        var self = this,\r\n            imgWidth = this.srcImage.naturalWidth,\r\n            imgHeight = this.srcImage.naturalHeight,\r\n            width = options.width,\r\n            height = options.height,\r\n            maxWidth = options.maxWidth,\r\n            maxHeight = options.maxHeight,\r\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\r\n            tagName = target.tagName.toLowerCase(),\r\n            opt;\r\n\r\n        if (this.imageLoadListeners) {\r\n            this.imageLoadListeners.push(function() { self.render(target, options); });\r\n            return;\r\n        }\r\n\r\n        if (width && !height) {\r\n            height = (imgHeight * width / imgWidth) << 0;\r\n        } else if (height && !width) {\r\n            width = (imgWidth * height / imgHeight) << 0;\r\n        } else {\r\n            width = imgWidth;\r\n            height = imgHeight;\r\n        }\r\n        if (maxWidth && width > maxWidth) {\r\n            width = maxWidth;\r\n            height = (imgHeight * width / imgWidth) << 0;\r\n        }\r\n        if (maxHeight && height > maxHeight) {\r\n            height = maxHeight;\r\n            width = (imgWidth * height / imgHeight) << 0;\r\n        }\r\n\r\n        opt = { width: width, height: height },\r\n        qq.each(options, function(optionsKey, optionsValue) {\r\n            opt[optionsKey] = optionsValue;\r\n        });\r\n\r\n        if (tagName === \"img\") {\r\n            (function() {\r\n                var oldTargetSrc = target.src;\r\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\r\n                    .then(function(dataUri) {\r\n                        target.src = dataUri;\r\n                        oldTargetSrc === target.src && target.onload();\r\n                    });\r\n            }());\r\n        } else if (tagName === \"canvas\") {\r\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\r\n        }\r\n        if (typeof this.onrender === \"function\") {\r\n            this.onrender(target);\r\n        }\r\n    };\r\n\r\n    qq.MegaPixImage = MegaPixImage;\r\n})();\r\n","/*globals qq */\r\n/**\r\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\r\n *\r\n * @constructor\r\n */\r\nqq.ImageGenerator = function(log) {\r\n    \"use strict\";\r\n\r\n    function isImg(el) {\r\n        return el.tagName.toLowerCase() === \"img\";\r\n    }\r\n\r\n    function isCanvas(el) {\r\n        return el.tagName.toLowerCase() === \"canvas\";\r\n    }\r\n\r\n    function isImgCorsSupported() {\r\n        return new Image().crossOrigin !== undefined;\r\n    }\r\n\r\n    function isCanvasSupported() {\r\n        var canvas = document.createElement(\"canvas\");\r\n\r\n        return canvas.getContext && canvas.getContext(\"2d\");\r\n    }\r\n\r\n    // This is only meant to determine the MIME type of a renderable image file.\r\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\r\n    // are rendered correctly, among other things.\r\n    function determineMimeOfFileName(nameWithPath) {\r\n        /*jshint -W015 */\r\n        var pathSegments = nameWithPath.split(\"/\"),\r\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\r\n            extension = qq.getExtension(name);\r\n\r\n        extension = extension && extension.toLowerCase();\r\n\r\n        switch (extension) {\r\n            case \"jpeg\":\r\n            case \"jpg\":\r\n                return \"image/jpeg\";\r\n            case \"png\":\r\n                return \"image/png\";\r\n            case \"bmp\":\r\n                return \"image/bmp\";\r\n            case \"gif\":\r\n                return \"image/gif\";\r\n            case \"tiff\":\r\n            case \"tif\":\r\n                return \"image/tiff\";\r\n        }\r\n    }\r\n\r\n    // This will likely not work correctly in IE8 and older.\r\n    // It's only used as part of a formula to determine\r\n    // if a canvas can be used to scale a server-hosted thumbnail.\r\n    // If canvas isn't supported by the UA (IE8 and older)\r\n    // this method should not even be called.\r\n    function isCrossOrigin(url) {\r\n        var targetAnchor = document.createElement(\"a\"),\r\n            targetProtocol, targetHostname, targetPort;\r\n\r\n        targetAnchor.href = url;\r\n\r\n        targetProtocol = targetAnchor.protocol;\r\n        targetPort = targetAnchor.port;\r\n        targetHostname = targetAnchor.hostname;\r\n\r\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\r\n            return true;\r\n        }\r\n\r\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\r\n            return true;\r\n        }\r\n\r\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\r\n        if (targetPort !== window.location.port && !qq.ie()) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function registerImgLoadListeners(img, promise) {\r\n        img.onload = function() {\r\n            img.onload = null;\r\n            img.onerror = null;\r\n            promise.success(img);\r\n        };\r\n\r\n        img.onerror = function() {\r\n            img.onload = null;\r\n            img.onerror = null;\r\n            log(\"Problem drawing thumbnail!\", \"error\");\r\n            promise.failure(img, \"Problem drawing thumbnail!\");\r\n        };\r\n    }\r\n\r\n    function registerCanvasDrawImageListener(canvas, promise) {\r\n        // The image is drawn on the canvas by a third-party library,\r\n        // and we want to know when this is completed.  Since the library\r\n        // may invoke drawImage many times in a loop, we need to be called\r\n        // back when the image is fully rendered.  So, we are expecting the\r\n        // code that draws this image to follow a convention that involves a\r\n        // function attached to the canvas instance be invoked when it is done.\r\n        canvas.qqImageRendered = function() {\r\n            promise.success(canvas);\r\n        };\r\n    }\r\n\r\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\r\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\r\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\r\n    // attempt was not successful.\r\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\r\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\r\n\r\n        if (isImg(imgOrCanvas)) {\r\n            registerImgLoadListeners(imgOrCanvas, promise);\r\n        }\r\n        else if (isCanvas(imgOrCanvas)) {\r\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\r\n        }\r\n        else {\r\n            promise.failure(imgOrCanvas);\r\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\r\n        }\r\n\r\n        return registered;\r\n    }\r\n\r\n    // Draw a preview iff the current UA can natively display it.\r\n    // Also rotate the image if necessary.\r\n    function draw(fileOrBlob, container, options) {\r\n        var drawPreview = new qq.Promise(),\r\n            identifier = new qq.Identify(fileOrBlob, log),\r\n            maxSize = options.maxSize,\r\n            // jshint eqnull:true\r\n            orient = options.orient == null ? true : options.orient,\r\n            megapixErrorHandler = function() {\r\n                container.onerror = null;\r\n                container.onload = null;\r\n                log(\"Could not render preview, file may be too large!\", \"error\");\r\n                drawPreview.failure(container, \"Browser cannot render image!\");\r\n            };\r\n\r\n        identifier.isPreviewable().then(\r\n            function(mime) {\r\n                // If options explicitly specify that Orientation is not desired,\r\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\r\n                var dummyExif = {\r\n                        parse: function() {\r\n                            return new qq.Promise().success();\r\n                        }\r\n                    },\r\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\r\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\r\n\r\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\r\n                    exif.parse().then(\r\n                        function(exif) {\r\n                            var orientation = exif && exif.Orientation;\r\n\r\n                            mpImg.render(container, {\r\n                                maxWidth: maxSize,\r\n                                maxHeight: maxSize,\r\n                                orientation: orientation,\r\n                                mime: mime,\r\n                                resize: options.customResizeFunction\r\n                            });\r\n                        },\r\n\r\n                        function(failureMsg) {\r\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\r\n\r\n                            mpImg.render(container, {\r\n                                maxWidth: maxSize,\r\n                                maxHeight: maxSize,\r\n                                mime: mime,\r\n                                resize: options.customResizeFunction\r\n                            });\r\n                        }\r\n                    );\r\n                }\r\n            },\r\n\r\n            function() {\r\n                log(\"Not previewable\");\r\n                drawPreview.failure(container, \"Not previewable\");\r\n            }\r\n        );\r\n\r\n        return drawPreview;\r\n    }\r\n\r\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\r\n        var tempImg = new Image(),\r\n            tempImgRender = new qq.Promise();\r\n\r\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\r\n\r\n        if (isCrossOrigin(url)) {\r\n            tempImg.crossOrigin = \"anonymous\";\r\n        }\r\n\r\n        tempImg.src = url;\r\n\r\n        tempImgRender.then(\r\n            function rendered() {\r\n                registerThumbnailRenderedListener(canvasOrImg, draw);\r\n\r\n                var mpImg = new qq.MegaPixImage(tempImg);\r\n                mpImg.render(canvasOrImg, {\r\n                    maxWidth: maxSize,\r\n                    maxHeight: maxSize,\r\n                    mime: determineMimeOfFileName(url),\r\n                    resize: customResizeFunction\r\n                });\r\n            },\r\n\r\n            draw.failure\r\n        );\r\n    }\r\n\r\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\r\n        registerThumbnailRenderedListener(img, draw);\r\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\r\n        // that must drop back to CSS is known and exploited by the templating module.\r\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\r\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\r\n        qq(img).css({\r\n            maxWidth: maxSize + \"px\",\r\n            maxHeight: maxSize + \"px\"\r\n        });\r\n\r\n        img.src = url;\r\n    }\r\n\r\n    // Draw a (server-hosted) thumbnail given a URL.\r\n    // This will optionally scale the thumbnail as well.\r\n    // It attempts to use <canvas> to scale, but will fall back\r\n    // to max-width and max-height style properties if the UA\r\n    // doesn't support canvas or if the images is cross-domain and\r\n    // the UA doesn't support the crossorigin attribute on img tags,\r\n    // which is required to scale a cross-origin image using <canvas> &\r\n    // then export it back to an <img>.\r\n    function drawFromUrl(url, container, options) {\r\n        var draw = new qq.Promise(),\r\n            scale = options.scale,\r\n            maxSize = scale ? options.maxSize : null;\r\n\r\n        // container is an img, scaling needed\r\n        if (scale && isImg(container)) {\r\n            // Iff canvas is available in this UA, try to use it for scaling.\r\n            // Otherwise, fall back to CSS scaling\r\n            if (isCanvasSupported()) {\r\n                // Attempt to use <canvas> for image scaling,\r\n                // but we must fall back to scaling via CSS/styles\r\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\r\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\r\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\r\n                }\r\n                else {\r\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\r\n                }\r\n            }\r\n            else {\r\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\r\n            }\r\n        }\r\n        // container is a canvas, scaling optional\r\n        else if (isCanvas(container)) {\r\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\r\n        }\r\n        // container is an img & no scaling: just set the src attr to the passed url\r\n        else if (registerThumbnailRenderedListener(container, draw)) {\r\n            container.src = url;\r\n        }\r\n\r\n        return draw;\r\n    }\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\r\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\r\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\r\n         *\r\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\r\n         * @param container <img> or <canvas> to contain the preview\r\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\r\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\r\n         */\r\n        generate: function(fileBlobOrUrl, container, options) {\r\n            if (qq.isString(fileBlobOrUrl)) {\r\n                log(\"Attempting to update thumbnail based on server response.\");\r\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\r\n            }\r\n            else {\r\n                log(\"Attempting to draw client-side image preview.\");\r\n                return draw(fileBlobOrUrl, container, options || {});\r\n            }\r\n        }\r\n    });\r\n\r\n    /*<testing>*/\r\n    this._testing = {};\r\n    this._testing.isImg = isImg;\r\n    this._testing.isCanvas = isCanvas;\r\n    this._testing.isCrossOrigin = isCrossOrigin;\r\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\r\n    /*</testing>*/\r\n};\r\n","/*globals qq */\r\n/**\r\n * EXIF image data parser.  Currently only parses the Orientation tag value,\r\n * but this may be expanded to other tags in the future.\r\n *\r\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\r\n * @constructor\r\n */\r\nqq.Exif = function(fileOrBlob, log) {\r\n    \"use strict\";\r\n\r\n    // Orientation is the only tag parsed here at this time.\r\n    var TAG_IDS = [274],\r\n        TAG_INFO = {\r\n            274: {\r\n                name: \"Orientation\",\r\n                bytes: 2\r\n            }\r\n        };\r\n\r\n    // Convert a little endian (hex string) to big endian (decimal).\r\n    function parseLittleEndian(hex) {\r\n        var result = 0,\r\n            pow = 0;\r\n\r\n        while (hex.length > 0) {\r\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\r\n            hex = hex.substring(2, hex.length);\r\n            pow += 8;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // Find the byte offset, of Application Segment 1 (EXIF).\r\n    // External callers need not supply any arguments.\r\n    function seekToApp1(offset, promise) {\r\n        var theOffset = offset,\r\n            thePromise = promise;\r\n        if (theOffset === undefined) {\r\n            theOffset = 2;\r\n            thePromise = new qq.Promise();\r\n        }\r\n\r\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\r\n            var match = /^ffe([0-9])/.exec(hex),\r\n                segmentLength;\r\n\r\n            if (match) {\r\n                if (match[1] !== \"1\") {\r\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\r\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\r\n                }\r\n                else {\r\n                    thePromise.success(theOffset);\r\n                }\r\n            }\r\n            else {\r\n                thePromise.failure(\"No EXIF header to be found!\");\r\n            }\r\n        });\r\n\r\n        return thePromise;\r\n    }\r\n\r\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\r\n    function getApp1Offset() {\r\n        var promise = new qq.Promise();\r\n\r\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\r\n            if (hex.indexOf(\"ffd8\") !== 0) {\r\n                promise.failure(\"Not a valid JPEG!\");\r\n            }\r\n            else {\r\n                seekToApp1().then(function(offset) {\r\n                    promise.success(offset);\r\n                },\r\n                function(error) {\r\n                    promise.failure(error);\r\n                });\r\n            }\r\n        });\r\n\r\n        return promise;\r\n    }\r\n\r\n    // Determine the byte ordering of the EXIF header.\r\n    function isLittleEndian(app1Start) {\r\n        var promise = new qq.Promise();\r\n\r\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\r\n            promise.success(hex === \"4949\");\r\n        });\r\n\r\n        return promise;\r\n    }\r\n\r\n    // Determine the number of directory entries in the EXIF header.\r\n    function getDirEntryCount(app1Start, littleEndian) {\r\n        var promise = new qq.Promise();\r\n\r\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\r\n            if (littleEndian) {\r\n                return promise.success(parseLittleEndian(hex));\r\n            }\r\n            else {\r\n                promise.success(parseInt(hex, 16));\r\n            }\r\n        });\r\n\r\n        return promise;\r\n    }\r\n\r\n    // Get the IFD portion of the EXIF header as a hex string.\r\n    function getIfd(app1Start, dirEntries) {\r\n        var offset = app1Start + 20,\r\n            bytes = dirEntries * 12;\r\n\r\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\r\n    }\r\n\r\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\r\n    function getDirEntries(ifdHex) {\r\n        var entries = [],\r\n            offset = 0;\r\n\r\n        while (offset + 24 <= ifdHex.length) {\r\n            entries.push(ifdHex.slice(offset, offset + 24));\r\n            offset += 24;\r\n        }\r\n\r\n        return entries;\r\n    }\r\n\r\n    // Obtain values for all relevant tags and return them.\r\n    function getTagValues(littleEndian, dirEntries) {\r\n        var TAG_VAL_OFFSET = 16,\r\n            tagsToFind = qq.extend([], TAG_IDS),\r\n            vals = {};\r\n\r\n        qq.each(dirEntries, function(idx, entry) {\r\n            var idHex = entry.slice(0, 4),\r\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\r\n                tagsToFindIdx = tagsToFind.indexOf(id),\r\n                tagValHex, tagName, tagValLength;\r\n\r\n            if (tagsToFindIdx >= 0) {\r\n                tagName = TAG_INFO[id].name;\r\n                tagValLength = TAG_INFO[id].bytes;\r\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\r\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\r\n\r\n                tagsToFind.splice(tagsToFindIdx, 1);\r\n            }\r\n\r\n            if (tagsToFind.length === 0) {\r\n                return false;\r\n            }\r\n        });\r\n\r\n        return vals;\r\n    }\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\r\n         *\r\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\r\n         * If successful, the parsed EXIF header as an object will be included.\r\n         */\r\n        parse: function() {\r\n            var parser = new qq.Promise(),\r\n                onParseFailure = function(message) {\r\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\r\n                    parser.failure(message);\r\n                };\r\n\r\n            getApp1Offset().then(function(app1Offset) {\r\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\r\n\r\n                isLittleEndian(app1Offset).then(function(littleEndian) {\r\n\r\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\r\n\r\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\r\n\r\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\r\n\r\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\r\n                            var dirEntries = getDirEntries(ifdHex),\r\n                                tagValues = getTagValues(littleEndian, dirEntries);\r\n\r\n                            log(\"Successfully parsed some EXIF tags\");\r\n\r\n                            parser.success(tagValues);\r\n                        }, onParseFailure);\r\n                    }, onParseFailure);\r\n                }, onParseFailure);\r\n            }, onParseFailure);\r\n\r\n            return parser;\r\n        }\r\n    });\r\n\r\n    /*<testing>*/\r\n    this._testing = {};\r\n    this._testing.parseLittleEndian = parseLittleEndian;\r\n    /*</testing>*/\r\n};\r\n","/*globals qq */\r\nqq.Identify = function(fileOrBlob, log) {\r\n    \"use strict\";\r\n\r\n    function isIdentifiable(magicBytes, questionableBytes) {\r\n        var identifiable = false,\r\n            magicBytesEntries = [].concat(magicBytes);\r\n\r\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\r\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\r\n                identifiable = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        return identifiable;\r\n    }\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\r\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\r\n         * file, we will examine the blob's type attribute to save CPU cycles.\r\n         *\r\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\r\n         * If successful, the MIME string is passed to the success handler.\r\n         */\r\n        isPreviewable: function() {\r\n            var self = this,\r\n                identifier = new qq.Promise(),\r\n                previewable = false,\r\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\r\n\r\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\r\n\r\n            log(\"First pass: check type attribute of blob object.\");\r\n\r\n            if (this.isPreviewableSync()) {\r\n                log(\"Second pass: check for magic bytes in file header.\");\r\n\r\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\r\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\r\n                        if (isIdentifiable(bytes, hex)) {\r\n                            // Safari is the only supported browser that can deal with TIFFs natively,\r\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\r\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\r\n                                previewable = true;\r\n                                identifier.success(mime);\r\n                            }\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n\r\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\r\n\r\n                    if (!previewable) {\r\n                        identifier.failure();\r\n                    }\r\n                },\r\n                function() {\r\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\r\n                    identifier.failure();\r\n                });\r\n            }\r\n            else {\r\n                identifier.failure();\r\n            }\r\n\r\n            return identifier;\r\n        },\r\n\r\n        /**\r\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\r\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\r\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\r\n         * file's magic bytes.\r\n         *\r\n         * @returns {Boolean} true if the blob can be rendered in the current browser\r\n         */\r\n        isPreviewableSync: function() {\r\n            var fileMime = fileOrBlob.type,\r\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\r\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\r\n                previewable = false,\r\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\r\n\r\n            if (isRecognizedImage) {\r\n                if (fileMime === \"image/tiff\") {\r\n                    previewable = qq.supportedFeatures.tiffPreviews;\r\n                }\r\n                else {\r\n                    previewable = true;\r\n                }\r\n            }\r\n\r\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\r\n\r\n            return previewable;\r\n        }\r\n    });\r\n};\r\n\r\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\r\n    \"image/jpeg\": \"ffd8ff\",\r\n    \"image/gif\": \"474946\",\r\n    \"image/png\": \"89504e\",\r\n    \"image/bmp\": \"424d\",\r\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\r\n};\r\n","/*globals qq*/\r\n/**\r\n * Attempts to validate an image, wherever possible.\r\n *\r\n * @param blob File or Blob representing a user-selecting image.\r\n * @param log Uses this to post log messages to the console.\r\n * @constructor\r\n */\r\nqq.ImageValidation = function(blob, log) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param limits Object with possible image-related limits to enforce.\r\n     * @returns {boolean} true if at least one of the limits has a non-zero value\r\n     */\r\n    function hasNonZeroLimits(limits) {\r\n        var atLeastOne = false;\r\n\r\n        qq.each(limits, function(limit, value) {\r\n            if (value > 0) {\r\n                atLeastOne = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        return atLeastOne;\r\n    }\r\n\r\n    /**\r\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\r\n     * Otherwise, `success` is called on the returned promise with an object containing\r\n     * `width` and `height` properties.\r\n     */\r\n    function getWidthHeight() {\r\n        var sizeDetermination = new qq.Promise();\r\n\r\n        new qq.Identify(blob, log).isPreviewable().then(function() {\r\n            var image = new Image(),\r\n                url = window.URL && window.URL.createObjectURL ? window.URL :\r\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\r\n                      null;\r\n\r\n            if (url) {\r\n                image.onerror = function() {\r\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\r\n                    sizeDetermination.failure();\r\n                };\r\n\r\n                image.onload = function() {\r\n                    sizeDetermination.success({\r\n                        width: this.width,\r\n                        height: this.height\r\n                    });\r\n                };\r\n\r\n                image.src = url.createObjectURL(blob);\r\n            }\r\n            else {\r\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\r\n                sizeDetermination.failure();\r\n            }\r\n        }, sizeDetermination.failure);\r\n\r\n        return sizeDetermination;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param limits Object with possible image-related limits to enforce.\r\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\r\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\r\n     */\r\n    function getFailingLimit(limits, dimensions) {\r\n        var failingLimit;\r\n\r\n        qq.each(limits, function(limitName, limitValue) {\r\n            if (limitValue > 0) {\r\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\r\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\r\n                    actualValue = dimensions[dimensionPropName];\r\n\r\n                /*jshint -W015*/\r\n                switch (limitMatcher[1]) {\r\n                    case \"min\":\r\n                        if (actualValue < limitValue) {\r\n                            failingLimit = limitName;\r\n                            return false;\r\n                        }\r\n                        break;\r\n                    case \"max\":\r\n                        if (actualValue > limitValue) {\r\n                            failingLimit = limitName;\r\n                            return false;\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n\r\n        return failingLimit;\r\n    }\r\n\r\n    /**\r\n     * Validate the associated blob.\r\n     *\r\n     * @param limits\r\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\r\n     * if the blob is not an image, or if the image is not verifiable.\r\n     * Otherwise, `failure` with the name of the failing limit.\r\n     */\r\n    this.validate = function(limits) {\r\n        var validationEffort = new qq.Promise();\r\n\r\n        log(\"Attempting to validate image.\");\r\n\r\n        if (hasNonZeroLimits(limits)) {\r\n            getWidthHeight().then(function(dimensions) {\r\n                var failingLimit = getFailingLimit(limits, dimensions);\r\n\r\n                if (failingLimit) {\r\n                    validationEffort.failure(failingLimit);\r\n                }\r\n                else {\r\n                    validationEffort.success();\r\n                }\r\n            }, validationEffort.success);\r\n        }\r\n        else {\r\n            validationEffort.success();\r\n        }\r\n\r\n        return validationEffort;\r\n    };\r\n};\r\n","/* globals qq */\r\n/**\r\n * Module used to control populating the initial list of files.\r\n *\r\n * @constructor\r\n */\r\nqq.Session = function(spec) {\r\n    \"use strict\";\r\n\r\n    var options = {\r\n        endpoint: null,\r\n        params: {},\r\n        customHeaders: {},\r\n        cors: {},\r\n        addFileRecord: function(sessionData) {},\r\n        log: function(message, level) {}\r\n    };\r\n\r\n    qq.extend(options, spec, true);\r\n\r\n    function isJsonResponseValid(response) {\r\n        if (qq.isArray(response)) {\r\n            return true;\r\n        }\r\n\r\n        options.log(\"Session response is not an array.\", \"error\");\r\n    }\r\n\r\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\r\n        var someItemsIgnored = false;\r\n\r\n        success = success && isJsonResponseValid(fileItems);\r\n\r\n        if (success) {\r\n            qq.each(fileItems, function(idx, fileItem) {\r\n                /* jshint eqnull:true */\r\n                if (fileItem.uuid == null) {\r\n                    someItemsIgnored = true;\r\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\r\n                }\r\n                else if (fileItem.name == null) {\r\n                    someItemsIgnored = true;\r\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\r\n                }\r\n                else {\r\n                    try {\r\n                        options.addFileRecord(fileItem);\r\n                        return true;\r\n                    }\r\n                    catch (err) {\r\n                        someItemsIgnored = true;\r\n                        options.log(err.message, \"error\");\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            });\r\n        }\r\n\r\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\r\n    }\r\n\r\n    // Initiate a call to the server that will be used to populate the initial file list.\r\n    // Returns a `qq.Promise`.\r\n    this.refresh = function() {\r\n        /*jshint indent:false */\r\n        var refreshEffort = new qq.Promise(),\r\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\r\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\r\n            },\r\n            requesterOptions = qq.extend({}, options),\r\n            requester = new qq.SessionAjaxRequester(\r\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\r\n            );\r\n\r\n        requester.queryServer();\r\n\r\n        return refreshEffort;\r\n    };\r\n};\r\n","/*globals qq, XMLHttpRequest*/\r\n/**\r\n * Thin module used to send GET requests to the server, expecting information about session\r\n * data used to initialize an uploader instance.\r\n *\r\n * @param spec Various options used to influence the associated request.\r\n * @constructor\r\n */\r\nqq.SessionAjaxRequester = function(spec) {\r\n    \"use strict\";\r\n\r\n    var requester,\r\n        options = {\r\n            endpoint: null,\r\n            customHeaders: {},\r\n            params: {},\r\n            cors: {\r\n                expected: false,\r\n                sendCredentials: false\r\n            },\r\n            onComplete: function(response, success, xhrOrXdr) {},\r\n            log: function(str, level) {}\r\n        };\r\n\r\n    qq.extend(options, spec);\r\n\r\n    function onComplete(id, xhrOrXdr, isError) {\r\n        var response = null;\r\n\r\n        /* jshint eqnull:true */\r\n        if (xhrOrXdr.responseText != null) {\r\n            try {\r\n                response = qq.parseJson(xhrOrXdr.responseText);\r\n            }\r\n            catch (err) {\r\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\r\n                isError = true;\r\n            }\r\n        }\r\n\r\n        options.onComplete(response, !isError, xhrOrXdr);\r\n    }\r\n\r\n    requester = qq.extend(this, new qq.AjaxRequester({\r\n        acceptHeader: \"application/json\",\r\n        validMethods: [\"GET\"],\r\n        method: \"GET\",\r\n        endpointStore: {\r\n            get: function() {\r\n                return options.endpoint;\r\n            }\r\n        },\r\n        customHeaders: options.customHeaders,\r\n        log: options.log,\r\n        onComplete: onComplete,\r\n        cors: options.cors\r\n    }));\r\n\r\n    qq.extend(this, {\r\n        queryServer: function() {\r\n            var params = qq.extend({}, options.params);\r\n\r\n            options.log(\"Session query request.\");\r\n\r\n            requester.initTransport(\"sessionRefresh\")\r\n                .withParams(params)\r\n                .withCacheBuster()\r\n                .send();\r\n        }\r\n    });\r\n};\r\n","/* globals qq, ExifRestorer */\r\n/**\r\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\r\n * Scaled images are generated and converted to blobs on-demand.\r\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\r\n *\r\n * @param spec Information about the scaled images to generate.\r\n * @param log Logger instance\r\n * @constructor\r\n */\r\nqq.Scaler = function(spec, log) {\r\n    \"use strict\";\r\n\r\n    var self = this,\r\n        customResizeFunction = spec.customResizer,\r\n        includeOriginal = spec.sendOriginal,\r\n        orient = spec.orient,\r\n        defaultType = spec.defaultType,\r\n        defaultQuality = spec.defaultQuality / 100,\r\n        failedToScaleText = spec.failureText,\r\n        includeExif = spec.includeExif,\r\n        sizes = this._getSortedSizes(spec.sizes);\r\n\r\n    // Revealed API for instances of this module\r\n    qq.extend(this, {\r\n        // If no targeted sizes have been declared or if this browser doesn't support\r\n        // client-side image preview generation, there is no scaling to do.\r\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\r\n\r\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\r\n            var self = this,\r\n                records = [],\r\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\r\n                identifier = new qq.Identify(originalBlob, log);\r\n\r\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\r\n            if (identifier.isPreviewableSync()) {\r\n                // Create records for each scaled version & add them to the records array, smallest first.\r\n                qq.each(sizes, function(idx, sizeRecord) {\r\n                    var outputType = self._determineOutputType({\r\n                        defaultType: defaultType,\r\n                        requestedType: sizeRecord.type,\r\n                        refType: originalBlob.type\r\n                    });\r\n\r\n                    records.push({\r\n                        uuid: qq.getUniqueId(),\r\n                        name: self._getName(originalFileName, {\r\n                            name: sizeRecord.name,\r\n                            type: outputType,\r\n                            refType: originalBlob.type\r\n                        }),\r\n                        blob: new qq.BlobProxy(originalBlob,\r\n                        qq.bind(self._generateScaledImage, self, {\r\n                            customResizeFunction: customResizeFunction,\r\n                            maxSize: sizeRecord.maxSize,\r\n                            orient: orient,\r\n                            type: outputType,\r\n                            quality: defaultQuality,\r\n                            failedText: failedToScaleText,\r\n                            includeExif: includeExif,\r\n                            log: log\r\n                        }))\r\n                    });\r\n                });\r\n\r\n                records.push({\r\n                    uuid: originalFileUuid,\r\n                    name: originalFileName,\r\n                    size: originalBlob.size,\r\n                    blob: includeOriginal ? originalBlob : null\r\n                });\r\n            }\r\n            else {\r\n                records.push({\r\n                    uuid: originalFileUuid,\r\n                    name: originalFileName,\r\n                    size: originalBlob.size,\r\n                    blob: originalBlob\r\n                });\r\n            }\r\n\r\n            return records;\r\n        },\r\n\r\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\r\n            var self = this,\r\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\r\n                scaledIds = [],\r\n                originalId = null,\r\n                addFileToHandler = api.addFileToHandler,\r\n                uploadData = api.uploadData,\r\n                paramsStore = api.paramsStore,\r\n                proxyGroupId = qq.getUniqueId();\r\n\r\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\r\n                var blobSize = record.size,\r\n                    id;\r\n\r\n                if (record.blob instanceof qq.BlobProxy) {\r\n                    blobSize = -1;\r\n                }\r\n\r\n                id = uploadData.addFile({\r\n                    uuid: record.uuid,\r\n                    name: record.name,\r\n                    size: blobSize,\r\n                    batchId: batchId,\r\n                    proxyGroupId: proxyGroupId\r\n                });\r\n\r\n                if (record.blob instanceof qq.BlobProxy) {\r\n                    scaledIds.push(id);\r\n                }\r\n                else {\r\n                    originalId = id;\r\n                }\r\n\r\n                if (record.blob) {\r\n                    addFileToHandler(id, record.blob);\r\n                    fileList.push({id: id, file: record.blob});\r\n                }\r\n                else {\r\n                    uploadData.setStatus(id, qq.status.REJECTED);\r\n                }\r\n            });\r\n\r\n            // If we are potentially uploading an original file and some scaled versions,\r\n            // ensure the scaled versions include reference's to the parent's UUID and size\r\n            // in their associated upload requests.\r\n            if (originalId !== null) {\r\n                qq.each(scaledIds, function(idx, scaledId) {\r\n                    var params = {\r\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\r\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\r\n                    };\r\n\r\n                    // Make sure the UUID for each scaled image is sent with the upload request,\r\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\r\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\r\n\r\n                    uploadData.setParentId(scaledId, originalId);\r\n                    paramsStore.addReadOnly(scaledId, params);\r\n                });\r\n\r\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\r\n                // parameter as well.\r\n                if (scaledIds.length) {\r\n                    (function() {\r\n                        var param = {};\r\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\r\n                        paramsStore.addReadOnly(originalId, param);\r\n                    }());\r\n                }\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\nqq.extend(qq.Scaler.prototype, {\r\n    scaleImage: function(id, specs, api) {\r\n        \"use strict\";\r\n\r\n        if (!qq.supportedFeatures.scaling) {\r\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\r\n        }\r\n\r\n        var scalingEffort = new qq.Promise(),\r\n            log = api.log,\r\n            file = api.getFile(id),\r\n            uploadData = api.uploadData.retrieve({id: id}),\r\n            name = uploadData && uploadData.name,\r\n            uuid = uploadData && uploadData.uuid,\r\n            scalingOptions = {\r\n                customResizer: specs.customResizer,\r\n                sendOriginal: false,\r\n                orient: specs.orient,\r\n                defaultType: specs.type || null,\r\n                defaultQuality: specs.quality,\r\n                failedToScaleText: \"Unable to scale\",\r\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\r\n            },\r\n            scaler = new qq.Scaler(scalingOptions, log);\r\n\r\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\r\n            scalingEffort.failure();\r\n\r\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\r\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\r\n        }\r\n        else {\r\n            (qq.bind(function() {\r\n                // Assumption: There will never be more than one record\r\n                var record = scaler.getFileRecords(uuid, name, file)[0];\r\n\r\n                if (record && record.blob instanceof qq.BlobProxy) {\r\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\r\n                }\r\n                else {\r\n                    log(id + \" is not a scalable image!\", \"error\");\r\n                    scalingEffort.failure();\r\n                }\r\n            }, this)());\r\n        }\r\n\r\n        return scalingEffort;\r\n    },\r\n\r\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\r\n    // image/jpeg and image/png are the only safe choices at this time.\r\n    _determineOutputType: function(spec) {\r\n        \"use strict\";\r\n\r\n        var requestedType = spec.requestedType,\r\n            defaultType = spec.defaultType,\r\n            referenceType = spec.refType;\r\n\r\n        // If a default type and requested type have not been specified, this should be a\r\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\r\n        if (!defaultType && !requestedType) {\r\n            if (referenceType !== \"image/jpeg\") {\r\n                return \"image/png\";\r\n            }\r\n            return referenceType;\r\n        }\r\n\r\n        // A specified default type is used when a requested type is not specified.\r\n        if (!requestedType) {\r\n            return defaultType;\r\n        }\r\n\r\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\r\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\r\n            if (requestedType === \"image/tiff\") {\r\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\r\n            }\r\n\r\n            return requestedType;\r\n        }\r\n\r\n        return defaultType;\r\n    },\r\n\r\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\r\n    _getName: function(originalName, scaledVersionProperties) {\r\n        \"use strict\";\r\n\r\n        var startOfExt = originalName.lastIndexOf(\".\"),\r\n            versionType = scaledVersionProperties.type || \"image/png\",\r\n            referenceType = scaledVersionProperties.refType,\r\n            scaledName = \"\",\r\n            scaledExt = qq.getExtension(originalName),\r\n            nameAppendage = \"\";\r\n\r\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\r\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\r\n        }\r\n\r\n        if (startOfExt >= 0) {\r\n            scaledName = originalName.substr(0, startOfExt);\r\n\r\n            if (referenceType !== versionType) {\r\n                scaledExt = versionType.split(\"/\")[1];\r\n            }\r\n\r\n            scaledName += nameAppendage + \".\" + scaledExt;\r\n        }\r\n        else {\r\n            scaledName = originalName + nameAppendage;\r\n        }\r\n\r\n        return scaledName;\r\n    },\r\n\r\n    // We want the smallest scaled file to be uploaded first\r\n    _getSortedSizes: function(sizes) {\r\n        \"use strict\";\r\n\r\n        sizes = qq.extend([], sizes);\r\n\r\n        return sizes.sort(function(a, b) {\r\n            if (a.maxSize > b.maxSize) {\r\n                return 1;\r\n            }\r\n            if (a.maxSize < b.maxSize) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    },\r\n\r\n    _generateScaledImage: function(spec, sourceFile) {\r\n        \"use strict\";\r\n\r\n        var self = this,\r\n            customResizeFunction = spec.customResizeFunction,\r\n            log = spec.log,\r\n            maxSize = spec.maxSize,\r\n            orient = spec.orient,\r\n            type = spec.type,\r\n            quality = spec.quality,\r\n            failedText = spec.failedText,\r\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\r\n            scalingEffort = new qq.Promise(),\r\n            imageGenerator = new qq.ImageGenerator(log),\r\n            canvas = document.createElement(\"canvas\");\r\n\r\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\r\n\r\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\r\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\r\n                signalSuccess = function() {\r\n                    log(\"Success generating scaled version for \" + sourceFile.name);\r\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\r\n                    scalingEffort.success(blob);\r\n                };\r\n\r\n            if (includeExif) {\r\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\r\n                    scaledImageDataUri = scaledImageDataUriWithExif;\r\n                    signalSuccess();\r\n                },\r\n                function() {\r\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\r\n                    signalSuccess();\r\n                });\r\n            }\r\n            else {\r\n                signalSuccess();\r\n            }\r\n        }, function() {\r\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\r\n            scalingEffort.failure(failedText);\r\n        });\r\n\r\n        return scalingEffort;\r\n    },\r\n\r\n    // Attempt to insert the original image's EXIF header into a scaled version.\r\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\r\n        \"use strict\";\r\n\r\n        var reader = new FileReader(),\r\n            insertionEffort = new qq.Promise(),\r\n            originalImageDataUri = \"\";\r\n\r\n        reader.onload = function() {\r\n            originalImageDataUri = reader.result;\r\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\r\n        };\r\n\r\n        reader.onerror = function() {\r\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\r\n            insertionEffort.failure();\r\n        };\r\n\r\n        reader.readAsDataURL(originalImage);\r\n\r\n        return insertionEffort;\r\n    },\r\n\r\n    _dataUriToBlob: function(dataUri) {\r\n        \"use strict\";\r\n\r\n        var byteString, mimeString, arrayBuffer, intArray;\r\n\r\n        // convert base64 to raw binary data held in a string\r\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\r\n            byteString = atob(dataUri.split(\",\")[1]);\r\n        }\r\n        else {\r\n            byteString = decodeURI(dataUri.split(\",\")[1]);\r\n        }\r\n\r\n        // extract the MIME\r\n        mimeString = dataUri.split(\",\")[0]\r\n            .split(\":\")[1]\r\n            .split(\";\")[0];\r\n\r\n        // write the bytes of the binary string to an ArrayBuffer\r\n        arrayBuffer = new ArrayBuffer(byteString.length);\r\n        intArray = new Uint8Array(arrayBuffer);\r\n        qq.each(byteString, function(idx, character) {\r\n            intArray[idx] = character.charCodeAt(0);\r\n        });\r\n\r\n        return this._createBlob(arrayBuffer, mimeString);\r\n    },\r\n\r\n    _createBlob: function(data, mime) {\r\n        \"use strict\";\r\n\r\n        var BlobBuilder = window.BlobBuilder ||\r\n                window.WebKitBlobBuilder ||\r\n                window.MozBlobBuilder ||\r\n                window.MSBlobBuilder,\r\n            blobBuilder = BlobBuilder && new BlobBuilder();\r\n\r\n        if (blobBuilder) {\r\n            blobBuilder.append(data);\r\n            return blobBuilder.getBlob(mime);\r\n        }\r\n        else {\r\n            return new Blob([data], {type: mime});\r\n        }\r\n    }\r\n});\r\n","//Based on MinifyJpeg\r\n//http://elicon.blog57.fc2.com/blog-entry-206.html\r\n\r\nqq.ExifRestorer = (function()\r\n{\r\n   \r\n\tvar ExifRestorer = {};\r\n\t \r\n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\r\n                         \"QRSTUVWXYZabcdef\" +\r\n                         \"ghijklmnopqrstuv\" +\r\n                         \"wxyz0123456789+/\" +\r\n                         \"=\";\r\n\r\n    ExifRestorer.encode64 = function(input)\r\n    {\r\n        var output = \"\",\r\n            chr1, chr2, chr3 = \"\",\r\n            enc1, enc2, enc3, enc4 = \"\",\r\n            i = 0;\r\n\r\n        do {\r\n            chr1 = input[i++];\r\n            chr2 = input[i++];\r\n            chr3 = input[i++];\r\n\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n\r\n            if (isNaN(chr2)) {\r\n               enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n               enc4 = 64;\r\n            }\r\n\r\n            output = output +\r\n               this.KEY_STR.charAt(enc1) +\r\n               this.KEY_STR.charAt(enc2) +\r\n               this.KEY_STR.charAt(enc3) +\r\n               this.KEY_STR.charAt(enc4);\r\n            chr1 = chr2 = chr3 = \"\";\r\n            enc1 = enc2 = enc3 = enc4 = \"\";\r\n        } while (i < input.length);\r\n\r\n        return output;\r\n    };\r\n    \r\n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\r\n    {\r\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\r\n\r\n        if (!origFileBase64.match(expectedBase64Header))\r\n        {\r\n        \treturn resizedFileBase64;\r\n        }       \r\n        \r\n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\r\n        var segments = this.slice2Segments(rawImage);\r\n                \r\n        var image = this.exifManipulation(resizedFileBase64, segments);\r\n        \r\n        return expectedBase64Header + this.encode64(image);\r\n        \r\n    };\r\n\r\n\r\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\r\n    {\r\n            var exifArray = this.getExifArray(segments),\r\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\r\n                aBuffer = new Uint8Array(newImageArray);\r\n\r\n            return aBuffer;\r\n    };\r\n\r\n\r\n    ExifRestorer.getExifArray = function(segments)\r\n    {\r\n            var seg;\r\n            for (var x = 0; x < segments.length; x++)\r\n            {\r\n                seg = segments[x];\r\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\r\n                {\r\n                    return seg;\r\n                }\r\n            }\r\n            return [];\r\n    };\r\n\r\n\r\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\r\n    {\r\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\r\n                buf = this.decode64(imageData),\r\n                separatePoint = buf.indexOf(255,3),\r\n                mae = buf.slice(0, separatePoint),\r\n                ato = buf.slice(separatePoint),\r\n                array = mae;\r\n\r\n            array = array.concat(exifArray);\r\n            array = array.concat(ato);\r\n           return array;\r\n    };\r\n\r\n\r\n    \r\n    ExifRestorer.slice2Segments = function(rawImageArray)\r\n    {\r\n        var head = 0,\r\n            segments = [];\r\n\r\n        while (1)\r\n        {\r\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\r\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\r\n            {\r\n                head += 2;\r\n            }\r\n            else\r\n            {\r\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\r\n                    endPoint = head + length + 2,\r\n                    seg = rawImageArray.slice(head, endPoint);\r\n                segments.push(seg);\r\n                head = endPoint;\r\n            }\r\n            if (head > rawImageArray.length){break;}\r\n        }\r\n\r\n        return segments;\r\n    };\r\n\r\n\r\n    \r\n    ExifRestorer.decode64 = function(input) \r\n    {\r\n        var output = \"\",\r\n            chr1, chr2, chr3 = \"\",\r\n            enc1, enc2, enc3, enc4 = \"\",\r\n            i = 0,\r\n            buf = [];\r\n\r\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\r\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\r\n        if (base64test.exec(input)) {\r\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\r\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\r\n        }\r\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n\r\n        do {\r\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\r\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\r\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\r\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\r\n\r\n            chr1 = (enc1 << 2) | (enc2 >> 4);\r\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n            chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n            buf.push(chr1);\r\n\r\n            if (enc3 != 64) {\r\n               buf.push(chr2);\r\n            }\r\n            if (enc4 != 64) {\r\n               buf.push(chr3);\r\n            }\r\n\r\n            chr1 = chr2 = chr3 = \"\";\r\n            enc1 = enc2 = enc3 = enc4 = \"\";\r\n\r\n        } while (i < input.length);\r\n\r\n        return buf;\r\n    };\r\n\r\n    \r\n    return ExifRestorer;\r\n})();\r\n","/* globals qq */\r\n/**\r\n * Keeps a running tally of total upload progress for a batch of files.\r\n *\r\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\r\n * @param getSize Function that returns the size of a file given its ID\r\n * @constructor\r\n */\r\nqq.TotalProgress = function(callback, getSize) {\r\n    \"use strict\";\r\n\r\n    var perFileProgress = {},\r\n        totalLoaded = 0,\r\n        totalSize = 0,\r\n\r\n        lastLoadedSent = -1,\r\n        lastTotalSent = -1,\r\n        callbackProxy = function(loaded, total) {\r\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\r\n                callback(loaded, total);\r\n            }\r\n\r\n            lastLoadedSent = loaded;\r\n            lastTotalSent = total;\r\n        },\r\n\r\n        /**\r\n         * @param failed Array of file IDs that have failed\r\n         * @param retryable Array of file IDs that are retryable\r\n         * @returns true if none of the failed files are eligible for retry\r\n         */\r\n        noRetryableFiles = function(failed, retryable) {\r\n            var none = true;\r\n\r\n            qq.each(failed, function(idx, failedId) {\r\n                if (qq.indexOf(retryable, failedId) >= 0) {\r\n                    none = false;\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            return none;\r\n        },\r\n\r\n        onCancel = function(id) {\r\n            updateTotalProgress(id, -1, -1);\r\n            delete perFileProgress[id];\r\n        },\r\n\r\n        onAllComplete = function(successful, failed, retryable) {\r\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\r\n                callbackProxy(totalSize, totalSize);\r\n                this.reset();\r\n            }\r\n        },\r\n\r\n        onNew = function(id) {\r\n            var size = getSize(id);\r\n\r\n            // We might not know the size yet, such as for blob proxies\r\n            if (size > 0) {\r\n                updateTotalProgress(id, 0, size);\r\n                perFileProgress[id] = {loaded: 0, total: size};\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\r\n         * be appropriate to re-calculate and disseminate this data.\r\n         *\r\n         * @param id ID of a file that has changed in some important way\r\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\r\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\r\n         */\r\n        updateTotalProgress = function(id, newLoaded, newTotal) {\r\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\r\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\r\n\r\n            if (newLoaded === -1 && newTotal === -1) {\r\n                totalLoaded -= oldLoaded;\r\n                totalSize -= oldTotal;\r\n            }\r\n            else {\r\n                if (newLoaded) {\r\n                    totalLoaded += newLoaded - oldLoaded;\r\n                }\r\n                if (newTotal) {\r\n                    totalSize += newTotal - oldTotal;\r\n                }\r\n            }\r\n\r\n            callbackProxy(totalLoaded, totalSize);\r\n        };\r\n\r\n    qq.extend(this, {\r\n        // Called when a batch of files has completed uploading.\r\n        onAllComplete: onAllComplete,\r\n\r\n        // Called when the status of a file has changed.\r\n        onStatusChange: function(id, oldStatus, newStatus) {\r\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\r\n                onCancel(id);\r\n            }\r\n            else if (newStatus === qq.status.SUBMITTING) {\r\n                onNew(id);\r\n            }\r\n        },\r\n\r\n        // Called whenever the upload progress of an individual file has changed.\r\n        onIndividualProgress: function(id, loaded, total) {\r\n            updateTotalProgress(id, loaded, total);\r\n            perFileProgress[id] = {loaded: loaded, total: total};\r\n        },\r\n\r\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\r\n        onNewSize: function(id) {\r\n            onNew(id);\r\n        },\r\n\r\n        reset: function() {\r\n            perFileProgress = {};\r\n            totalLoaded = 0;\r\n            totalSize = 0;\r\n        }\r\n    });\r\n};\r\n","/*globals qq*/\r\nqq.PasteSupport = function(o) {\r\n    \"use strict\";\r\n\r\n    var options, detachPasteHandler;\r\n\r\n    options = {\r\n        targetElement: null,\r\n        callbacks: {\r\n            log: function(message, level) {},\r\n            pasteReceived: function(blob) {}\r\n        }\r\n    };\r\n\r\n    function isImage(item) {\r\n        return item.type &&\r\n            item.type.indexOf(\"image/\") === 0;\r\n    }\r\n\r\n    function registerPasteHandler() {\r\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\r\n            var clipboardData = event.clipboardData;\r\n\r\n            if (clipboardData) {\r\n                qq.each(clipboardData.items, function(idx, item) {\r\n                    if (isImage(item)) {\r\n                        var blob = item.getAsFile();\r\n                        options.callbacks.pasteReceived(blob);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    function unregisterPasteHandler() {\r\n        if (detachPasteHandler) {\r\n            detachPasteHandler();\r\n        }\r\n    }\r\n\r\n    qq.extend(options, o);\r\n    registerPasteHandler();\r\n\r\n    qq.extend(this, {\r\n        reset: function() {\r\n            unregisterPasteHandler();\r\n        }\r\n    });\r\n};\r\n","/* globals qq */\r\n/**\r\n * Module that handles support for existing forms.\r\n *\r\n * @param options Options passed from the integrator-supplied options related to form support.\r\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\r\n * @param log Proxy for the logger\r\n * @constructor\r\n */\r\nqq.FormSupport = function(options, startUpload, log) {\r\n    \"use strict\";\r\n    var self  = this,\r\n        interceptSubmit = options.interceptSubmit,\r\n        formEl = options.element,\r\n        autoUpload = options.autoUpload;\r\n\r\n    // Available on the public API associated with this module.\r\n    qq.extend(this, {\r\n        // To be used by the caller to determine if the endpoint will be determined by some processing\r\n        // that occurs in this module, such as if the form has an action attribute.\r\n        // Ignore if `attachToForm === false`.\r\n        newEndpoint: null,\r\n\r\n        // To be used by the caller to determine if auto uploading should be allowed.\r\n        // Ignore if `attachToForm === false`.\r\n        newAutoUpload: autoUpload,\r\n\r\n        // true if a form was detected and is being tracked by this module\r\n        attachedToForm: false,\r\n\r\n        // Returns an object with names and values for all valid form elements associated with the attached form.\r\n        getFormInputsAsObject: function() {\r\n            /* jshint eqnull:true */\r\n            if (formEl == null) {\r\n                return null;\r\n            }\r\n\r\n            return self._form2Obj(formEl);\r\n        }\r\n    });\r\n\r\n    // If the form contains an action attribute, this should be the new upload endpoint.\r\n    function determineNewEndpoint(formEl) {\r\n        if (formEl.getAttribute(\"action\")) {\r\n            self.newEndpoint = formEl.getAttribute(\"action\");\r\n        }\r\n    }\r\n\r\n    // Return true only if the form is valid, or if we cannot make this determination.\r\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\r\n    function validateForm(formEl, nativeSubmit) {\r\n        if (formEl.checkValidity && !formEl.checkValidity()) {\r\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\r\n            nativeSubmit();\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\r\n    function maybeUploadOnSubmit(formEl) {\r\n        var nativeSubmit = formEl.submit;\r\n\r\n        // Intercept and squelch submit events.\r\n        qq(formEl).attach(\"submit\", function(event) {\r\n            event = event || window.event;\r\n\r\n            if (event.preventDefault) {\r\n                event.preventDefault();\r\n            }\r\n            else {\r\n                event.returnValue = false;\r\n            }\r\n\r\n            validateForm(formEl, nativeSubmit) && startUpload();\r\n        });\r\n\r\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\r\n        // Intercept that too.\r\n        formEl.submit = function() {\r\n            validateForm(formEl, nativeSubmit) && startUpload();\r\n        };\r\n    }\r\n\r\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\r\n    // The rest of the code in this module depends on this being an HTMLElement.\r\n    function determineFormEl(formEl) {\r\n        if (formEl) {\r\n            if (qq.isString(formEl)) {\r\n                formEl = document.getElementById(formEl);\r\n            }\r\n\r\n            if (formEl) {\r\n                log(\"Attaching to form element.\");\r\n                determineNewEndpoint(formEl);\r\n                interceptSubmit && maybeUploadOnSubmit(formEl);\r\n            }\r\n        }\r\n\r\n        return formEl;\r\n    }\r\n\r\n    formEl = determineFormEl(formEl);\r\n    this.attachedToForm = !!formEl;\r\n};\r\n\r\nqq.extend(qq.FormSupport.prototype, {\r\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\r\n    // construct from a given form when the form is submitted.\r\n    _form2Obj: function(form) {\r\n        \"use strict\";\r\n        var obj = {},\r\n            notIrrelevantType = function(type) {\r\n                var irrelevantTypes = [\r\n                    \"button\",\r\n                    \"image\",\r\n                    \"reset\",\r\n                    \"submit\"\r\n                ];\r\n\r\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\r\n            },\r\n            radioOrCheckbox = function(type) {\r\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\r\n            },\r\n            ignoreValue = function(el) {\r\n                if (radioOrCheckbox(el.type) && !el.checked) {\r\n                    return true;\r\n                }\r\n\r\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\r\n            },\r\n            selectValue = function(select) {\r\n                var value = null;\r\n\r\n                qq.each(qq(select).children(), function(idx, child) {\r\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\r\n                        value = child.value;\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                return value;\r\n            };\r\n\r\n        qq.each(form.elements, function(idx, el) {\r\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\r\n                notIrrelevantType(el.type) &&\r\n                !ignoreValue(el)) {\r\n\r\n                obj[el.name] = el.value;\r\n            }\r\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\r\n                var value = selectValue(el);\r\n\r\n                if (value !== null) {\r\n                    obj[el.name] = value;\r\n                }\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n});\r\n","/*globals qq*/\r\n/**\r\n * Upload handler used that assumes the current user agent does not have any support for the\r\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to\r\n * a generic server.\r\n *\r\n * @param options Options passed from the base handler\r\n * @param proxy Callbacks & methods used to query for or push out data/changes\r\n */\r\nqq.traditional = qq.traditional || {};\r\nqq.traditional.FormUploadHandler = function(options, proxy) {\r\n    \"use strict\";\r\n\r\n    var handler = this,\r\n        getName = proxy.getName,\r\n        getUuid = proxy.getUuid,\r\n        log = proxy.log;\r\n\r\n    /**\r\n     * Returns json object received by iframe from server.\r\n     */\r\n    function getIframeContentJson(id, iframe) {\r\n        /*jshint evil: true*/\r\n\r\n        var response, doc, innerHtml;\r\n\r\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\r\n        try {\r\n            // iframe.contentWindow.document - for IE<7\r\n            doc = iframe.contentDocument || iframe.contentWindow.document;\r\n            innerHtml = doc.body.innerHTML;\r\n\r\n            log(\"converting iframe's innerHTML to JSON\");\r\n            log(\"innerHTML = \" + innerHtml);\r\n            //plain text response may be wrapped in <pre> tag\r\n            if (innerHtml && innerHtml.match(/^<pre/i)) {\r\n                innerHtml = doc.body.firstChild.firstChild.nodeValue;\r\n            }\r\n\r\n            response = handler._parseJsonResponse(innerHtml);\r\n        }\r\n        catch (error) {\r\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\r\n            response = {success: false};\r\n        }\r\n\r\n        return response;\r\n    }\r\n\r\n    /**\r\n     * Creates form, that will be submitted to iframe\r\n     */\r\n    function createForm(id, iframe) {\r\n        var params = options.paramsStore.get(id),\r\n            method = options.method.toLowerCase() === \"get\" ? \"GET\" : \"POST\",\r\n            endpoint = options.endpointStore.get(id),\r\n            name = getName(id);\r\n\r\n        params[options.uuidName] = getUuid(id);\r\n        params[options.filenameParam] = name;\r\n\r\n        return handler._initFormForUpload({\r\n            method: method,\r\n            endpoint: endpoint,\r\n            params: params,\r\n            paramsInBody: options.paramsInBody,\r\n            targetName: iframe.name\r\n        });\r\n    }\r\n\r\n    this.uploadFile = function(id) {\r\n        var input = handler.getInput(id),\r\n            iframe = handler._createIframe(id),\r\n            promise = new qq.Promise(),\r\n            form;\r\n\r\n        form = createForm(id, iframe);\r\n        form.appendChild(input);\r\n\r\n        handler._attachLoadEvent(iframe, function(responseFromMessage) {\r\n            log(\"iframe loaded\");\r\n\r\n            var response = responseFromMessage ? responseFromMessage : getIframeContentJson(id, iframe);\r\n\r\n            handler._detachLoadEvent(id);\r\n\r\n            //we can't remove an iframe if the iframe doesn't belong to the same domain\r\n            if (!options.cors.expected) {\r\n                qq(iframe).remove();\r\n            }\r\n\r\n            if (response.success) {\r\n                promise.success(response);\r\n            }\r\n            else {\r\n                promise.failure(response);\r\n            }\r\n        });\r\n\r\n        log(\"Sending upload request for \" + id);\r\n        form.submit();\r\n        qq(form).remove();\r\n\r\n        return promise;\r\n    };\r\n\r\n    qq.extend(this, new qq.FormUploadHandler({\r\n        options: {\r\n            isCors: options.cors.expected,\r\n            inputName: options.inputName\r\n        },\r\n\r\n        proxy: {\r\n            onCancel: options.onCancel,\r\n            getName: getName,\r\n            getUuid: getUuid,\r\n            log: log\r\n        }\r\n    }));\r\n};\r\n","/*globals qq*/\r\n/**\r\n * Upload handler used to upload to traditional endpoints.  It depends on File API support, and, therefore,\r\n * makes use of `XMLHttpRequest` level 2 to upload `File`s and `Blob`s to a generic server.\r\n *\r\n * @param spec Options passed from the base handler\r\n * @param proxy Callbacks & methods used to query for or push out data/changes\r\n */\r\nqq.traditional = qq.traditional || {};\r\nqq.traditional.XhrUploadHandler = function(spec, proxy) {\r\n    \"use strict\";\r\n\r\n    var handler = this,\r\n        getName = proxy.getName,\r\n        getSize = proxy.getSize,\r\n        getUuid = proxy.getUuid,\r\n        log = proxy.log,\r\n        multipart = spec.forceMultipart || spec.paramsInBody,\r\n\r\n        addChunkingSpecificParams = function(id, params, chunkData) {\r\n            var size = getSize(id),\r\n                name = getName(id);\r\n\r\n            params[spec.chunking.paramNames.partIndex] = chunkData.part;\r\n            params[spec.chunking.paramNames.partByteOffset] = chunkData.start;\r\n            params[spec.chunking.paramNames.chunkSize] = chunkData.size;\r\n            params[spec.chunking.paramNames.totalParts] = chunkData.count;\r\n            params[spec.totalFileSizeName] = size;\r\n\r\n            /**\r\n             * When a Blob is sent in a multipart request, the filename value in the content-disposition header is either \"blob\"\r\n             * or an empty string.  So, we will need to include the actual file name as a param in this case.\r\n             */\r\n            if (multipart) {\r\n                params[spec.filenameParam] = name;\r\n            }\r\n        },\r\n\r\n        allChunksDoneRequester = new qq.traditional.AllChunksDoneAjaxRequester({\r\n            cors: spec.cors,\r\n            endpoint: spec.chunking.success.endpoint,\r\n            log: log\r\n        }),\r\n\r\n        createReadyStateChangedHandler = function(id, xhr) {\r\n            var promise = new qq.Promise();\r\n\r\n            xhr.onreadystatechange = function() {\r\n                if (xhr.readyState === 4) {\r\n                    var result = onUploadOrChunkComplete(id, xhr);\r\n\r\n                    if (result.success) {\r\n                        promise.success(result.response, xhr);\r\n                    }\r\n                    else {\r\n                        promise.failure(result.response, xhr);\r\n                    }\r\n                }\r\n            };\r\n\r\n            return promise;\r\n        },\r\n\r\n        getChunksCompleteParams = function(id) {\r\n            var params = spec.paramsStore.get(id),\r\n                name = getName(id),\r\n                size = getSize(id);\r\n\r\n            params[spec.uuidName] = getUuid(id);\r\n            params[spec.filenameParam] = name;\r\n            params[spec.totalFileSizeName] = size;\r\n            params[spec.chunking.paramNames.totalParts] = handler._getTotalChunks(id);\r\n\r\n            return params;\r\n        },\r\n\r\n        isErrorUploadResponse = function(xhr, response) {\r\n            return qq.indexOf([200, 201, 202, 203, 204], xhr.status) < 0 ||\r\n                !response.success ||\r\n                response.reset;\r\n        },\r\n\r\n        onUploadOrChunkComplete = function(id, xhr) {\r\n            var response;\r\n\r\n            log(\"xhr - server response received for \" + id);\r\n            log(\"responseText = \" + xhr.responseText);\r\n\r\n            response = parseResponse(true, xhr);\r\n\r\n            return {\r\n                success: !isErrorUploadResponse(xhr, response),\r\n                response: response\r\n            };\r\n        },\r\n\r\n        // If this is an upload response, we require a JSON payload, otherwise, it is optional.\r\n        parseResponse = function(upload, xhr) {\r\n            var response = {};\r\n\r\n            try {\r\n                log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\r\n                response = qq.parseJson(xhr.responseText);\r\n            }\r\n            catch (error) {\r\n                upload && log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\r\n            }\r\n\r\n            return response;\r\n        },\r\n\r\n        sendChunksCompleteRequest = function(id) {\r\n            var promise = new qq.Promise();\r\n\r\n            allChunksDoneRequester.complete(\r\n                    id,\r\n                    handler._createXhr(id),\r\n                    getChunksCompleteParams(id),\r\n                    spec.customHeaders.get(id)\r\n                )\r\n                .then(function(xhr) {\r\n                    promise.success(parseResponse(false, xhr), xhr);\r\n                }, function(xhr) {\r\n                    promise.failure(parseResponse(false, xhr), xhr);\r\n                });\r\n\r\n            return promise;\r\n        },\r\n\r\n        setParamsAndGetEntityToSend = function(params, xhr, fileOrBlob, id) {\r\n            var formData = new FormData(),\r\n                method = spec.method,\r\n                endpoint = spec.endpointStore.get(id),\r\n                name = getName(id),\r\n                size = getSize(id);\r\n\r\n            params[spec.uuidName] = getUuid(id);\r\n            params[spec.filenameParam] = name;\r\n\r\n            if (multipart) {\r\n                params[spec.totalFileSizeName] = size;\r\n            }\r\n\r\n            //build query string\r\n            if (!spec.paramsInBody) {\r\n                if (!multipart) {\r\n                    params[spec.inputName] = name;\r\n                }\r\n                endpoint = qq.obj2url(params, endpoint);\r\n            }\r\n\r\n            xhr.open(method, endpoint, true);\r\n\r\n            if (spec.cors.expected && spec.cors.sendCredentials) {\r\n                xhr.withCredentials = true;\r\n            }\r\n\r\n            if (multipart) {\r\n                if (spec.paramsInBody) {\r\n                    qq.obj2FormData(params, formData);\r\n                }\r\n\r\n                formData.append(spec.inputName, fileOrBlob);\r\n                return formData;\r\n            }\r\n\r\n            return fileOrBlob;\r\n        },\r\n\r\n        setUploadHeaders = function(id, xhr) {\r\n            var extraHeaders = spec.customHeaders.get(id),\r\n                fileOrBlob = handler.getFile(id);\r\n\r\n            xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\r\n\r\n            if (!multipart) {\r\n                xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\r\n                //NOTE: return mime type in xhr works on chrome 16.0.9 firefox 11.0a2\r\n                xhr.setRequestHeader(\"X-Mime-Type\", fileOrBlob.type);\r\n            }\r\n\r\n            qq.each(extraHeaders, function(name, val) {\r\n                xhr.setRequestHeader(name, val);\r\n            });\r\n        };\r\n\r\n    qq.extend(this, {\r\n        uploadChunk: function(id, chunkIdx, resuming) {\r\n            var chunkData = handler._getChunkData(id, chunkIdx),\r\n                xhr = handler._createXhr(id, chunkIdx),\r\n                size = getSize(id),\r\n                promise, toSend, params;\r\n\r\n            promise = createReadyStateChangedHandler(id, xhr);\r\n            handler._registerProgressHandler(id, chunkIdx, chunkData.size);\r\n            params = spec.paramsStore.get(id);\r\n            addChunkingSpecificParams(id, params, chunkData);\r\n\r\n            if (resuming) {\r\n                params[spec.resume.paramNames.resuming] = true;\r\n            }\r\n\r\n            toSend = setParamsAndGetEntityToSend(params, xhr, chunkData.blob, id);\r\n            setUploadHeaders(id, xhr);\r\n            xhr.send(toSend);\r\n\r\n            return promise;\r\n        },\r\n\r\n        uploadFile: function(id) {\r\n            var fileOrBlob = handler.getFile(id),\r\n                promise, xhr, params, toSend;\r\n\r\n            xhr = handler._createXhr(id);\r\n            handler._registerProgressHandler(id);\r\n            promise = createReadyStateChangedHandler(id, xhr);\r\n            params = spec.paramsStore.get(id);\r\n            toSend = setParamsAndGetEntityToSend(params, xhr, fileOrBlob, id);\r\n            setUploadHeaders(id, xhr);\r\n            xhr.send(toSend);\r\n\r\n            return promise;\r\n        }\r\n    });\r\n\r\n    qq.extend(this, new qq.XhrUploadHandler({\r\n        options: qq.extend({namespace: \"traditional\"}, spec),\r\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\r\n    }));\r\n\r\n    qq.override(this, function(super_) {\r\n        return {\r\n            finalizeChunks: function(id) {\r\n                if (spec.chunking.success.endpoint) {\r\n                    return sendChunksCompleteRequest(id);\r\n                }\r\n                else {\r\n                    return super_.finalizeChunks(id, qq.bind(parseResponse, this, true));\r\n                }\r\n            }\r\n        };\r\n    });\r\n};\r\n","/*globals qq*/\r\n/**\r\n * Ajax requester used to send a POST to a traditional endpoint once all chunks for a specific file have uploaded\r\n * successfully.\r\n *\r\n * @param o Options from the caller - will override the defaults.\r\n * @constructor\r\n */\r\nqq.traditional.AllChunksDoneAjaxRequester = function(o) {\r\n    \"use strict\";\r\n\r\n    var requester,\r\n        method = \"POST\",\r\n        options = {\r\n            cors: {\r\n                allowXdr: false,\r\n                expected: false,\r\n                sendCredentials: false\r\n            },\r\n            endpoint: null,\r\n            log: function(str, level) {}\r\n        },\r\n        promises = {},\r\n        endpointHandler = {\r\n            get: function(id) {\r\n                return options.endpoint;\r\n            }\r\n        };\r\n\r\n    qq.extend(options, o);\r\n\r\n    requester = qq.extend(this, new qq.AjaxRequester({\r\n        acceptHeader: \"application/json\",\r\n        validMethods: [method],\r\n        method: method,\r\n        endpointStore: endpointHandler,\r\n        allowXRequestedWithAndCacheControl: false,\r\n        cors: options.cors,\r\n        log: options.log,\r\n        onComplete: function(id, xhr, isError) {\r\n            var promise = promises[id];\r\n\r\n            delete promises[id];\r\n\r\n            if (isError) {\r\n                promise.failure(xhr);\r\n            }\r\n            else {\r\n                promise.success(xhr);\r\n            }\r\n        }\r\n    }));\r\n\r\n    qq.extend(this, {\r\n        complete: function(id, xhr, params, headers) {\r\n            var promise = new qq.Promise();\r\n\r\n            options.log(\"Submitting All Chunks Done request for \" + id);\r\n\r\n            promises[id] = promise;\r\n\r\n            requester.initTransport(id)\r\n                .withParams(params)\r\n                .withHeaders(headers)\r\n                .send(xhr);\r\n\r\n            return promise;\r\n        }\r\n    });\r\n};\r\n","/*globals qq, document, CustomEvent*/\r\nqq.DragAndDrop = function(o) {\r\n    \"use strict\";\r\n\r\n    var options,\r\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\r\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\r\n        uploadDropZones = [],\r\n        droppedFiles = [],\r\n        disposeSupport = new qq.DisposeSupport();\r\n\r\n    options = {\r\n        dropZoneElements: [],\r\n        allowMultipleItems: true,\r\n        classes: {\r\n            dropActive: null\r\n        },\r\n        callbacks: new qq.DragAndDrop.callbacks()\r\n    };\r\n\r\n    qq.extend(options, o, true);\r\n\r\n    function uploadDroppedFiles(files, uploadDropZone) {\r\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\r\n        var filesAsArray = Array.prototype.slice.call(files);\r\n\r\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\r\n        uploadDropZone.dropDisabled(false);\r\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\r\n    }\r\n\r\n    function traverseFileTree(entry) {\r\n        var parseEntryPromise = new qq.Promise();\r\n\r\n        if (entry.isFile) {\r\n            entry.file(function(file) {\r\n                var name = entry.name,\r\n                    fullPath = entry.fullPath,\r\n                    indexOfNameInFullPath = fullPath.indexOf(name);\r\n\r\n                // remove file name from full path string\r\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\r\n\r\n                // remove leading slash in full path string\r\n                if (fullPath.charAt(0) === \"/\") {\r\n                    fullPath = fullPath.substr(1);\r\n                }\r\n\r\n                file.qqPath = fullPath;\r\n                droppedFiles.push(file);\r\n                parseEntryPromise.success();\r\n            },\r\n            function(fileError) {\r\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\r\n                parseEntryPromise.failure();\r\n            });\r\n        }\r\n        else if (entry.isDirectory) {\r\n            getFilesInDirectory(entry).then(\r\n                function allEntriesRead(entries) {\r\n                    var entriesLeft = entries.length;\r\n\r\n                    qq.each(entries, function(idx, entry) {\r\n                        traverseFileTree(entry).done(function() {\r\n                            entriesLeft -= 1;\r\n\r\n                            if (entriesLeft === 0) {\r\n                                parseEntryPromise.success();\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                    if (!entries.length) {\r\n                        parseEntryPromise.success();\r\n                    }\r\n                },\r\n\r\n                function readFailure(fileError) {\r\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\r\n                    parseEntryPromise.failure();\r\n                }\r\n            );\r\n        }\r\n\r\n        return parseEntryPromise;\r\n    }\r\n\r\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\r\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\r\n        var promise = existingPromise || new qq.Promise(),\r\n            dirReader = reader || entry.createReader();\r\n\r\n        dirReader.readEntries(\r\n            function readSuccess(entries) {\r\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\r\n\r\n                if (entries.length) {\r\n                    setTimeout(function() { // prevent stack overflow, however unlikely\r\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\r\n                    }, 0);\r\n                }\r\n                else {\r\n                    promise.success(newEntries);\r\n                }\r\n            },\r\n\r\n            promise.failure\r\n        );\r\n\r\n        return promise;\r\n    }\r\n\r\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\r\n        var pendingFolderPromises = [],\r\n            handleDataTransferPromise = new qq.Promise();\r\n\r\n        options.callbacks.processingDroppedFiles();\r\n        uploadDropZone.dropDisabled(true);\r\n\r\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\r\n            options.callbacks.processingDroppedFilesComplete([]);\r\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\r\n            uploadDropZone.dropDisabled(false);\r\n            handleDataTransferPromise.failure();\r\n        }\r\n        else {\r\n            droppedFiles = [];\r\n\r\n            if (qq.isFolderDropSupported(dataTransfer)) {\r\n                qq.each(dataTransfer.items, function(idx, item) {\r\n                    var entry = item.webkitGetAsEntry();\r\n\r\n                    if (entry) {\r\n                        //due to a bug in Chrome's File System API impl - #149735\r\n                        if (entry.isFile) {\r\n                            droppedFiles.push(item.getAsFile());\r\n                        }\r\n\r\n                        else {\r\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\r\n                                pendingFolderPromises.pop();\r\n                                if (pendingFolderPromises.length === 0) {\r\n                                    handleDataTransferPromise.success();\r\n                                }\r\n                            }));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                droppedFiles = dataTransfer.files;\r\n            }\r\n\r\n            if (pendingFolderPromises.length === 0) {\r\n                handleDataTransferPromise.success();\r\n            }\r\n        }\r\n\r\n        return handleDataTransferPromise;\r\n    }\r\n\r\n    function setupDropzone(dropArea) {\r\n        var dropZone = new qq.UploadDropZone({\r\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\r\n            element: dropArea,\r\n            onEnter: function(e) {\r\n                qq(dropArea).addClass(options.classes.dropActive);\r\n                e.stopPropagation();\r\n            },\r\n            onLeaveNotDescendants: function(e) {\r\n                qq(dropArea).removeClass(options.classes.dropActive);\r\n            },\r\n            onDrop: function(e) {\r\n                handleDataTransfer(e.dataTransfer, dropZone).then(\r\n                    function() {\r\n                        uploadDroppedFiles(droppedFiles, dropZone);\r\n                    },\r\n                    function() {\r\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\r\n                    }\r\n                );\r\n            }\r\n        });\r\n\r\n        disposeSupport.addDisposer(function() {\r\n            dropZone.dispose();\r\n        });\r\n\r\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\r\n\r\n        uploadDropZones.push(dropZone);\r\n\r\n        return dropZone;\r\n    }\r\n\r\n    function isFileDrag(dragEvent) {\r\n        var fileDrag;\r\n\r\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\r\n            if (val === \"Files\") {\r\n                fileDrag = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        return fileDrag;\r\n    }\r\n\r\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\r\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\r\n    //\r\n    // Exceptions:\r\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\r\n    //                   overlays the browser window.\r\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\r\n    //          event's X & Y properties.\r\n    function leavingDocumentOut(e) {\r\n        if (qq.firefox()) {\r\n            return !e.relatedTarget;\r\n        }\r\n\r\n        if (qq.safari()) {\r\n            return e.x < 0 || e.y < 0;\r\n        }\r\n\r\n        return e.x === 0 && e.y === 0;\r\n    }\r\n\r\n    function setupDragDrop() {\r\n        var dropZones = options.dropZoneElements,\r\n\r\n            maybeHideDropZones = function() {\r\n                setTimeout(function() {\r\n                    qq.each(dropZones, function(idx, dropZone) {\r\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\r\n                        qq(dropZone).removeClass(options.classes.dropActive);\r\n                    });\r\n                }, 10);\r\n            };\r\n\r\n        qq.each(dropZones, function(idx, dropZone) {\r\n            var uploadDropZone = setupDropzone(dropZone);\r\n\r\n            // IE <= 9 does not support the File API used for drag+drop uploads\r\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\r\n                disposeSupport.attach(document, \"dragenter\", function(e) {\r\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\r\n                        qq.each(dropZones, function(idx, dropZone) {\r\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\r\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\r\n                            if (dropZone instanceof HTMLElement &&\r\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\r\n\r\n                                qq(dropZone).css({display: \"block\"});\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        disposeSupport.attach(document, \"dragleave\", function(e) {\r\n            if (leavingDocumentOut(e)) {\r\n                maybeHideDropZones();\r\n            }\r\n        });\r\n\r\n        // Just in case we were not able to detect when a dragged file has left the document,\r\n        // hide all relevant drop zones the next time the mouse enters the document.\r\n        // Note that mouse events such as this one are not fired during drag operations.\r\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\r\n            maybeHideDropZones();\r\n        });\r\n\r\n        disposeSupport.attach(document, \"drop\", function(e) {\r\n            e.preventDefault();\r\n            maybeHideDropZones();\r\n        });\r\n\r\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\r\n    }\r\n\r\n    setupDragDrop();\r\n\r\n    qq.extend(this, {\r\n        setupExtraDropzone: function(element) {\r\n            options.dropZoneElements.push(element);\r\n            setupDropzone(element);\r\n        },\r\n\r\n        removeDropzone: function(element) {\r\n            var i,\r\n                dzs = options.dropZoneElements;\r\n\r\n            for (i in dzs) {\r\n                if (dzs[i] === element) {\r\n                    return dzs.splice(i, 1);\r\n                }\r\n            }\r\n        },\r\n\r\n        dispose: function() {\r\n            disposeSupport.dispose();\r\n            qq.each(uploadDropZones, function(idx, dropZone) {\r\n                dropZone.dispose();\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\nqq.DragAndDrop.callbacks = function() {\r\n    \"use strict\";\r\n\r\n    return {\r\n        processingDroppedFiles: function() {},\r\n        processingDroppedFilesComplete: function(files, targetEl) {},\r\n        dropError: function(code, errorSpecifics) {\r\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\r\n        },\r\n        dropLog: function(message, level) {\r\n            qq.log(message, level);\r\n        }\r\n    };\r\n};\r\n\r\nqq.UploadDropZone = function(o) {\r\n    \"use strict\";\r\n\r\n    var disposeSupport = new qq.DisposeSupport(),\r\n        options, element, preventDrop, dropOutsideDisabled;\r\n\r\n    options = {\r\n        element: null,\r\n        onEnter: function(e) {},\r\n        onLeave: function(e) {},\r\n        // is not fired when leaving element by hovering descendants\r\n        onLeaveNotDescendants: function(e) {},\r\n        onDrop: function(e) {}\r\n    };\r\n\r\n    qq.extend(options, o);\r\n    element = options.element;\r\n\r\n    function dragoverShouldBeCanceled() {\r\n        return qq.safari() || (qq.firefox() && qq.windows());\r\n    }\r\n\r\n    function disableDropOutside(e) {\r\n        // run only once for all instances\r\n        if (!dropOutsideDisabled) {\r\n\r\n            // for these cases we need to catch onDrop to reset dropArea\r\n            if (dragoverShouldBeCanceled) {\r\n                disposeSupport.attach(document, \"dragover\", function(e) {\r\n                    e.preventDefault();\r\n                });\r\n            } else {\r\n                disposeSupport.attach(document, \"dragover\", function(e) {\r\n                    if (e.dataTransfer) {\r\n                        e.dataTransfer.dropEffect = \"none\";\r\n                        e.preventDefault();\r\n                    }\r\n                });\r\n            }\r\n\r\n            dropOutsideDisabled = true;\r\n        }\r\n    }\r\n\r\n    function isValidFileDrag(e) {\r\n        // e.dataTransfer currently causing IE errors\r\n        // IE9 does NOT support file API, so drag-and-drop is not possible\r\n        if (!qq.supportedFeatures.fileDrop) {\r\n            return false;\r\n        }\r\n\r\n        var effectTest, dt = e.dataTransfer,\r\n        // do not check dt.types.contains in webkit, because it crashes safari 4\r\n        isSafari = qq.safari();\r\n\r\n        // dt.effectAllowed is none in Safari 5\r\n        // dt.types.contains check is for firefox\r\n\r\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\r\n        // the filesystem\r\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\r\n        return dt && effectTest && (dt.files || (!isSafari && dt.types.contains && dt.types.contains(\"Files\")));\r\n    }\r\n\r\n    function isOrSetDropDisabled(isDisabled) {\r\n        if (isDisabled !== undefined) {\r\n            preventDrop = isDisabled;\r\n        }\r\n        return preventDrop;\r\n    }\r\n\r\n    function triggerHidezonesEvent() {\r\n        var hideZonesEvent;\r\n\r\n        function triggerUsingOldApi() {\r\n            hideZonesEvent = document.createEvent(\"Event\");\r\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\r\n        }\r\n\r\n        if (window.CustomEvent) {\r\n            try {\r\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\r\n            }\r\n            catch (err) {\r\n                triggerUsingOldApi();\r\n            }\r\n        }\r\n        else {\r\n            triggerUsingOldApi();\r\n        }\r\n\r\n        document.dispatchEvent(hideZonesEvent);\r\n    }\r\n\r\n    function attachEvents() {\r\n        disposeSupport.attach(element, \"dragover\", function(e) {\r\n            if (!isValidFileDrag(e)) {\r\n                return;\r\n            }\r\n\r\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\r\n            // the filesystem\r\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\r\n            if (effect === \"move\" || effect === \"linkMove\") {\r\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\r\n            } else {\r\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\r\n            }\r\n\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n        });\r\n\r\n        disposeSupport.attach(element, \"dragenter\", function(e) {\r\n            if (!isOrSetDropDisabled()) {\r\n                if (!isValidFileDrag(e)) {\r\n                    return;\r\n                }\r\n                options.onEnter(e);\r\n            }\r\n        });\r\n\r\n        disposeSupport.attach(element, \"dragleave\", function(e) {\r\n            if (!isValidFileDrag(e)) {\r\n                return;\r\n            }\r\n\r\n            options.onLeave(e);\r\n\r\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\r\n            // do not fire when moving a mouse over a descendant\r\n            if (qq(this).contains(relatedTarget)) {\r\n                return;\r\n            }\r\n\r\n            options.onLeaveNotDescendants(e);\r\n        });\r\n\r\n        disposeSupport.attach(element, \"drop\", function(e) {\r\n            if (!isOrSetDropDisabled()) {\r\n                if (!isValidFileDrag(e)) {\r\n                    return;\r\n                }\r\n\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                options.onDrop(e);\r\n\r\n                triggerHidezonesEvent();\r\n            }\r\n        });\r\n    }\r\n\r\n    disableDropOutside();\r\n    attachEvents();\r\n\r\n    qq.extend(this, {\r\n        dropDisabled: function(isDisabled) {\r\n            return isOrSetDropDisabled(isDisabled);\r\n        },\r\n\r\n        dispose: function() {\r\n            disposeSupport.dispose();\r\n        },\r\n\r\n        getElement: function() {\r\n            return element;\r\n        }\r\n    });\r\n};\r\n","/*globals qq */\r\n/**\r\n * Defines the public API for FineUploader mode.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.uiPublicApi = {\r\n        addInitialFiles: function(cannedFileList) {\r\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\r\n            this._templating.addCacheToDom();\r\n        },\r\n\r\n        clearStoredFiles: function() {\r\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\r\n            this._templating.clearFiles();\r\n        },\r\n\r\n        addExtraDropzone: function(element) {\r\n            this._dnd && this._dnd.setupExtraDropzone(element);\r\n        },\r\n\r\n        removeExtraDropzone: function(element) {\r\n            if (this._dnd) {\r\n                return this._dnd.removeDropzone(element);\r\n            }\r\n        },\r\n\r\n        getItemByFileId: function(id) {\r\n            if (!this._templating.isHiddenForever(id)) {\r\n                return this._templating.getFileContainer(id);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            this._parent.prototype.reset.apply(this, arguments);\r\n            this._templating.reset();\r\n\r\n            if (!this._options.button && this._templating.getButton()) {\r\n                this._defaultButtonId = this._createUploadButton({\r\n                    element: this._templating.getButton(),\r\n                    title: this._options.text.fileInputTitle\r\n                }).getButtonId();\r\n            }\r\n\r\n            if (this._dnd) {\r\n                this._dnd.dispose();\r\n                this._dnd = this._setupDragAndDrop();\r\n            }\r\n\r\n            this._totalFilesInBatch = 0;\r\n            this._filesInBatchAddedToUi = 0;\r\n\r\n            this._setupClickAndEditEventHandlers();\r\n        },\r\n\r\n        setName: function(id, newName) {\r\n            var formattedFilename = this._options.formatFileName(newName);\r\n\r\n            this._parent.prototype.setName.apply(this, arguments);\r\n            this._templating.updateFilename(id, formattedFilename);\r\n        },\r\n\r\n        pauseUpload: function(id) {\r\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\r\n\r\n            paused && this._templating.uploadPaused(id);\r\n            return paused;\r\n        },\r\n\r\n        continueUpload: function(id) {\r\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\r\n\r\n            continued && this._templating.uploadContinued(id);\r\n            return continued;\r\n        },\r\n\r\n        getId: function(fileContainerOrChildEl) {\r\n            return this._templating.getFileId(fileContainerOrChildEl);\r\n        },\r\n\r\n        getDropTarget: function(fileId) {\r\n            var file = this.getFile(fileId);\r\n\r\n            return file.qqDropTarget;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Defines the private (internal) API for FineUploader mode.\r\n     */\r\n    qq.uiPrivateApi = {\r\n        _getButton: function(buttonId) {\r\n            var button = this._parent.prototype._getButton.apply(this, arguments);\r\n\r\n            if (!button) {\r\n                if (buttonId === this._defaultButtonId) {\r\n                    button = this._templating.getButton();\r\n                }\r\n            }\r\n\r\n            return button;\r\n        },\r\n\r\n        _removeFileItem: function(fileId) {\r\n            this._templating.removeFile(fileId);\r\n        },\r\n\r\n        _setupClickAndEditEventHandlers: function() {\r\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\r\n\r\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\r\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\r\n            this._focusinEventSupported = !qq.firefox();\r\n\r\n            if (this._isEditFilenameEnabled())\r\n            {\r\n                this._filenameClickHandler = this._bindFilenameClickEvent();\r\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\r\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\r\n            }\r\n        },\r\n\r\n        _setupDragAndDrop: function() {\r\n            var self = this,\r\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\r\n                templating = this._templating,\r\n                defaultDropZone = templating.getDropZone();\r\n\r\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\r\n\r\n            return new qq.DragAndDrop({\r\n                dropZoneElements: dropZoneElements,\r\n                allowMultipleItems: this._options.multiple,\r\n                classes: {\r\n                    dropActive: this._options.classes.dropActive\r\n                },\r\n                callbacks: {\r\n                    processingDroppedFiles: function() {\r\n                        templating.showDropProcessing();\r\n                    },\r\n                    processingDroppedFilesComplete: function(files, targetEl) {\r\n                        templating.hideDropProcessing();\r\n\r\n                        qq.each(files, function(idx, file) {\r\n                            file.qqDropTarget = targetEl;\r\n                        });\r\n\r\n                        if (files.length) {\r\n                            self.addFiles(files, null, null);\r\n                        }\r\n                    },\r\n                    dropError: function(code, errorData) {\r\n                        self._itemError(code, errorData);\r\n                    },\r\n                    dropLog: function(message, level) {\r\n                        self.log(message, level);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        _bindFileButtonsClickEvent: function() {\r\n            var self = this;\r\n\r\n            return new qq.FileButtonsClickHandler({\r\n                templating: this._templating,\r\n\r\n                log: function(message, lvl) {\r\n                    self.log(message, lvl);\r\n                },\r\n\r\n                onDeleteFile: function(fileId) {\r\n                    self.deleteFile(fileId);\r\n                },\r\n\r\n                onCancel: function(fileId) {\r\n                    self.cancel(fileId);\r\n                },\r\n\r\n                onRetry: function(fileId) {\r\n                    self.retry(fileId);\r\n                },\r\n\r\n                onPause: function(fileId) {\r\n                    self.pauseUpload(fileId);\r\n                },\r\n\r\n                onContinue: function(fileId) {\r\n                    self.continueUpload(fileId);\r\n                },\r\n\r\n                onGetName: function(fileId) {\r\n                    return self.getName(fileId);\r\n                }\r\n            });\r\n        },\r\n\r\n        _isEditFilenameEnabled: function() {\r\n            /*jshint -W014 */\r\n            return this._templating.isEditFilenamePossible()\r\n                && !this._options.autoUpload\r\n                && qq.FilenameClickHandler\r\n                && qq.FilenameInputFocusHandler\r\n                && qq.FilenameInputFocusHandler;\r\n        },\r\n\r\n        _filenameEditHandler: function() {\r\n            var self = this,\r\n                templating = this._templating;\r\n\r\n            return {\r\n                templating: templating,\r\n                log: function(message, lvl) {\r\n                    self.log(message, lvl);\r\n                },\r\n                onGetUploadStatus: function(fileId) {\r\n                    return self.getUploads({id: fileId}).status;\r\n                },\r\n                onGetName: function(fileId) {\r\n                    return self.getName(fileId);\r\n                },\r\n                onSetName: function(id, newName) {\r\n                    self.setName(id, newName);\r\n                },\r\n                onEditingStatusChange: function(id, isEditing) {\r\n                    var qqInput = qq(templating.getEditInput(id)),\r\n                        qqFileContainer = qq(templating.getFileContainer(id));\r\n\r\n                    if (isEditing) {\r\n                        qqInput.addClass(\"qq-editing\");\r\n                        templating.hideFilename(id);\r\n                        templating.hideEditIcon(id);\r\n                    }\r\n                    else {\r\n                        qqInput.removeClass(\"qq-editing\");\r\n                        templating.showFilename(id);\r\n                        templating.showEditIcon(id);\r\n                    }\r\n\r\n                    // Force IE8 and older to repaint\r\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\r\n                }\r\n            };\r\n        },\r\n\r\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\r\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\r\n\r\n            if (this._isEditFilenameEnabled()) {\r\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\r\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\r\n                    this._templating.markFilenameEditable(id);\r\n                    this._templating.hideEditIcon(id);\r\n                }\r\n            }\r\n\r\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\r\n                this._templating.hideRetry(id);\r\n                this._templating.setStatusText(id);\r\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\r\n            }\r\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\r\n                this._templating.hidePause(id);\r\n            }\r\n        },\r\n\r\n        _bindFilenameInputFocusInEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameInputFocusInHandler(spec);\r\n        },\r\n\r\n        _bindFilenameInputFocusEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameInputFocusHandler(spec);\r\n        },\r\n\r\n        _bindFilenameClickEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameClickHandler(spec);\r\n        },\r\n\r\n        _storeForLater: function(id) {\r\n            this._parent.prototype._storeForLater.apply(this, arguments);\r\n            this._templating.hideSpinner(id);\r\n        },\r\n\r\n        _onAllComplete: function(successful, failed) {\r\n            this._parent.prototype._onAllComplete.apply(this, arguments);\r\n            this._templating.resetTotalProgress();\r\n        },\r\n\r\n        _onSubmit: function(id, name) {\r\n            var file = this.getFile(id);\r\n\r\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\r\n                this._paramsStore.addReadOnly(id, {\r\n                    qqpath: file.qqPath\r\n                });\r\n            }\r\n\r\n            this._parent.prototype._onSubmit.apply(this, arguments);\r\n            this._addToList(id, name);\r\n        },\r\n\r\n        // The file item has been added to the DOM.\r\n        _onSubmitted: function(id) {\r\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\r\n            if (this._isEditFilenameEnabled()) {\r\n                this._templating.markFilenameEditable(id);\r\n                this._templating.showEditIcon(id);\r\n\r\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\r\n                if (!this._focusinEventSupported) {\r\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\r\n                }\r\n            }\r\n        },\r\n\r\n        // Update the progress bar & percentage as the file is uploaded\r\n        _onProgress: function(id, name, loaded, total) {\r\n            this._parent.prototype._onProgress.apply(this, arguments);\r\n\r\n            this._templating.updateProgress(id, loaded, total);\r\n\r\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\r\n                this._templating.hideCancel(id);\r\n                this._templating.hidePause(id);\r\n                this._templating.hideProgress(id);\r\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\r\n\r\n                // If ~last byte was sent, display total file size\r\n                this._displayFileSize(id);\r\n            }\r\n            else {\r\n                // If still uploading, display percentage - total size is actually the total request(s) size\r\n                this._displayFileSize(id, loaded, total);\r\n            }\r\n        },\r\n\r\n        _onTotalProgress: function(loaded, total) {\r\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\r\n            this._templating.updateTotalProgress(loaded, total);\r\n        },\r\n\r\n        _onComplete: function(id, name, result, xhr) {\r\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\r\n                templating = this._templating,\r\n                fileContainer = templating.getFileContainer(id),\r\n                self = this;\r\n\r\n            function completeUpload(result) {\r\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\r\n                // If so, don't perform any UI-related tasks related to this file.\r\n                if (!fileContainer) {\r\n                    return;\r\n                }\r\n\r\n                templating.setStatusText(id);\r\n\r\n                qq(fileContainer).removeClass(self._classes.retrying);\r\n                templating.hideProgress(id);\r\n\r\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\r\n                    templating.hideCancel(id);\r\n                }\r\n                templating.hideSpinner(id);\r\n\r\n                if (result.success) {\r\n                    self._markFileAsSuccessful(id);\r\n                }\r\n                else {\r\n                    qq(fileContainer).addClass(self._classes.fail);\r\n                    templating.showCancel(id);\r\n\r\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\r\n                        qq(fileContainer).addClass(self._classes.retryable);\r\n                        templating.showRetry(id);\r\n                    }\r\n                    self._controlFailureTextDisplay(id, result);\r\n                }\r\n            }\r\n\r\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\r\n            if (parentRetVal instanceof qq.Promise) {\r\n                parentRetVal.done(function(newResult) {\r\n                    completeUpload(newResult);\r\n                });\r\n\r\n            }\r\n            else {\r\n                completeUpload(result);\r\n            }\r\n\r\n            return parentRetVal;\r\n        },\r\n\r\n        _markFileAsSuccessful: function(id) {\r\n            var templating = this._templating;\r\n\r\n            if (this._isDeletePossible()) {\r\n                templating.showDeleteButton(id);\r\n            }\r\n\r\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\r\n\r\n            this._maybeUpdateThumbnail(id);\r\n        },\r\n\r\n        _onUploadPrep: function(id) {\r\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\r\n            this._templating.showSpinner(id);\r\n        },\r\n\r\n        _onUpload: function(id, name) {\r\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\r\n\r\n            this._templating.showSpinner(id);\r\n\r\n            return parentRetVal;\r\n        },\r\n\r\n        _onUploadChunk: function(id, chunkData) {\r\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\r\n\r\n            // Only display the pause button if we have finished uploading at least one chunk\r\n            // & this file can be resumed\r\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\r\n                this._templating.allowPause(id);\r\n            }\r\n        },\r\n\r\n        _onCancel: function(id, name) {\r\n            this._parent.prototype._onCancel.apply(this, arguments);\r\n            this._removeFileItem(id);\r\n\r\n            if (this._getNotFinished() === 0) {\r\n                this._templating.resetTotalProgress();\r\n            }\r\n        },\r\n\r\n        _onBeforeAutoRetry: function(id) {\r\n            var retryNumForDisplay, maxAuto, retryNote;\r\n\r\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\r\n\r\n            this._showCancelLink(id);\r\n\r\n            if (this._options.retry.showAutoRetryNote) {\r\n                retryNumForDisplay = this._autoRetries[id];\r\n                maxAuto = this._options.retry.maxAutoAttempts;\r\n\r\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\r\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\r\n\r\n                this._templating.setStatusText(id, retryNote);\r\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\r\n            }\r\n        },\r\n\r\n        //return false if we should not attempt the requested retry\r\n        _onBeforeManualRetry: function(id) {\r\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\r\n                this._templating.resetProgress(id);\r\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\r\n                this._templating.setStatusText(id);\r\n                this._templating.showSpinner(id);\r\n                this._showCancelLink(id);\r\n                return true;\r\n            }\r\n            else {\r\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\r\n                this._templating.showRetry(id);\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onSubmitDelete: function(id) {\r\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\r\n\r\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\r\n        },\r\n\r\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\r\n            if (this._options.deleteFile.forceConfirm) {\r\n                this._showDeleteConfirm.apply(this, arguments);\r\n            }\r\n            else {\r\n                this._sendDeleteRequest.apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        _onDeleteComplete: function(id, xhr, isError) {\r\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\r\n\r\n            this._templating.hideSpinner(id);\r\n\r\n            if (isError) {\r\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\r\n                this._templating.showDeleteButton(id);\r\n            }\r\n            else {\r\n                this._removeFileItem(id);\r\n            }\r\n        },\r\n\r\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\r\n            this._templating.hideDeleteButton(id);\r\n            this._templating.showSpinner(id);\r\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\r\n            this._deleteHandler.sendDelete.apply(this, arguments);\r\n        },\r\n\r\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\r\n            /*jshint -W004 */\r\n            var fileName = this.getName(id),\r\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\r\n                uuid = this.getUuid(id),\r\n                deleteRequestArgs = arguments,\r\n                self = this,\r\n                retVal;\r\n\r\n            retVal = this._options.showConfirm(confirmMessage);\r\n\r\n            if (qq.isGenericPromise(retVal)) {\r\n                retVal.then(function() {\r\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\r\n                });\r\n            }\r\n            else if (retVal !== false) {\r\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\r\n            }\r\n        },\r\n\r\n        _addToList: function(id, name, canned) {\r\n            var prependData,\r\n                prependIndex = 0,\r\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\r\n                record;\r\n\r\n            if (this._options.display.prependFiles) {\r\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\r\n                    prependIndex = this._filesInBatchAddedToUi - 1;\r\n                }\r\n\r\n                prependData = {\r\n                    index: prependIndex\r\n                };\r\n            }\r\n\r\n            if (!canned) {\r\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\r\n                    this._templating.disableCancel();\r\n                }\r\n\r\n                // Cancel all existing (previous) files and clear the list if this file is not part of\r\n                // a scaled file group that has already been accepted, or if this file is not part of\r\n                // a scaled file group at all.\r\n                if (!this._options.multiple) {\r\n                    record = this.getUploads({id: id});\r\n\r\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\r\n\r\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\r\n                        this._handler.cancelAll();\r\n                        this._clearList();\r\n                        this._handledProxyGroup = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (canned) {\r\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\r\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\r\n            }\r\n            else {\r\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\r\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\r\n            }\r\n\r\n            this._filesInBatchAddedToUi += 1;\r\n\r\n            if (canned ||\r\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\r\n\r\n                this._displayFileSize(id);\r\n            }\r\n        },\r\n\r\n        _clearList: function() {\r\n            this._templating.clearFiles();\r\n            this.clearStoredFiles();\r\n        },\r\n\r\n        _displayFileSize: function(id, loadedSize, totalSize) {\r\n            var size = this.getSize(id),\r\n                sizeForDisplay = this._formatSize(size);\r\n\r\n            if (size >= 0) {\r\n                if (loadedSize !== undefined && totalSize !== undefined) {\r\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\r\n                }\r\n\r\n                this._templating.updateSize(id, sizeForDisplay);\r\n            }\r\n        },\r\n\r\n        _formatProgress: function(uploadedSize, totalSize) {\r\n            var message = this._options.text.formatProgress;\r\n            function r(name, replacement) { message = message.replace(name, replacement); }\r\n\r\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\r\n            r(\"{total_size}\", this._formatSize(totalSize));\r\n            return message;\r\n        },\r\n\r\n        _controlFailureTextDisplay: function(id, response) {\r\n            var mode, responseProperty, failureReason;\r\n\r\n            mode = this._options.failedUploadTextDisplay.mode;\r\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\r\n\r\n            if (mode === \"custom\") {\r\n                failureReason = response[responseProperty];\r\n                if (!failureReason) {\r\n                    failureReason = this._options.text.failUpload;\r\n                }\r\n\r\n                this._templating.setStatusText(id, failureReason);\r\n\r\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\r\n                    this._showTooltip(id, failureReason);\r\n                }\r\n            }\r\n            else if (mode === \"default\") {\r\n                this._templating.setStatusText(id, this._options.text.failUpload);\r\n            }\r\n            else if (mode !== \"none\") {\r\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\r\n            }\r\n        },\r\n\r\n        _showTooltip: function(id, text) {\r\n            this._templating.getFileContainer(id).title = text;\r\n        },\r\n\r\n        _showCancelLink: function(id) {\r\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\r\n                this._templating.showCancel(id);\r\n            }\r\n        },\r\n\r\n        _itemError: function(code, name, item) {\r\n            var message = this._parent.prototype._itemError.apply(this, arguments);\r\n            this._options.showMessage(message);\r\n        },\r\n\r\n        _batchError: function(message) {\r\n            this._parent.prototype._batchError.apply(this, arguments);\r\n            this._options.showMessage(message);\r\n        },\r\n\r\n        _setupPastePrompt: function() {\r\n            var self = this;\r\n\r\n            this._options.callbacks.onPasteReceived = function() {\r\n                var message = self._options.paste.namePromptMessage,\r\n                    defaultVal = self._options.paste.defaultName;\r\n\r\n                return self._options.showPrompt(message, defaultVal);\r\n            };\r\n        },\r\n\r\n        _fileOrBlobRejected: function(id, name) {\r\n            this._totalFilesInBatch -= 1;\r\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\r\n        },\r\n\r\n        _prepareItemsForUpload: function(items, params, endpoint) {\r\n            this._totalFilesInBatch = items.length;\r\n            this._filesInBatchAddedToUi = 0;\r\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\r\n        },\r\n\r\n        _maybeUpdateThumbnail: function(fileId) {\r\n            var thumbnailUrl = this._thumbnailUrls[fileId],\r\n                fileStatus = this.getUploads({id: fileId}).status;\r\n\r\n            if (fileStatus !== qq.status.DELETED &&\r\n                (thumbnailUrl ||\r\n                this._options.thumbnails.placeholders.waitUntilResponse ||\r\n                !qq.supportedFeatures.imagePreviews)) {\r\n\r\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\r\n                // if called with a null thumbnailUrl.\r\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\r\n            }\r\n        },\r\n\r\n        _addCannedFile: function(sessionData) {\r\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\r\n\r\n            this._addToList(id, this.getName(id), true);\r\n            this._templating.hideSpinner(id);\r\n            this._templating.hideCancel(id);\r\n            this._markFileAsSuccessful(id);\r\n\r\n            return id;\r\n        },\r\n\r\n        _setSize: function(id, newSize) {\r\n            this._parent.prototype._setSize.apply(this, arguments);\r\n\r\n            this._templating.updateSize(id, this._formatSize(newSize));\r\n        },\r\n\r\n        _sessionRequestComplete: function() {\r\n            this._templating.addCacheToDom();\r\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\r\n        }\r\n    };\r\n}());\r\n","/*globals qq */\r\n/**\r\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\r\n */\r\nqq.FineUploader = function(o, namespace) {\r\n    \"use strict\";\r\n\r\n    var self = this;\r\n\r\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\r\n    // if the (internal) caller defines a different parent.  The parent is also used by\r\n    // the private and public API functions that need to delegate to a parent function.\r\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\r\n    this._parent.apply(this, arguments);\r\n\r\n    // Options provided by FineUploader mode\r\n    qq.extend(this._options, {\r\n        element: null,\r\n\r\n        button: null,\r\n\r\n        listElement: null,\r\n\r\n        dragAndDrop: {\r\n            extraDropzones: [],\r\n            reportDirectoryPaths: false\r\n        },\r\n\r\n        text: {\r\n            formatProgress: \"{percent}% of {total_size}\",\r\n            failUpload: \"Upload failed\",\r\n            waitingForResponse: \"Processing...\",\r\n            paused: \"Paused\"\r\n        },\r\n\r\n        template: \"qq-template\",\r\n\r\n        classes: {\r\n            retrying: \"qq-upload-retrying\",\r\n            retryable: \"qq-upload-retryable\",\r\n            success: \"qq-upload-success\",\r\n            fail: \"qq-upload-fail\",\r\n            editable: \"qq-editable\",\r\n            hide: \"qq-hide\",\r\n            dropActive: \"qq-upload-drop-area-active\"\r\n        },\r\n\r\n        failedUploadTextDisplay: {\r\n            mode: \"default\", //default, custom, or none\r\n            responseProperty: \"error\",\r\n            enableTooltip: true\r\n        },\r\n\r\n        messages: {\r\n            tooManyFilesError: \"You may only drop one file\",\r\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\r\n        },\r\n\r\n        retry: {\r\n            showAutoRetryNote: true,\r\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\r\n        },\r\n\r\n        deleteFile: {\r\n            forceConfirm: false,\r\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\r\n            deletingStatusText: \"Deleting...\",\r\n            deletingFailedText: \"Delete failed\"\r\n\r\n        },\r\n\r\n        display: {\r\n            fileSizeOnSubmit: false,\r\n            prependFiles: false\r\n        },\r\n\r\n        paste: {\r\n            promptForName: false,\r\n            namePromptMessage: \"Please name this image\"\r\n        },\r\n\r\n        thumbnails: {\r\n            customResizer: null,\r\n            maxCount: 0,\r\n            placeholders: {\r\n                waitUntilResponse: false,\r\n                notAvailablePath: null,\r\n                waitingPath: null\r\n            },\r\n            timeBetweenThumbs: 750\r\n        },\r\n\r\n        scaling: {\r\n            hideScaled: false\r\n        },\r\n\r\n        showMessage: function(message) {\r\n            if (self._templating.hasDialog(\"alert\")) {\r\n                return self._templating.showDialog(\"alert\", message);\r\n            }\r\n            else {\r\n                setTimeout(function() {\r\n                    window.alert(message);\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        showConfirm: function(message) {\r\n            if (self._templating.hasDialog(\"confirm\")) {\r\n                return self._templating.showDialog(\"confirm\", message);\r\n            }\r\n            else {\r\n                return window.confirm(message);\r\n            }\r\n        },\r\n\r\n        showPrompt: function(message, defaultValue) {\r\n            if (self._templating.hasDialog(\"prompt\")) {\r\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\r\n            }\r\n            else {\r\n                return window.prompt(message, defaultValue);\r\n            }\r\n        }\r\n    }, true);\r\n\r\n    // Replace any default options with user defined ones\r\n    qq.extend(this._options, o, true);\r\n\r\n    this._templating = new qq.Templating({\r\n        log: qq.bind(this.log, this),\r\n        templateIdOrEl: this._options.template,\r\n        containerEl: this._options.element,\r\n        fileContainerEl: this._options.listElement,\r\n        button: this._options.button,\r\n        imageGenerator: this._imageGenerator,\r\n        classes: {\r\n            hide: this._options.classes.hide,\r\n            editable: this._options.classes.editable\r\n        },\r\n        limits: {\r\n            maxThumbs: this._options.thumbnails.maxCount,\r\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\r\n        },\r\n        placeholders: {\r\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\r\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\r\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\r\n        },\r\n        text: this._options.text\r\n    });\r\n\r\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\r\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\r\n    }\r\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\r\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\r\n    }\r\n    else {\r\n        this._wrapCallbacks();\r\n\r\n        this._templating.render();\r\n\r\n        this._classes = this._options.classes;\r\n\r\n        if (!this._options.button && this._templating.getButton()) {\r\n            this._defaultButtonId = this._createUploadButton({\r\n                element: this._templating.getButton(),\r\n                title: this._options.text.fileInputTitle\r\n            }).getButtonId();\r\n        }\r\n\r\n        this._setupClickAndEditEventHandlers();\r\n\r\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\r\n            this._dnd = this._setupDragAndDrop();\r\n        }\r\n\r\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\r\n            if (qq.PasteSupport) {\r\n                this._setupPastePrompt();\r\n            }\r\n            else {\r\n                this.log(\"Paste support module not found.\", \"error\");\r\n            }\r\n        }\r\n\r\n        this._totalFilesInBatch = 0;\r\n        this._filesInBatchAddedToUi = 0;\r\n    }\r\n};\r\n\r\n// Inherit the base public & private API methods\r\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\r\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\r\n\r\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\r\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\r\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\r\n","/* globals qq */\r\n/* jshint -W065 */\r\n/**\r\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\r\n * a limited amount of control over the template elements after they are added to the DOM.\r\n * Wherever possible, this module asserts total control over template elements present in the DOM.\r\n *\r\n * @param spec Specification object used to control various templating behaviors\r\n * @constructor\r\n */\r\nqq.Templating = function(spec) {\r\n    \"use strict\";\r\n\r\n    var FILE_ID_ATTR = \"qq-file-id\",\r\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\r\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\r\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\r\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\r\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\r\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\r\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\r\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\r\n        fileBatch = {\r\n            content: document.createDocumentFragment(),\r\n            map: {}\r\n        },\r\n        isCancelDisabled = false,\r\n        generatedThumbnails = 0,\r\n        thumbnailQueueMonitorRunning = false,\r\n        thumbGenerationQueue = [],\r\n        thumbnailMaxSize = -1,\r\n        options = {\r\n            log: null,\r\n            limits: {\r\n                maxThumbs: 0,\r\n                timeBetweenThumbs: 750\r\n            },\r\n            templateIdOrEl: \"qq-template\",\r\n            containerEl: null,\r\n            fileContainerEl: null,\r\n            button: null,\r\n            imageGenerator: null,\r\n            classes: {\r\n                hide: \"qq-hide\",\r\n                editable: \"qq-editable\"\r\n            },\r\n            placeholders: {\r\n                waitUntilUpdate: false,\r\n                thumbnailNotAvailable: null,\r\n                waitingForThumbnail: null\r\n            },\r\n            text: {\r\n                paused: \"Paused\"\r\n            }\r\n        },\r\n        selectorClasses = {\r\n            button: \"qq-upload-button-selector\",\r\n            alertDialog: \"qq-alert-dialog-selector\",\r\n            dialogCancelButton: \"qq-cancel-button-selector\",\r\n            confirmDialog: \"qq-confirm-dialog-selector\",\r\n            dialogMessage: \"qq-dialog-message-selector\",\r\n            dialogOkButton: \"qq-ok-button-selector\",\r\n            promptDialog: \"qq-prompt-dialog-selector\",\r\n            uploader: \"qq-uploader-selector\",\r\n            drop: \"qq-upload-drop-area-selector\",\r\n            list: \"qq-upload-list-selector\",\r\n            progressBarContainer: \"qq-progress-bar-container-selector\",\r\n            progressBar: \"qq-progress-bar-selector\",\r\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\r\n            totalProgressBar: \"qq-total-progress-bar-selector\",\r\n            file: \"qq-upload-file-selector\",\r\n            spinner: \"qq-upload-spinner-selector\",\r\n            size: \"qq-upload-size-selector\",\r\n            cancel: \"qq-upload-cancel-selector\",\r\n            pause: \"qq-upload-pause-selector\",\r\n            continueButton: \"qq-upload-continue-selector\",\r\n            deleteButton: \"qq-upload-delete-selector\",\r\n            retry: \"qq-upload-retry-selector\",\r\n            statusText: \"qq-upload-status-text-selector\",\r\n            editFilenameInput: \"qq-edit-filename-selector\",\r\n            editNameIcon: \"qq-edit-filename-icon-selector\",\r\n            dropText: \"qq-upload-drop-area-text-selector\",\r\n            dropProcessing: \"qq-drop-processing-selector\",\r\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\r\n            thumbnail: \"qq-thumbnail-selector\"\r\n        },\r\n        previewGeneration = {},\r\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\r\n        cachedWaitingForThumbnailImg = new qq.Promise(),\r\n        log,\r\n        isEditElementsExist,\r\n        isRetryElementExist,\r\n        templateHtml,\r\n        container,\r\n        fileList,\r\n        showThumbnails,\r\n        serverScale,\r\n\r\n        // During initialization of the templating module we should cache any\r\n        // placeholder images so we can quickly swap them into the file list on demand.\r\n        // Any placeholder images that cannot be loaded/found are simply ignored.\r\n        cacheThumbnailPlaceholders = function() {\r\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\r\n                waitingUrl = options.placeholders.waitingForThumbnail,\r\n                spec = {\r\n                    maxSize: thumbnailMaxSize,\r\n                    scale: serverScale\r\n                };\r\n\r\n            if (showThumbnails) {\r\n                if (notAvailableUrl) {\r\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\r\n                        function(updatedImg) {\r\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\r\n                        },\r\n                        function() {\r\n                            cachedThumbnailNotAvailableImg.failure();\r\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\r\n                        }\r\n                    );\r\n                }\r\n                else {\r\n                    cachedThumbnailNotAvailableImg.failure();\r\n                }\r\n\r\n                if (waitingUrl) {\r\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\r\n                        function(updatedImg) {\r\n                            cachedWaitingForThumbnailImg.success(updatedImg);\r\n                        },\r\n                        function() {\r\n                            cachedWaitingForThumbnailImg.failure();\r\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\r\n                        }\r\n                    );\r\n                }\r\n                else {\r\n                    cachedWaitingForThumbnailImg.failure();\r\n                }\r\n            }\r\n        },\r\n\r\n        // Displays a \"waiting for thumbnail\" type placeholder image\r\n        // iff we were able to load it during initialization of the templating module.\r\n        displayWaitingImg = function(thumbnail) {\r\n            var waitingImgPlacement = new qq.Promise();\r\n\r\n            cachedWaitingForThumbnailImg.then(function(img) {\r\n                maybeScalePlaceholderViaCss(img, thumbnail);\r\n                /* jshint eqnull:true */\r\n                if (!thumbnail.src) {\r\n                    thumbnail.src = img.src;\r\n                    thumbnail.onload = function() {\r\n                        thumbnail.onload = null;\r\n                        show(thumbnail);\r\n                        waitingImgPlacement.success();\r\n                    };\r\n                }\r\n                else {\r\n                    waitingImgPlacement.success();\r\n                }\r\n            }, function() {\r\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\r\n                // are displayed as \"broken\" images, so we should just hide the img tag\r\n                // if we aren't going to display the \"waiting\" placeholder.\r\n                hide(thumbnail);\r\n                waitingImgPlacement.success();\r\n            });\r\n\r\n            return waitingImgPlacement;\r\n        },\r\n\r\n        generateNewPreview = function(id, blob, spec) {\r\n            var thumbnail = getThumbnail(id);\r\n\r\n            log(\"Generating new thumbnail for \" + id);\r\n            blob.qqThumbnailId = id;\r\n\r\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\r\n                function() {\r\n                    generatedThumbnails++;\r\n                    show(thumbnail);\r\n                    previewGeneration[id].success();\r\n                },\r\n                function() {\r\n                    previewGeneration[id].failure();\r\n\r\n                    // Display the \"not available\" placeholder img only if we are\r\n                    // not expecting a thumbnail at a later point, such as in a server response.\r\n                    if (!options.placeholders.waitUntilUpdate) {\r\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\r\n                    }\r\n                });\r\n        },\r\n\r\n        generateNextQueuedPreview = function() {\r\n            if (thumbGenerationQueue.length) {\r\n                thumbnailQueueMonitorRunning = true;\r\n\r\n                var queuedThumbRequest = thumbGenerationQueue.shift();\r\n\r\n                if (queuedThumbRequest.update) {\r\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\r\n                }\r\n                else {\r\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\r\n                }\r\n            }\r\n            else {\r\n                thumbnailQueueMonitorRunning = false;\r\n            }\r\n        },\r\n\r\n        getCancel = function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\r\n        },\r\n\r\n        getContinue = function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\r\n        },\r\n\r\n        getDialog = function(type) {\r\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\r\n        },\r\n\r\n        getDelete = function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\r\n        },\r\n\r\n        getDropProcessing = function() {\r\n            return getTemplateEl(container, selectorClasses.dropProcessing);\r\n        },\r\n\r\n        getEditIcon = function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\r\n        },\r\n\r\n        getFile = function(id) {\r\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\r\n        },\r\n\r\n        getFilename = function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.file);\r\n        },\r\n\r\n        getPause = function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.pause);\r\n        },\r\n\r\n        getProgress = function(id) {\r\n            /* jshint eqnull:true */\r\n            // Total progress bar\r\n            if (id == null) {\r\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\r\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\r\n            }\r\n\r\n            // Per-file progress bar\r\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\r\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\r\n        },\r\n\r\n        getRetry = function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.retry);\r\n        },\r\n\r\n        getSize = function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.size);\r\n        },\r\n\r\n        getSpinner = function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\r\n        },\r\n\r\n        getTemplateEl = function(context, cssClass) {\r\n            return context && qq(context).getFirstByClass(cssClass);\r\n        },\r\n\r\n        getThumbnail = function(id) {\r\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\r\n        },\r\n\r\n        hide = function(el) {\r\n            el && qq(el).addClass(options.classes.hide);\r\n        },\r\n\r\n        // Ensures a placeholder image does not exceed any max size specified\r\n        // via `style` attribute properties iff <canvas> was not used to scale\r\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\r\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\r\n            var maxWidth = placeholder.style.maxWidth,\r\n                maxHeight = placeholder.style.maxHeight;\r\n\r\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\r\n                qq(thumbnail).css({\r\n                    maxWidth: maxWidth,\r\n                    maxHeight: maxHeight\r\n                });\r\n            }\r\n        },\r\n\r\n        // Displays a \"thumbnail not available\" type placeholder image\r\n        // iff we were able to load this placeholder during initialization\r\n        // of the templating module or after preview generation has failed.\r\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\r\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\r\n                notAvailableImgPlacement = new qq.Promise();\r\n\r\n            cachedThumbnailNotAvailableImg.then(function(img) {\r\n                previewing.then(\r\n                    function() {\r\n                        notAvailableImgPlacement.success();\r\n                    },\r\n                    function() {\r\n                        maybeScalePlaceholderViaCss(img, thumbnail);\r\n\r\n                        thumbnail.onload = function() {\r\n                            thumbnail.onload = null;\r\n                            notAvailableImgPlacement.success();\r\n                        };\r\n\r\n                        thumbnail.src = img.src;\r\n                        show(thumbnail);\r\n                    }\r\n                );\r\n            });\r\n\r\n            return notAvailableImgPlacement;\r\n        },\r\n\r\n        /**\r\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\r\n         * some internally-tracked state variables based on the contents of the template.\r\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\r\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\r\n         *\r\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\r\n         */\r\n        parseAndGetTemplate = function() {\r\n            var scriptEl,\r\n                scriptHtml,\r\n                fileListNode,\r\n                tempTemplateEl,\r\n                fileListHtml,\r\n                defaultButton,\r\n                dropArea,\r\n                thumbnail,\r\n                dropProcessing,\r\n                dropTextEl,\r\n                uploaderEl;\r\n\r\n            log(\"Parsing template\");\r\n\r\n            /*jshint -W116*/\r\n            if (options.templateIdOrEl == null) {\r\n                throw new Error(\"You MUST specify either a template element or ID!\");\r\n            }\r\n\r\n            // Grab the contents of the script tag holding the template.\r\n            if (qq.isString(options.templateIdOrEl)) {\r\n                scriptEl = document.getElementById(options.templateIdOrEl);\r\n\r\n                if (scriptEl === null) {\r\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\r\n                }\r\n\r\n                scriptHtml = scriptEl.innerHTML;\r\n            }\r\n            else {\r\n                if (options.templateIdOrEl.innerHTML === undefined) {\r\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\r\n                        \"It must be an ID or an Element.\");\r\n                }\r\n\r\n                scriptHtml = options.templateIdOrEl.innerHTML;\r\n            }\r\n\r\n            scriptHtml = qq.trimStr(scriptHtml);\r\n            tempTemplateEl = document.createElement(\"div\");\r\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\r\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\r\n\r\n            // Don't include the default template button in the DOM\r\n            // if an alternate button container has been specified.\r\n            if (options.button) {\r\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\r\n                if (defaultButton) {\r\n                    qq(defaultButton).remove();\r\n                }\r\n            }\r\n\r\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\r\n            // or the drag and drop module is not found.\r\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\r\n            // to support layouts where the drop zone is also a container for visible elements,\r\n            // such as the file list.\r\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\r\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\r\n                if (dropProcessing) {\r\n                    qq(dropProcessing).remove();\r\n                }\r\n            }\r\n\r\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\r\n\r\n            // If DnD is not available then remove\r\n            // it from the DOM as well.\r\n            if (dropArea && !qq.DragAndDrop) {\r\n                log(\"DnD module unavailable.\", \"info\");\r\n                qq(dropArea).remove();\r\n            }\r\n\r\n            if (!qq.supportedFeatures.fileDrop) {\r\n                // don't display any \"drop files to upload\" background text\r\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\r\n\r\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\r\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\r\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\r\n                    // will not do this (since we will not be loading the DnD module)\r\n                    qq(dropArea).css({\r\n                        display: \"none\"\r\n                    });\r\n                }\r\n            }\r\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\r\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\r\n                dropTextEl && qq(dropTextEl).remove();\r\n            }\r\n\r\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\r\n            // is present in the template AND the current UA is capable of generating client-side previews.\r\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\r\n            if (!showThumbnails) {\r\n                thumbnail && qq(thumbnail).remove();\r\n            }\r\n            else if (thumbnail) {\r\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\r\n                // Only enforce max size if the attr value is non-zero\r\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\r\n\r\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\r\n            }\r\n            showThumbnails = showThumbnails && thumbnail;\r\n\r\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\r\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\r\n\r\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\r\n            /*jshint -W116*/\r\n            if (fileListNode == null) {\r\n                throw new Error(\"Could not find the file list container in the template!\");\r\n            }\r\n\r\n            fileListHtml = fileListNode.innerHTML;\r\n            fileListNode.innerHTML = \"\";\r\n\r\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\r\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\r\n                document.createElement(\"dialog\");\r\n            }\r\n\r\n            log(\"Template parsing complete\");\r\n\r\n            return {\r\n                template: qq.trimStr(tempTemplateEl.innerHTML),\r\n                fileTemplate: qq.trimStr(fileListHtml)\r\n            };\r\n        },\r\n\r\n        prependFile = function(el, index, fileList) {\r\n            var parentEl = fileList,\r\n                beforeEl = parentEl.firstChild;\r\n\r\n            if (index > 0) {\r\n                beforeEl = qq(parentEl).children()[index].nextSibling;\r\n\r\n            }\r\n\r\n            parentEl.insertBefore(el, beforeEl);\r\n        },\r\n\r\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\r\n            var id = queuedThumbRequest.id,\r\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\r\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\r\n                thumbnail = getThumbnail(id),\r\n                spec = {\r\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\r\n                    maxSize: thumbnailMaxSize,\r\n                    orient: true,\r\n                    scale: true\r\n                };\r\n\r\n            if (qq.supportedFeatures.imagePreviews) {\r\n                if (thumbnail) {\r\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\r\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\r\n                        generateNextQueuedPreview();\r\n                    }\r\n                    else {\r\n                        displayWaitingImg(thumbnail).done(function() {\r\n                            previewGeneration[id] = new qq.Promise();\r\n\r\n                            previewGeneration[id].done(function() {\r\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\r\n                            });\r\n\r\n                            /* jshint eqnull: true */\r\n                            // If we've already generated an <img> for this file, use the one that exists,\r\n                            // don't waste resources generating a new one.\r\n                            if (relatedThumbnailId != null) {\r\n                                useCachedPreview(id, relatedThumbnailId);\r\n                            }\r\n                            else {\r\n                                generateNewPreview(id, optFileOrBlob, spec);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                // File element in template may have been removed, so move on to next item in queue\r\n                else {\r\n                    generateNextQueuedPreview();\r\n                }\r\n            }\r\n            else if (thumbnail) {\r\n                displayWaitingImg(thumbnail);\r\n                generateNextQueuedPreview();\r\n            }\r\n        },\r\n\r\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\r\n            var id = queuedThumbRequest.id,\r\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\r\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\r\n                thumbnail = getThumbnail(id),\r\n                spec = {\r\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\r\n                    scale: serverScale,\r\n                    maxSize: thumbnailMaxSize\r\n                };\r\n\r\n            if (thumbnail) {\r\n                if (thumbnailUrl) {\r\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\r\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\r\n                        generateNextQueuedPreview();\r\n                    }\r\n                    else {\r\n                        if (showWaitingImg) {\r\n                            displayWaitingImg(thumbnail);\r\n                        }\r\n\r\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\r\n                            function() {\r\n                                show(thumbnail);\r\n                                generatedThumbnails++;\r\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\r\n                            },\r\n\r\n                            function() {\r\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\r\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\r\n                            }\r\n                        );\r\n                    }\r\n                }\r\n                else {\r\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\r\n                    generateNextQueuedPreview();\r\n                }\r\n            }\r\n        },\r\n\r\n        setProgressBarWidth = function(id, percent) {\r\n            var bar = getProgress(id),\r\n                /* jshint eqnull:true */\r\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\r\n\r\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\r\n                bar = qq(bar).getFirstByClass(progressBarSelector);\r\n            }\r\n\r\n            if (bar) {\r\n                qq(bar).css({width: percent + \"%\"});\r\n                bar.setAttribute(\"aria-valuenow\", percent);\r\n            }\r\n        },\r\n\r\n        show = function(el) {\r\n            el && qq(el).removeClass(options.classes.hide);\r\n        },\r\n\r\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\r\n            var targetThumbnail = getThumbnail(targetThumbnailId),\r\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\r\n\r\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\r\n\r\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\r\n            previewGeneration[cachedThumbnailId].then(function() {\r\n                generatedThumbnails++;\r\n                previewGeneration[targetThumbnailId].success();\r\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\r\n                targetThumbnail.src = cachedThumbnail.src;\r\n                show(targetThumbnail);\r\n            },\r\n            function() {\r\n                previewGeneration[targetThumbnailId].failure();\r\n                if (!options.placeholders.waitUntilUpdate) {\r\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\r\n                }\r\n            });\r\n        };\r\n\r\n    qq.extend(options, spec);\r\n    log = options.log;\r\n\r\n    // No need to worry about conserving CPU or memory on older browsers,\r\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\r\n    if (!qq.supportedFeatures.imagePreviews) {\r\n        options.limits.timeBetweenThumbs = 0;\r\n        options.limits.maxThumbs = 0;\r\n    }\r\n\r\n    container = options.containerEl;\r\n    showThumbnails = options.imageGenerator !== undefined;\r\n    templateHtml = parseAndGetTemplate();\r\n\r\n    cacheThumbnailPlaceholders();\r\n\r\n    qq.extend(this, {\r\n        render: function() {\r\n            log(\"Rendering template in DOM.\");\r\n\r\n            generatedThumbnails = 0;\r\n\r\n            container.innerHTML = templateHtml.template;\r\n            hide(getDropProcessing());\r\n            this.hideTotalProgress();\r\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\r\n\r\n            log(\"Template rendering complete\");\r\n        },\r\n\r\n        renderFailure: function(message) {\r\n            var cantRenderEl = qq.toElement(message);\r\n            container.innerHTML = \"\";\r\n            container.appendChild(cantRenderEl);\r\n        },\r\n\r\n        reset: function() {\r\n            this.render();\r\n        },\r\n\r\n        clearFiles: function() {\r\n            fileList.innerHTML = \"\";\r\n        },\r\n\r\n        disableCancel: function() {\r\n            isCancelDisabled = true;\r\n        },\r\n\r\n        addFile: function(id, name, prependInfo, hideForever, batch) {\r\n            var fileEl = qq.toElement(templateHtml.fileTemplate),\r\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\r\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\r\n                fileContainer = batch ? fileBatch.content : fileList,\r\n                thumb;\r\n\r\n            if (batch) {\r\n                fileBatch.map[id] = fileEl;\r\n            }\r\n\r\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\r\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\r\n\r\n            if (fileNameEl) {\r\n                qq(fileNameEl).setText(name);\r\n                fileNameEl.setAttribute(\"title\", name);\r\n            }\r\n\r\n            fileEl.setAttribute(FILE_ID_ATTR, id);\r\n\r\n            if (prependInfo) {\r\n                prependFile(fileEl, prependInfo.index, fileContainer);\r\n            }\r\n            else {\r\n                fileContainer.appendChild(fileEl);\r\n            }\r\n\r\n            if (hideForever) {\r\n                fileEl.style.display = \"none\";\r\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\r\n            }\r\n            else {\r\n                hide(getProgress(id));\r\n                hide(getSize(id));\r\n                hide(getDelete(id));\r\n                hide(getRetry(id));\r\n                hide(getPause(id));\r\n                hide(getContinue(id));\r\n\r\n                if (isCancelDisabled) {\r\n                    this.hideCancel(id);\r\n                }\r\n\r\n                thumb = getThumbnail(id);\r\n                if (thumb && !thumb.src) {\r\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\r\n                        thumb.src = waitingImg.src;\r\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\r\n                            qq(thumb).css({\r\n                                maxHeight: waitingImg.style.maxHeight,\r\n                                maxWidth: waitingImg.style.maxWidth\r\n                            });\r\n                        }\r\n\r\n                        show(thumb);\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        addFileToCache: function(id, name, prependInfo, hideForever) {\r\n            this.addFile(id, name, prependInfo, hideForever, true);\r\n        },\r\n\r\n        addCacheToDom: function() {\r\n            fileList.appendChild(fileBatch.content);\r\n            fileBatch.content = document.createDocumentFragment();\r\n            fileBatch.map = {};\r\n        },\r\n\r\n        removeFile: function(id) {\r\n            qq(getFile(id)).remove();\r\n        },\r\n\r\n        getFileId: function(el) {\r\n            var currentNode = el;\r\n\r\n            if (currentNode) {\r\n                /*jshint -W116*/\r\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\r\n                    currentNode = currentNode.parentNode;\r\n                }\r\n\r\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\r\n            }\r\n        },\r\n\r\n        getFileList: function() {\r\n            return fileList;\r\n        },\r\n\r\n        markFilenameEditable: function(id) {\r\n            var filename = getFilename(id);\r\n\r\n            filename && qq(filename).addClass(options.classes.editable);\r\n        },\r\n\r\n        updateFilename: function(id, name) {\r\n            var filenameEl = getFilename(id);\r\n\r\n            if (filenameEl) {\r\n                qq(filenameEl).setText(name);\r\n                filenameEl.setAttribute(\"title\", name);\r\n            }\r\n        },\r\n\r\n        hideFilename: function(id) {\r\n            hide(getFilename(id));\r\n        },\r\n\r\n        showFilename: function(id) {\r\n            show(getFilename(id));\r\n        },\r\n\r\n        isFileName: function(el) {\r\n            return qq(el).hasClass(selectorClasses.file);\r\n        },\r\n\r\n        getButton: function() {\r\n            return options.button || getTemplateEl(container, selectorClasses.button);\r\n        },\r\n\r\n        hideDropProcessing: function() {\r\n            hide(getDropProcessing());\r\n        },\r\n\r\n        showDropProcessing: function() {\r\n            show(getDropProcessing());\r\n        },\r\n\r\n        getDropZone: function() {\r\n            return getTemplateEl(container, selectorClasses.drop);\r\n        },\r\n\r\n        isEditFilenamePossible: function() {\r\n            return isEditElementsExist;\r\n        },\r\n\r\n        hideRetry: function(id) {\r\n            hide(getRetry(id));\r\n        },\r\n\r\n        isRetryPossible: function() {\r\n            return isRetryElementExist;\r\n        },\r\n\r\n        showRetry: function(id) {\r\n            show(getRetry(id));\r\n        },\r\n\r\n        getFileContainer: function(id) {\r\n            return getFile(id);\r\n        },\r\n\r\n        showEditIcon: function(id) {\r\n            var icon = getEditIcon(id);\r\n\r\n            icon && qq(icon).addClass(options.classes.editable);\r\n        },\r\n\r\n        isHiddenForever: function(id) {\r\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\r\n        },\r\n\r\n        hideEditIcon: function(id) {\r\n            var icon = getEditIcon(id);\r\n\r\n            icon && qq(icon).removeClass(options.classes.editable);\r\n        },\r\n\r\n        isEditIcon: function(el) {\r\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\r\n        },\r\n\r\n        getEditInput: function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\r\n        },\r\n\r\n        isEditInput: function(el) {\r\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\r\n        },\r\n\r\n        updateProgress: function(id, loaded, total) {\r\n            var bar = getProgress(id),\r\n                percent;\r\n\r\n            if (bar && total > 0) {\r\n                percent = Math.round(loaded / total * 100);\r\n\r\n                if (percent === 100) {\r\n                    hide(bar);\r\n                }\r\n                else {\r\n                    show(bar);\r\n                }\r\n\r\n                setProgressBarWidth(id, percent);\r\n            }\r\n        },\r\n\r\n        updateTotalProgress: function(loaded, total) {\r\n            this.updateProgress(null, loaded, total);\r\n        },\r\n\r\n        hideProgress: function(id) {\r\n            var bar = getProgress(id);\r\n\r\n            bar && hide(bar);\r\n        },\r\n\r\n        hideTotalProgress: function() {\r\n            this.hideProgress();\r\n        },\r\n\r\n        resetProgress: function(id) {\r\n            setProgressBarWidth(id, 0);\r\n            this.hideTotalProgress(id);\r\n        },\r\n\r\n        resetTotalProgress: function() {\r\n            this.resetProgress();\r\n        },\r\n\r\n        showCancel: function(id) {\r\n            if (!isCancelDisabled) {\r\n                var cancel = getCancel(id);\r\n\r\n                cancel && qq(cancel).removeClass(options.classes.hide);\r\n            }\r\n        },\r\n\r\n        hideCancel: function(id) {\r\n            hide(getCancel(id));\r\n        },\r\n\r\n        isCancel: function(el)  {\r\n            return qq(el).hasClass(selectorClasses.cancel, true);\r\n        },\r\n\r\n        allowPause: function(id) {\r\n            show(getPause(id));\r\n            hide(getContinue(id));\r\n        },\r\n\r\n        uploadPaused: function(id) {\r\n            this.setStatusText(id, options.text.paused);\r\n            this.allowContinueButton(id);\r\n            hide(getSpinner(id));\r\n        },\r\n\r\n        hidePause: function(id) {\r\n            hide(getPause(id));\r\n        },\r\n\r\n        isPause: function(el) {\r\n            return qq(el).hasClass(selectorClasses.pause, true);\r\n        },\r\n\r\n        isContinueButton: function(el) {\r\n            return qq(el).hasClass(selectorClasses.continueButton, true);\r\n        },\r\n\r\n        allowContinueButton: function(id) {\r\n            show(getContinue(id));\r\n            hide(getPause(id));\r\n        },\r\n\r\n        uploadContinued: function(id) {\r\n            this.setStatusText(id, \"\");\r\n            this.allowPause(id);\r\n            show(getSpinner(id));\r\n        },\r\n\r\n        showDeleteButton: function(id) {\r\n            show(getDelete(id));\r\n        },\r\n\r\n        hideDeleteButton: function(id) {\r\n            hide(getDelete(id));\r\n        },\r\n\r\n        isDeleteButton: function(el) {\r\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\r\n        },\r\n\r\n        isRetry: function(el) {\r\n            return qq(el).hasClass(selectorClasses.retry, true);\r\n        },\r\n\r\n        updateSize: function(id, text) {\r\n            var size = getSize(id);\r\n\r\n            if (size) {\r\n                show(size);\r\n                qq(size).setText(text);\r\n            }\r\n        },\r\n\r\n        setStatusText: function(id, text) {\r\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\r\n\r\n            if (textEl) {\r\n                /*jshint -W116*/\r\n                if (text == null) {\r\n                    qq(textEl).clearText();\r\n                }\r\n                else {\r\n                    qq(textEl).setText(text);\r\n                }\r\n            }\r\n        },\r\n\r\n        hideSpinner: function(id) {\r\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\r\n            hide(getSpinner(id));\r\n        },\r\n\r\n        showSpinner: function(id) {\r\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\r\n            show(getSpinner(id));\r\n        },\r\n\r\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\r\n            if (!this.isHiddenForever(id)) {\r\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\r\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\r\n            }\r\n        },\r\n\r\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\r\n            if (!this.isHiddenForever(id)) {\r\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\r\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\r\n            }\r\n        },\r\n\r\n        hasDialog: function(type) {\r\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\r\n        },\r\n\r\n        showDialog: function(type, message, defaultValue) {\r\n            var dialog = getDialog(type),\r\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\r\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\r\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\r\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\r\n                promise = new qq.Promise(),\r\n\r\n                closeHandler = function() {\r\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\r\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\r\n                    promise.failure();\r\n                },\r\n\r\n                cancelClickHandler = function() {\r\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\r\n                    dialog.close();\r\n                },\r\n\r\n                okClickHandler = function() {\r\n                    dialog.removeEventListener(\"close\", closeHandler);\r\n                    okBtn.removeEventListener(\"click\", okClickHandler);\r\n                    dialog.close();\r\n\r\n                    promise.success(inputEl && inputEl.value);\r\n                };\r\n\r\n            dialog.addEventListener(\"close\", closeHandler);\r\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\r\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\r\n\r\n            if (inputEl) {\r\n                inputEl.value = defaultValue;\r\n            }\r\n            messageEl.textContent = message;\r\n\r\n            dialog.showModal();\r\n\r\n            return promise;\r\n        }\r\n    });\r\n};\r\n","/*globals qq */\r\n// Base handler for UI (FineUploader mode) events.\r\n// Some more specific handlers inherit from this one.\r\nqq.UiEventHandler = function(s, protectedApi) {\r\n    \"use strict\";\r\n\r\n    var disposer = new qq.DisposeSupport(),\r\n        spec = {\r\n            eventType: \"click\",\r\n            attachTo: null,\r\n            onHandled: function(target, event) {}\r\n        };\r\n\r\n    // This makes up the \"public\" API methods that will be accessible\r\n    // to instances constructing a base or child handler\r\n    qq.extend(this, {\r\n        addHandler: function(element) {\r\n            addHandler(element);\r\n        },\r\n\r\n        dispose: function() {\r\n            disposer.dispose();\r\n        }\r\n    });\r\n\r\n    function addHandler(element) {\r\n        disposer.attach(element, spec.eventType, function(event) {\r\n            // Only in IE: the `event` is a property of the `window`.\r\n            event = event || window.event;\r\n\r\n            // On older browsers, we must check the `srcElement` instead of the `target`.\r\n            var target = event.target || event.srcElement;\r\n\r\n            spec.onHandled(target, event);\r\n        });\r\n    }\r\n\r\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\r\n    qq.extend(protectedApi, {\r\n        getFileIdFromItem: function(item) {\r\n            return item.qqFileId;\r\n        },\r\n\r\n        getDisposeSupport: function() {\r\n            return disposer;\r\n        }\r\n    });\r\n\r\n    qq.extend(spec, s);\r\n\r\n    if (spec.attachTo) {\r\n        addHandler(spec.attachTo);\r\n    }\r\n};\r\n","/* global qq */\r\nqq.FileButtonsClickHandler = function(s) {\r\n    \"use strict\";\r\n\r\n    var inheritedInternalApi = {},\r\n        spec = {\r\n            templating: null,\r\n            log: function(message, lvl) {},\r\n            onDeleteFile: function(fileId) {},\r\n            onCancel: function(fileId) {},\r\n            onRetry: function(fileId) {},\r\n            onPause: function(fileId) {},\r\n            onContinue: function(fileId) {},\r\n            onGetName: function(fileId) {}\r\n        },\r\n        buttonHandlers = {\r\n            cancel: function(id) { spec.onCancel(id); },\r\n            retry:  function(id) { spec.onRetry(id); },\r\n            deleteButton: function(id) { spec.onDeleteFile(id); },\r\n            pause: function(id) { spec.onPause(id); },\r\n            continueButton: function(id) { spec.onContinue(id); }\r\n        };\r\n\r\n    function examineEvent(target, event) {\r\n        qq.each(buttonHandlers, function(buttonType, handler) {\r\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\r\n                fileId;\r\n\r\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\r\n                fileId = spec.templating.getFileId(target);\r\n                qq.preventDefault(event);\r\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\r\n                handler(fileId);\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n\r\n    qq.extend(spec, s);\r\n\r\n    spec.eventType = \"click\";\r\n    spec.onHandled = examineEvent;\r\n    spec.attachTo = spec.templating.getFileList();\r\n\r\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\r\n};\r\n","/*globals qq */\r\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\r\nqq.FilenameClickHandler = function(s) {\r\n    \"use strict\";\r\n\r\n    var inheritedInternalApi = {},\r\n        spec = {\r\n            templating: null,\r\n            log: function(message, lvl) {},\r\n            classes: {\r\n                file: \"qq-upload-file\",\r\n                editNameIcon: \"qq-edit-filename-icon\"\r\n            },\r\n            onGetUploadStatus: function(fileId) {},\r\n            onGetName: function(fileId) {}\r\n        };\r\n\r\n    qq.extend(spec, s);\r\n\r\n    // This will be called by the parent handler when a `click` event is received on the list element.\r\n    function examineEvent(target, event) {\r\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\r\n            var fileId = spec.templating.getFileId(target),\r\n                status = spec.onGetUploadStatus(fileId);\r\n\r\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\r\n            if (status === qq.status.SUBMITTED) {\r\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\r\n                qq.preventDefault(event);\r\n\r\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    spec.eventType = \"click\";\r\n    spec.onHandled = examineEvent;\r\n\r\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\r\n};\r\n","/*globals qq */\r\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\r\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\r\n    \"use strict\";\r\n\r\n    var spec = {\r\n            templating: null,\r\n            onGetUploadStatus: function(fileId) {},\r\n            log: function(message, lvl) {}\r\n        };\r\n\r\n    if (!inheritedInternalApi) {\r\n        inheritedInternalApi = {};\r\n    }\r\n\r\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\r\n    function handleInputFocus(target, event) {\r\n        if (spec.templating.isEditInput(target)) {\r\n            var fileId = spec.templating.getFileId(target),\r\n                status = spec.onGetUploadStatus(fileId);\r\n\r\n            if (status === qq.status.SUBMITTED) {\r\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\r\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\r\n            }\r\n        }\r\n    }\r\n\r\n    spec.eventType = \"focusin\";\r\n    spec.onHandled = handleInputFocus;\r\n\r\n    qq.extend(spec, s);\r\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\r\n};\r\n","/*globals qq */\r\n/**\r\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\r\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\r\n *\r\n * @param spec Overrides for default specifications\r\n */\r\nqq.FilenameInputFocusHandler = function(spec) {\r\n    \"use strict\";\r\n\r\n    spec.eventType = \"focus\";\r\n    spec.attachTo = null;\r\n\r\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\r\n};\r\n","/*globals qq */\r\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\r\n// Children will delegate to this handler when specific edit-related actions are detected.\r\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\r\n    \"use strict\";\r\n\r\n    var spec = {\r\n            templating: null,\r\n            log: function(message, lvl) {},\r\n            onGetUploadStatus: function(fileId) {},\r\n            onGetName: function(fileId) {},\r\n            onSetName: function(fileId, newName) {},\r\n            onEditingStatusChange: function(fileId, isEditing) {}\r\n        };\r\n\r\n    function getFilenameSansExtension(fileId) {\r\n        var filenameSansExt = spec.onGetName(fileId),\r\n            extIdx = filenameSansExt.lastIndexOf(\".\");\r\n\r\n        if (extIdx > 0) {\r\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\r\n        }\r\n\r\n        return filenameSansExt;\r\n    }\r\n\r\n    function getOriginalExtension(fileId) {\r\n        var origName = spec.onGetName(fileId);\r\n        return qq.getExtension(origName);\r\n    }\r\n\r\n    // Callback iff the name has been changed\r\n    function handleNameUpdate(newFilenameInputEl, fileId) {\r\n        var newName = newFilenameInputEl.value,\r\n            origExtension;\r\n\r\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\r\n            origExtension = getOriginalExtension(fileId);\r\n\r\n            if (origExtension !== undefined) {\r\n                newName = newName + \".\" + origExtension;\r\n            }\r\n\r\n            spec.onSetName(fileId, newName);\r\n        }\r\n\r\n        spec.onEditingStatusChange(fileId, false);\r\n    }\r\n\r\n    // The name has been updated if the filename edit input loses focus.\r\n    function registerInputBlurHandler(inputEl, fileId) {\r\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\r\n            handleNameUpdate(inputEl, fileId);\r\n        });\r\n    }\r\n\r\n    // The name has been updated if the user presses enter.\r\n    function registerInputEnterKeyHandler(inputEl, fileId) {\r\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\r\n\r\n            var code = event.keyCode || event.which;\r\n\r\n            if (code === 13) {\r\n                handleNameUpdate(inputEl, fileId);\r\n            }\r\n        });\r\n    }\r\n\r\n    qq.extend(spec, s);\r\n\r\n    spec.attachTo = spec.templating.getFileList();\r\n\r\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\r\n\r\n    qq.extend(inheritedInternalApi, {\r\n        handleFilenameEdit: function(id, target, focusInput) {\r\n            var newFilenameInputEl = spec.templating.getEditInput(id);\r\n\r\n            spec.onEditingStatusChange(id, true);\r\n\r\n            newFilenameInputEl.value = getFilenameSansExtension(id);\r\n\r\n            if (focusInput) {\r\n                newFilenameInputEl.focus();\r\n            }\r\n\r\n            registerInputBlurHandler(newFilenameInputEl, id);\r\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\r\n        }\r\n    });\r\n};\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n/**\r\n * CryptoJS core components.\r\n */\r\nqq.CryptoJS = (function (Math, undefined) {\r\n    /**\r\n     * CryptoJS namespace.\r\n     */\r\n    var C = {};\r\n\r\n    /**\r\n     * Library namespace.\r\n     */\r\n    var C_lib = C.lib = {};\r\n\r\n    /**\r\n     * Base object for prototypal inheritance.\r\n     */\r\n    var Base = C_lib.Base = (function () {\r\n        function F() {}\r\n\r\n        return {\r\n            /**\r\n             * Creates a new object that inherits from this object.\r\n             *\r\n             * @param {Object} overrides Properties to copy into the new object.\r\n             *\r\n             * @return {Object} The new object.\r\n             *\r\n             * @static\r\n             *\r\n             * @example\r\n             *\r\n             *     var MyType = CryptoJS.lib.Base.extend({\r\n             *         field: 'value',\r\n             *\r\n             *         method: function () {\r\n             *         }\r\n             *     });\r\n             */\r\n            extend: function (overrides) {\r\n                // Spawn\r\n                F.prototype = this;\r\n                var subtype = new F();\r\n\r\n                // Augment\r\n                if (overrides) {\r\n                    subtype.mixIn(overrides);\r\n                }\r\n\r\n                // Create default initializer\r\n                if (!subtype.hasOwnProperty('init')) {\r\n                    subtype.init = function () {\r\n                        subtype.$super.init.apply(this, arguments);\r\n                    };\r\n                }\r\n\r\n                // Initializer's prototype is the subtype object\r\n                subtype.init.prototype = subtype;\r\n\r\n                // Reference supertype\r\n                subtype.$super = this;\r\n\r\n                return subtype;\r\n            },\r\n\r\n            /**\r\n             * Extends this object and runs the init method.\r\n             * Arguments to create() will be passed to init().\r\n             *\r\n             * @return {Object} The new object.\r\n             *\r\n             * @static\r\n             *\r\n             * @example\r\n             *\r\n             *     var instance = MyType.create();\r\n             */\r\n            create: function () {\r\n                var instance = this.extend();\r\n                instance.init.apply(instance, arguments);\r\n\r\n                return instance;\r\n            },\r\n\r\n            /**\r\n             * Initializes a newly created object.\r\n             * Override this method to add some logic when your objects are created.\r\n             *\r\n             * @example\r\n             *\r\n             *     var MyType = CryptoJS.lib.Base.extend({\r\n             *         init: function () {\r\n             *             // ...\r\n             *         }\r\n             *     });\r\n             */\r\n            init: function () {\r\n            },\r\n\r\n            /**\r\n             * Copies properties into this object.\r\n             *\r\n             * @param {Object} properties The properties to mix in.\r\n             *\r\n             * @example\r\n             *\r\n             *     MyType.mixIn({\r\n             *         field: 'value'\r\n             *     });\r\n             */\r\n            mixIn: function (properties) {\r\n                for (var propertyName in properties) {\r\n                    if (properties.hasOwnProperty(propertyName)) {\r\n                        this[propertyName] = properties[propertyName];\r\n                    }\r\n                }\r\n\r\n                // IE won't copy toString using the loop above\r\n                if (properties.hasOwnProperty('toString')) {\r\n                    this.toString = properties.toString;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Creates a copy of this object.\r\n             *\r\n             * @return {Object} The clone.\r\n             *\r\n             * @example\r\n             *\r\n             *     var clone = instance.clone();\r\n             */\r\n            clone: function () {\r\n                return this.init.prototype.extend(this);\r\n            }\r\n        };\r\n    }());\r\n\r\n    /**\r\n     * An array of 32-bit words.\r\n     *\r\n     * @property {Array} words The array of 32-bit words.\r\n     * @property {number} sigBytes The number of significant bytes in this word array.\r\n     */\r\n    var WordArray = C_lib.WordArray = Base.extend({\r\n        /**\r\n         * Initializes a newly created word array.\r\n         *\r\n         * @param {Array} words (Optional) An array of 32-bit words.\r\n         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.lib.WordArray.create();\r\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\r\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\r\n         */\r\n        init: function (words, sigBytes) {\r\n            words = this.words = words || [];\r\n\r\n            if (sigBytes != undefined) {\r\n                this.sigBytes = sigBytes;\r\n            } else {\r\n                this.sigBytes = words.length * 4;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Converts this word array to a string.\r\n         *\r\n         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\r\n         *\r\n         * @return {string} The stringified word array.\r\n         *\r\n         * @example\r\n         *\r\n         *     var string = wordArray + '';\r\n         *     var string = wordArray.toString();\r\n         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\r\n         */\r\n        toString: function (encoder) {\r\n            return (encoder || Hex).stringify(this);\r\n        },\r\n\r\n        /**\r\n         * Concatenates a word array to this word array.\r\n         *\r\n         * @param {WordArray} wordArray The word array to append.\r\n         *\r\n         * @return {WordArray} This word array.\r\n         *\r\n         * @example\r\n         *\r\n         *     wordArray1.concat(wordArray2);\r\n         */\r\n        concat: function (wordArray) {\r\n            // Shortcuts\r\n            var thisWords = this.words;\r\n            var thatWords = wordArray.words;\r\n            var thisSigBytes = this.sigBytes;\r\n            var thatSigBytes = wordArray.sigBytes;\r\n\r\n            // Clamp excess bits\r\n            this.clamp();\r\n\r\n            // Concat\r\n            if (thisSigBytes % 4) {\r\n                // Copy one byte at a time\r\n                for (var i = 0; i < thatSigBytes; i++) {\r\n                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\r\n                }\r\n            } else if (thatWords.length > 0xffff) {\r\n                // Copy one word at a time\r\n                for (var i = 0; i < thatSigBytes; i += 4) {\r\n                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\r\n                }\r\n            } else {\r\n                // Copy all words at once\r\n                thisWords.push.apply(thisWords, thatWords);\r\n            }\r\n            this.sigBytes += thatSigBytes;\r\n\r\n            // Chainable\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes insignificant bits.\r\n         *\r\n         * @example\r\n         *\r\n         *     wordArray.clamp();\r\n         */\r\n        clamp: function () {\r\n            // Shortcuts\r\n            var words = this.words;\r\n            var sigBytes = this.sigBytes;\r\n\r\n            // Clamp\r\n            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\r\n            words.length = Math.ceil(sigBytes / 4);\r\n        },\r\n\r\n        /**\r\n         * Creates a copy of this word array.\r\n         *\r\n         * @return {WordArray} The clone.\r\n         *\r\n         * @example\r\n         *\r\n         *     var clone = wordArray.clone();\r\n         */\r\n        clone: function () {\r\n            var clone = Base.clone.call(this);\r\n            clone.words = this.words.slice(0);\r\n\r\n            return clone;\r\n        },\r\n\r\n        /**\r\n         * Creates a word array filled with random bytes.\r\n         *\r\n         * @param {number} nBytes The number of random bytes to generate.\r\n         *\r\n         * @return {WordArray} The random word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.lib.WordArray.random(16);\r\n         */\r\n        random: function (nBytes) {\r\n            var words = [];\r\n            for (var i = 0; i < nBytes; i += 4) {\r\n                words.push((Math.random() * 0x100000000) | 0);\r\n            }\r\n\r\n            return new WordArray.init(words, nBytes);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Encoder namespace.\r\n     */\r\n    var C_enc = C.enc = {};\r\n\r\n    /**\r\n     * Hex encoding strategy.\r\n     */\r\n    var Hex = C_enc.Hex = {\r\n        /**\r\n         * Converts a word array to a hex string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The hex string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n\r\n            // Convert\r\n            var hexChars = [];\r\n            for (var i = 0; i < sigBytes; i++) {\r\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                hexChars.push((bite >>> 4).toString(16));\r\n                hexChars.push((bite & 0x0f).toString(16));\r\n            }\r\n\r\n            return hexChars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a hex string to a word array.\r\n         *\r\n         * @param {string} hexStr The hex string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\r\n         */\r\n        parse: function (hexStr) {\r\n            // Shortcut\r\n            var hexStrLength = hexStr.length;\r\n\r\n            // Convert\r\n            var words = [];\r\n            for (var i = 0; i < hexStrLength; i += 2) {\r\n                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\r\n            }\r\n\r\n            return new WordArray.init(words, hexStrLength / 2);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Latin1 encoding strategy.\r\n     */\r\n    var Latin1 = C_enc.Latin1 = {\r\n        /**\r\n         * Converts a word array to a Latin1 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The Latin1 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n\r\n            // Convert\r\n            var latin1Chars = [];\r\n            for (var i = 0; i < sigBytes; i++) {\r\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                latin1Chars.push(String.fromCharCode(bite));\r\n            }\r\n\r\n            return latin1Chars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a Latin1 string to a word array.\r\n         *\r\n         * @param {string} latin1Str The Latin1 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\r\n         */\r\n        parse: function (latin1Str) {\r\n            // Shortcut\r\n            var latin1StrLength = latin1Str.length;\r\n\r\n            // Convert\r\n            var words = [];\r\n            for (var i = 0; i < latin1StrLength; i++) {\r\n                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\r\n            }\r\n\r\n            return new WordArray.init(words, latin1StrLength);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * UTF-8 encoding strategy.\r\n     */\r\n    var Utf8 = C_enc.Utf8 = {\r\n        /**\r\n         * Converts a word array to a UTF-8 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The UTF-8 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            try {\r\n                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\r\n            } catch (e) {\r\n                throw new Error('Malformed UTF-8 data');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Converts a UTF-8 string to a word array.\r\n         *\r\n         * @param {string} utf8Str The UTF-8 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\r\n         */\r\n        parse: function (utf8Str) {\r\n            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Abstract buffered block algorithm template.\r\n     *\r\n     * The property blockSize must be implemented in a concrete subtype.\r\n     *\r\n     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\r\n     */\r\n    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\r\n        /**\r\n         * Resets this block algorithm's data buffer to its initial state.\r\n         *\r\n         * @example\r\n         *\r\n         *     bufferedBlockAlgorithm.reset();\r\n         */\r\n        reset: function () {\r\n            // Initial values\r\n            this._data = new WordArray.init();\r\n            this._nDataBytes = 0;\r\n        },\r\n\r\n        /**\r\n         * Adds new data to this block algorithm's buffer.\r\n         *\r\n         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\r\n         *\r\n         * @example\r\n         *\r\n         *     bufferedBlockAlgorithm._append('data');\r\n         *     bufferedBlockAlgorithm._append(wordArray);\r\n         */\r\n        _append: function (data) {\r\n            // Convert string to WordArray, else assume WordArray already\r\n            if (typeof data == 'string') {\r\n                data = Utf8.parse(data);\r\n            }\r\n\r\n            // Append\r\n            this._data.concat(data);\r\n            this._nDataBytes += data.sigBytes;\r\n        },\r\n\r\n        /**\r\n         * Processes available data blocks.\r\n         *\r\n         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\r\n         *\r\n         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\r\n         *\r\n         * @return {WordArray} The processed data.\r\n         *\r\n         * @example\r\n         *\r\n         *     var processedData = bufferedBlockAlgorithm._process();\r\n         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\r\n         */\r\n        _process: function (doFlush) {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n            var dataSigBytes = data.sigBytes;\r\n            var blockSize = this.blockSize;\r\n            var blockSizeBytes = blockSize * 4;\r\n\r\n            // Count blocks ready\r\n            var nBlocksReady = dataSigBytes / blockSizeBytes;\r\n            if (doFlush) {\r\n                // Round up to include partial blocks\r\n                nBlocksReady = Math.ceil(nBlocksReady);\r\n            } else {\r\n                // Round down to include only full blocks,\r\n                // less the number of blocks that must remain in the buffer\r\n                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\r\n            }\r\n\r\n            // Count words ready\r\n            var nWordsReady = nBlocksReady * blockSize;\r\n\r\n            // Count bytes ready\r\n            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\r\n\r\n            // Process blocks\r\n            if (nWordsReady) {\r\n                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\r\n                    // Perform concrete-algorithm logic\r\n                    this._doProcessBlock(dataWords, offset);\r\n                }\r\n\r\n                // Remove processed words\r\n                var processedWords = dataWords.splice(0, nWordsReady);\r\n                data.sigBytes -= nBytesReady;\r\n            }\r\n\r\n            // Return processed words\r\n            return new WordArray.init(processedWords, nBytesReady);\r\n        },\r\n\r\n        /**\r\n         * Creates a copy of this object.\r\n         *\r\n         * @return {Object} The clone.\r\n         *\r\n         * @example\r\n         *\r\n         *     var clone = bufferedBlockAlgorithm.clone();\r\n         */\r\n        clone: function () {\r\n            var clone = Base.clone.call(this);\r\n            clone._data = this._data.clone();\r\n\r\n            return clone;\r\n        },\r\n\r\n        _minBufferSize: 0\r\n    });\r\n\r\n    /**\r\n     * Abstract hasher template.\r\n     *\r\n     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\r\n     */\r\n    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\r\n        /**\r\n         * Configuration options.\r\n         */\r\n        cfg: Base.extend(),\r\n\r\n        /**\r\n         * Initializes a newly created hasher.\r\n         *\r\n         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hasher = CryptoJS.algo.SHA256.create();\r\n         */\r\n        init: function (cfg) {\r\n            // Apply config defaults\r\n            this.cfg = this.cfg.extend(cfg);\r\n\r\n            // Set initial values\r\n            this.reset();\r\n        },\r\n\r\n        /**\r\n         * Resets this hasher to its initial state.\r\n         *\r\n         * @example\r\n         *\r\n         *     hasher.reset();\r\n         */\r\n        reset: function () {\r\n            // Reset data buffer\r\n            BufferedBlockAlgorithm.reset.call(this);\r\n\r\n            // Perform concrete-hasher logic\r\n            this._doReset();\r\n        },\r\n\r\n        /**\r\n         * Updates this hasher with a message.\r\n         *\r\n         * @param {WordArray|string} messageUpdate The message to append.\r\n         *\r\n         * @return {Hasher} This hasher.\r\n         *\r\n         * @example\r\n         *\r\n         *     hasher.update('message');\r\n         *     hasher.update(wordArray);\r\n         */\r\n        update: function (messageUpdate) {\r\n            // Append\r\n            this._append(messageUpdate);\r\n\r\n            // Update the hash\r\n            this._process();\r\n\r\n            // Chainable\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Finalizes the hash computation.\r\n         * Note that the finalize operation is effectively a destructive, read-once operation.\r\n         *\r\n         * @param {WordArray|string} messageUpdate (Optional) A final message update.\r\n         *\r\n         * @return {WordArray} The hash.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hash = hasher.finalize();\r\n         *     var hash = hasher.finalize('message');\r\n         *     var hash = hasher.finalize(wordArray);\r\n         */\r\n        finalize: function (messageUpdate) {\r\n            // Final message update\r\n            if (messageUpdate) {\r\n                this._append(messageUpdate);\r\n            }\r\n\r\n            // Perform concrete-hasher logic\r\n            var hash = this._doFinalize();\r\n\r\n            return hash;\r\n        },\r\n\r\n        blockSize: 512/32,\r\n\r\n        /**\r\n         * Creates a shortcut function to a hasher's object interface.\r\n         *\r\n         * @param {Hasher} hasher The hasher to create a helper for.\r\n         *\r\n         * @return {Function} The shortcut function.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\r\n         */\r\n        _createHelper: function (hasher) {\r\n            return function (message, cfg) {\r\n                return new hasher.init(cfg).finalize(message);\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Creates a shortcut function to the HMAC's object interface.\r\n         *\r\n         * @param {Hasher} hasher The hasher to use in this HMAC helper.\r\n         *\r\n         * @return {Function} The shortcut function.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\r\n         */\r\n        _createHmacHelper: function (hasher) {\r\n            return function (message, key) {\r\n                return new C_algo.HMAC.init(hasher, key).finalize(message);\r\n            };\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Algorithm namespace.\r\n     */\r\n    var C_algo = C.algo = {};\r\n\r\n    return C;\r\n}(Math));\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n    var C_enc = C.enc;\r\n\r\n    /**\r\n     * Base64 encoding strategy.\r\n     */\r\n    var Base64 = C_enc.Base64 = {\r\n        /**\r\n         * Converts a word array to a Base64 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The Base64 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n            var map = this._map;\r\n\r\n            // Clamp excess bits\r\n            wordArray.clamp();\r\n\r\n            // Convert\r\n            var base64Chars = [];\r\n            for (var i = 0; i < sigBytes; i += 3) {\r\n                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\r\n                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\r\n                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\r\n\r\n                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\r\n\r\n                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\r\n                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\r\n                }\r\n            }\r\n\r\n            // Add padding\r\n            var paddingChar = map.charAt(64);\r\n            if (paddingChar) {\r\n                while (base64Chars.length % 4) {\r\n                    base64Chars.push(paddingChar);\r\n                }\r\n            }\r\n\r\n            return base64Chars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a Base64 string to a word array.\r\n         *\r\n         * @param {string} base64Str The Base64 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\r\n         */\r\n        parse: function (base64Str) {\r\n            // Shortcuts\r\n            var base64StrLength = base64Str.length;\r\n            var map = this._map;\r\n\r\n            // Ignore padding\r\n            var paddingChar = map.charAt(64);\r\n            if (paddingChar) {\r\n                var paddingIndex = base64Str.indexOf(paddingChar);\r\n                if (paddingIndex != -1) {\r\n                    base64StrLength = paddingIndex;\r\n                }\r\n            }\r\n\r\n            // Convert\r\n            var words = [];\r\n            var nBytes = 0;\r\n            for (var i = 0; i < base64StrLength; i++) {\r\n                if (i % 4) {\r\n                    var bits1 = map.indexOf(base64Str.charAt(i - 1)) << ((i % 4) * 2);\r\n                    var bits2 = map.indexOf(base64Str.charAt(i)) >>> (6 - (i % 4) * 2);\r\n                    words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\r\n                    nBytes++;\r\n                }\r\n            }\r\n\r\n            return WordArray.create(words, nBytes);\r\n        },\r\n\r\n        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\r\n    };\r\n}());\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var Base = C_lib.Base;\r\n    var C_enc = C.enc;\r\n    var Utf8 = C_enc.Utf8;\r\n    var C_algo = C.algo;\r\n\r\n    /**\r\n     * HMAC algorithm.\r\n     */\r\n    var HMAC = C_algo.HMAC = Base.extend({\r\n        /**\r\n         * Initializes a newly created HMAC.\r\n         *\r\n         * @param {Hasher} hasher The hash algorithm to use.\r\n         * @param {WordArray|string} key The secret key.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\r\n         */\r\n        init: function (hasher, key) {\r\n            // Init hasher\r\n            hasher = this._hasher = new hasher.init();\r\n\r\n            // Convert string to WordArray, else assume WordArray already\r\n            if (typeof key == 'string') {\r\n                key = Utf8.parse(key);\r\n            }\r\n\r\n            // Shortcuts\r\n            var hasherBlockSize = hasher.blockSize;\r\n            var hasherBlockSizeBytes = hasherBlockSize * 4;\r\n\r\n            // Allow arbitrary length keys\r\n            if (key.sigBytes > hasherBlockSizeBytes) {\r\n                key = hasher.finalize(key);\r\n            }\r\n\r\n            // Clamp excess bits\r\n            key.clamp();\r\n\r\n            // Clone key for inner and outer pads\r\n            var oKey = this._oKey = key.clone();\r\n            var iKey = this._iKey = key.clone();\r\n\r\n            // Shortcuts\r\n            var oKeyWords = oKey.words;\r\n            var iKeyWords = iKey.words;\r\n\r\n            // XOR keys with pad constants\r\n            for (var i = 0; i < hasherBlockSize; i++) {\r\n                oKeyWords[i] ^= 0x5c5c5c5c;\r\n                iKeyWords[i] ^= 0x36363636;\r\n            }\r\n            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\r\n\r\n            // Set initial values\r\n            this.reset();\r\n        },\r\n\r\n        /**\r\n         * Resets this HMAC to its initial state.\r\n         *\r\n         * @example\r\n         *\r\n         *     hmacHasher.reset();\r\n         */\r\n        reset: function () {\r\n            // Shortcut\r\n            var hasher = this._hasher;\r\n\r\n            // Reset\r\n            hasher.reset();\r\n            hasher.update(this._iKey);\r\n        },\r\n\r\n        /**\r\n         * Updates this HMAC with a message.\r\n         *\r\n         * @param {WordArray|string} messageUpdate The message to append.\r\n         *\r\n         * @return {HMAC} This HMAC instance.\r\n         *\r\n         * @example\r\n         *\r\n         *     hmacHasher.update('message');\r\n         *     hmacHasher.update(wordArray);\r\n         */\r\n        update: function (messageUpdate) {\r\n            this._hasher.update(messageUpdate);\r\n\r\n            // Chainable\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Finalizes the HMAC computation.\r\n         * Note that the finalize operation is effectively a destructive, read-once operation.\r\n         *\r\n         * @param {WordArray|string} messageUpdate (Optional) A final message update.\r\n         *\r\n         * @return {WordArray} The HMAC.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hmac = hmacHasher.finalize();\r\n         *     var hmac = hmacHasher.finalize('message');\r\n         *     var hmac = hmacHasher.finalize(wordArray);\r\n         */\r\n        finalize: function (messageUpdate) {\r\n            // Shortcut\r\n            var hasher = this._hasher;\r\n\r\n            // Compute HMAC\r\n            var innerHash = hasher.finalize(messageUpdate);\r\n            hasher.reset();\r\n            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\r\n\r\n            return hmac;\r\n        }\r\n    });\r\n}());\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n    var Hasher = C_lib.Hasher;\r\n    var C_algo = C.algo;\r\n\r\n    // Reusable object\r\n    var W = [];\r\n\r\n    /**\r\n     * SHA-1 hash algorithm.\r\n     */\r\n    var SHA1 = C_algo.SHA1 = Hasher.extend({\r\n        _doReset: function () {\r\n            this._hash = new WordArray.init([\r\n                0x67452301, 0xefcdab89,\r\n                0x98badcfe, 0x10325476,\r\n                0xc3d2e1f0\r\n            ]);\r\n        },\r\n\r\n        _doProcessBlock: function (M, offset) {\r\n            // Shortcut\r\n            var H = this._hash.words;\r\n\r\n            // Working variables\r\n            var a = H[0];\r\n            var b = H[1];\r\n            var c = H[2];\r\n            var d = H[3];\r\n            var e = H[4];\r\n\r\n            // Computation\r\n            for (var i = 0; i < 80; i++) {\r\n                if (i < 16) {\r\n                    W[i] = M[offset + i] | 0;\r\n                } else {\r\n                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n                    W[i] = (n << 1) | (n >>> 31);\r\n                }\r\n\r\n                var t = ((a << 5) | (a >>> 27)) + e + W[i];\r\n                if (i < 20) {\r\n                    t += ((b & c) | (~b & d)) + 0x5a827999;\r\n                } else if (i < 40) {\r\n                    t += (b ^ c ^ d) + 0x6ed9eba1;\r\n                } else if (i < 60) {\r\n                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\r\n                } else /* if (i < 80) */ {\r\n                    t += (b ^ c ^ d) - 0x359d3e2a;\r\n                }\r\n\r\n                e = d;\r\n                d = c;\r\n                c = (b << 30) | (b >>> 2);\r\n                b = a;\r\n                a = t;\r\n            }\r\n\r\n            // Intermediate hash value\r\n            H[0] = (H[0] + a) | 0;\r\n            H[1] = (H[1] + b) | 0;\r\n            H[2] = (H[2] + c) | 0;\r\n            H[3] = (H[3] + d) | 0;\r\n            H[4] = (H[4] + e) | 0;\r\n        },\r\n\r\n        _doFinalize: function () {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n\r\n            var nBitsTotal = this._nDataBytes * 8;\r\n            var nBitsLeft = data.sigBytes * 8;\r\n\r\n            // Add padding\r\n            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n            data.sigBytes = dataWords.length * 4;\r\n\r\n            // Hash final blocks\r\n            this._process();\r\n\r\n            // Return final computed hash\r\n            return this._hash;\r\n        },\r\n\r\n        clone: function () {\r\n            var clone = Hasher.clone.call(this);\r\n            clone._hash = this._hash.clone();\r\n\r\n            return clone;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Shortcut function to the hasher's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     *\r\n     * @return {WordArray} The hash.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hash = CryptoJS.SHA1('message');\r\n     *     var hash = CryptoJS.SHA1(wordArray);\r\n     */\r\n    C.SHA1 = Hasher._createHelper(SHA1);\r\n\r\n    /**\r\n     * Shortcut function to the HMAC's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     * @param {WordArray|string} key The secret key.\r\n     *\r\n     * @return {WordArray} The HMAC.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hmac = CryptoJS.HmacSHA1(message, key);\r\n     */\r\n    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\r\n}());\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function (Math) {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n    var Hasher = C_lib.Hasher;\r\n    var C_algo = C.algo;\r\n\r\n    // Initialization and round constants tables\r\n    var H = [];\r\n    var K = [];\r\n\r\n    // Compute constants\r\n    (function () {\r\n        function isPrime(n) {\r\n            var sqrtN = Math.sqrt(n);\r\n            for (var factor = 2; factor <= sqrtN; factor++) {\r\n                if (!(n % factor)) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        function getFractionalBits(n) {\r\n            return ((n - (n | 0)) * 0x100000000) | 0;\r\n        }\r\n\r\n        var n = 2;\r\n        var nPrime = 0;\r\n        while (nPrime < 64) {\r\n            if (isPrime(n)) {\r\n                if (nPrime < 8) {\r\n                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\r\n                }\r\n                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\r\n\r\n                nPrime++;\r\n            }\r\n\r\n            n++;\r\n        }\r\n    }());\r\n\r\n    // Reusable object\r\n    var W = [];\r\n\r\n    /**\r\n     * SHA-256 hash algorithm.\r\n     */\r\n    var SHA256 = C_algo.SHA256 = Hasher.extend({\r\n        _doReset: function () {\r\n            this._hash = new WordArray.init(H.slice(0));\r\n        },\r\n\r\n        _doProcessBlock: function (M, offset) {\r\n            // Shortcut\r\n            var H = this._hash.words;\r\n\r\n            // Working variables\r\n            var a = H[0];\r\n            var b = H[1];\r\n            var c = H[2];\r\n            var d = H[3];\r\n            var e = H[4];\r\n            var f = H[5];\r\n            var g = H[6];\r\n            var h = H[7];\r\n\r\n            // Computation\r\n            for (var i = 0; i < 64; i++) {\r\n                if (i < 16) {\r\n                    W[i] = M[offset + i] | 0;\r\n                } else {\r\n                    var gamma0x = W[i - 15];\r\n                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\r\n                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\r\n                                   (gamma0x >>> 3);\r\n\r\n                    var gamma1x = W[i - 2];\r\n                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\r\n                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\r\n                                   (gamma1x >>> 10);\r\n\r\n                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\r\n                }\r\n\r\n                var ch  = (e & f) ^ (~e & g);\r\n                var maj = (a & b) ^ (a & c) ^ (b & c);\r\n\r\n                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\r\n                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\r\n\r\n                var t1 = h + sigma1 + ch + K[i] + W[i];\r\n                var t2 = sigma0 + maj;\r\n\r\n                h = g;\r\n                g = f;\r\n                f = e;\r\n                e = (d + t1) | 0;\r\n                d = c;\r\n                c = b;\r\n                b = a;\r\n                a = (t1 + t2) | 0;\r\n            }\r\n\r\n            // Intermediate hash value\r\n            H[0] = (H[0] + a) | 0;\r\n            H[1] = (H[1] + b) | 0;\r\n            H[2] = (H[2] + c) | 0;\r\n            H[3] = (H[3] + d) | 0;\r\n            H[4] = (H[4] + e) | 0;\r\n            H[5] = (H[5] + f) | 0;\r\n            H[6] = (H[6] + g) | 0;\r\n            H[7] = (H[7] + h) | 0;\r\n        },\r\n\r\n        _doFinalize: function () {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n\r\n            var nBitsTotal = this._nDataBytes * 8;\r\n            var nBitsLeft = data.sigBytes * 8;\r\n\r\n            // Add padding\r\n            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n            data.sigBytes = dataWords.length * 4;\r\n\r\n            // Hash final blocks\r\n            this._process();\r\n\r\n            // Return final computed hash\r\n            return this._hash;\r\n        },\r\n\r\n        clone: function () {\r\n            var clone = Hasher.clone.call(this);\r\n            clone._hash = this._hash.clone();\r\n\r\n            return clone;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Shortcut function to the hasher's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     *\r\n     * @return {WordArray} The hash.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hash = CryptoJS.SHA256('message');\r\n     *     var hash = CryptoJS.SHA256(wordArray);\r\n     */\r\n    C.SHA256 = Hasher._createHelper(SHA256);\r\n\r\n    /**\r\n     * Shortcut function to the HMAC's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     * @param {WordArray|string} key The secret key.\r\n     *\r\n     * @return {WordArray} The HMAC.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hmac = CryptoJS.HmacSHA256(message, key);\r\n     */\r\n    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\r\n}(Math));\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Check if typed arrays are supported\r\n    if (typeof ArrayBuffer != 'function') {\r\n        return;\r\n    }\r\n\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n\r\n    // Reference original init\r\n    var superInit = WordArray.init;\r\n\r\n    // Augment WordArray.init to handle typed arrays\r\n    var subInit = WordArray.init = function (typedArray) {\r\n        // Convert buffers to uint8\r\n        if (typedArray instanceof ArrayBuffer) {\r\n            typedArray = new Uint8Array(typedArray);\r\n        }\r\n\r\n        // Convert other array views to uint8\r\n        if (\r\n            typedArray instanceof Int8Array ||\r\n            typedArray instanceof Uint8ClampedArray ||\r\n            typedArray instanceof Int16Array ||\r\n            typedArray instanceof Uint16Array ||\r\n            typedArray instanceof Int32Array ||\r\n            typedArray instanceof Uint32Array ||\r\n            typedArray instanceof Float32Array ||\r\n            typedArray instanceof Float64Array\r\n        ) {\r\n            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\r\n        }\r\n\r\n        // Handle Uint8Array\r\n        if (typedArray instanceof Uint8Array) {\r\n            // Shortcut\r\n            var typedArrayByteLength = typedArray.byteLength;\r\n\r\n            // Extract bytes\r\n            var words = [];\r\n            for (var i = 0; i < typedArrayByteLength; i++) {\r\n                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\r\n            }\r\n\r\n            // Initialize this word array\r\n            superInit.call(this, words, typedArrayByteLength);\r\n        } else {\r\n            // Else call normal init\r\n            superInit.apply(this, arguments);\r\n        }\r\n    };\r\n\r\n    subInit.prototype = WordArray;\r\n}());\r\n","/*globals qq */\r\nqq.s3 = qq.s3 || {};\r\n\r\nqq.s3.util = qq.s3.util || (function() {\r\n    \"use strict\";\r\n\r\n    return {\r\n        ALGORITHM_PARAM_NAME: \"x-amz-algorithm\",\r\n\r\n        AWS_PARAM_PREFIX: \"x-amz-meta-\",\r\n\r\n        CREDENTIAL_PARAM_NAME: \"x-amz-credential\",\r\n\r\n        DATE_PARAM_NAME: \"x-amz-date\",\r\n\r\n        REDUCED_REDUNDANCY_PARAM_NAME: \"x-amz-storage-class\",\r\n        REDUCED_REDUNDANCY_PARAM_VALUE: \"REDUCED_REDUNDANCY\",\r\n\r\n        SERVER_SIDE_ENCRYPTION_PARAM_NAME: \"x-amz-server-side-encryption\",\r\n        SERVER_SIDE_ENCRYPTION_PARAM_VALUE: \"AES256\",\r\n\r\n        SESSION_TOKEN_PARAM_NAME: \"x-amz-security-token\",\r\n\r\n        V4_ALGORITHM_PARAM_VALUE: \"AWS4-HMAC-SHA256\",\r\n\r\n        V4_SIGNATURE_PARAM_NAME: \"x-amz-signature\",\r\n\r\n        CASE_SENSITIVE_PARAM_NAMES: [\r\n            \"Cache-Control\",\r\n            \"Content-Disposition\",\r\n            \"Content-Encoding\",\r\n            \"Content-MD5\"\r\n        ],\r\n\r\n        UNSIGNABLE_REST_HEADER_NAMES: [\r\n            \"Cache-Control\",\r\n            \"Content-Disposition\",\r\n            \"Content-Encoding\",\r\n            \"Content-MD5\"\r\n        ],\r\n\r\n        UNPREFIXED_PARAM_NAMES: [\r\n            \"Cache-Control\",\r\n            \"Content-Disposition\",\r\n            \"Content-Encoding\",\r\n            \"Content-MD5\",\r\n            \"x-amz-server-side-encryption-customer-algorithm\",\r\n            \"x-amz-server-side-encryption-customer-key\",\r\n            \"x-amz-server-side-encryption-customer-key-MD5\"\r\n        ],\r\n\r\n        /**\r\n         * This allows for the region to be specified in the bucket's endpoint URL, or not.\r\n         *\r\n         * Examples of some valid endpoints are:\r\n         *     http://foo.s3.amazonaws.com\r\n         *     https://foo.s3.amazonaws.com\r\n         *     http://foo.s3-ap-northeast-1.amazonaws.com\r\n         *     foo.s3.amazonaws.com\r\n         *     http://foo.bar.com\r\n         *     http://s3.amazonaws.com/foo.bar.com\r\n         * ...etc\r\n         *\r\n         * @param endpoint The bucket's URL.\r\n         * @returns {String || undefined} The bucket name, or undefined if the URL cannot be parsed.\r\n         */\r\n        getBucket: function(endpoint) {\r\n            var patterns = [\r\n                    //bucket in domain\r\n                    /^(?:https?:\\/\\/)?([a-z0-9.\\-_]+)\\.s3(?:-[a-z0-9\\-]+)?\\.amazonaws\\.com/i,\r\n                    //bucket in path\r\n                    /^(?:https?:\\/\\/)?s3(?:-[a-z0-9\\-]+)?\\.amazonaws\\.com\\/([a-z0-9.\\-_]+)/i,\r\n                    //custom domain\r\n                    /^(?:https?:\\/\\/)?([a-z0-9.\\-_]+)/i\r\n                ],\r\n                bucket;\r\n\r\n            qq.each(patterns, function(idx, pattern) {\r\n                var match = pattern.exec(endpoint);\r\n\r\n                if (match) {\r\n                    bucket = match[1];\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            return bucket;\r\n        },\r\n\r\n        /** Create Prefixed request headers which are appropriate for S3.\r\n         *\r\n         * If the request header is appropriate for S3 (e.g. Cache-Control) then pass\r\n         * it along without a metadata prefix. For all other request header parameter names,\r\n         * apply qq.s3.util.AWS_PARAM_PREFIX before the name.\r\n         * See: http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html\r\n         */\r\n        _getPrefixedParamName: function(name) {\r\n            if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, name) >= 0) {\r\n                return name;\r\n            }\r\n            return qq.s3.util.AWS_PARAM_PREFIX + name;\r\n        },\r\n\r\n        /**\r\n         * Create a policy document to be signed and sent along with the S3 upload request.\r\n         *\r\n         * @param spec Object with properties use to construct the policy document.\r\n         * @returns {Object} Policy doc.\r\n         */\r\n        getPolicy: function(spec) {\r\n            var policy = {},\r\n                conditions = [],\r\n                bucket = spec.bucket,\r\n                date = spec.date,\r\n                drift = spec.clockDrift,\r\n                key = spec.key,\r\n                accessKey = spec.accessKey,\r\n                acl = spec.acl,\r\n                type = spec.type,\r\n                expectedStatus = spec.expectedStatus,\r\n                sessionToken = spec.sessionToken,\r\n                params = spec.params,\r\n                successRedirectUrl = qq.s3.util.getSuccessRedirectAbsoluteUrl(spec.successRedirectUrl),\r\n                minFileSize = spec.minFileSize,\r\n                maxFileSize = spec.maxFileSize,\r\n                reducedRedundancy = spec.reducedRedundancy,\r\n                region = spec.region,\r\n                serverSideEncryption = spec.serverSideEncryption,\r\n                signatureVersion = spec.signatureVersion;\r\n\r\n            policy.expiration = qq.s3.util.getPolicyExpirationDate(date, drift);\r\n\r\n            conditions.push({acl: acl});\r\n            conditions.push({bucket: bucket});\r\n\r\n            if (type) {\r\n                conditions.push({\"Content-Type\": type});\r\n            }\r\n\r\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n            if (expectedStatus) {\r\n                conditions.push({success_action_status: expectedStatus.toString()});\r\n            }\r\n\r\n            if (successRedirectUrl) {\r\n                conditions.push({success_action_redirect: successRedirectUrl});\r\n            }\r\n            // jscs:enable\r\n            if (reducedRedundancy) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\r\n            }\r\n\r\n            if (sessionToken) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\r\n            }\r\n\r\n            if (serverSideEncryption) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\r\n            }\r\n\r\n            if (signatureVersion === 2) {\r\n                conditions.push({key: key});\r\n            }\r\n            else if (signatureVersion === 4) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.ALGORITHM_PARAM_NAME] = qq.s3.util.V4_ALGORITHM_PARAM_VALUE;\r\n\r\n                conditions.push({});\r\n                conditions[conditions.length - 1].key = key;\r\n\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.CREDENTIAL_PARAM_NAME] =\r\n                    qq.s3.util.getV4CredentialsString({date: date, key: accessKey, region: region});\r\n\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.DATE_PARAM_NAME] =\r\n                    qq.s3.util.getV4PolicyDate(date, drift);\r\n            }\r\n\r\n            // user metadata\r\n            qq.each(params, function(name, val) {\r\n                var awsParamName = qq.s3.util._getPrefixedParamName(name),\r\n                    param = {};\r\n\r\n                if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, awsParamName) >= 0) {\r\n                    param[awsParamName] = val;\r\n                }\r\n                else {\r\n                    param[awsParamName] = encodeURIComponent(val);\r\n                }\r\n\r\n                conditions.push(param);\r\n            });\r\n\r\n            policy.conditions = conditions;\r\n\r\n            qq.s3.util.enforceSizeLimits(policy, minFileSize, maxFileSize);\r\n\r\n            return policy;\r\n        },\r\n\r\n        /**\r\n         * Update a previously constructed policy document with updated credentials.  Currently, this only requires we\r\n         * update the session token.  This is only relevant if requests are being signed client-side.\r\n         *\r\n         * @param policy Live policy document\r\n         * @param newSessionToken Updated session token.\r\n         */\r\n        refreshPolicyCredentials: function(policy, newSessionToken) {\r\n            var sessionTokenFound = false;\r\n\r\n            qq.each(policy.conditions, function(oldCondIdx, oldCondObj) {\r\n                qq.each(oldCondObj, function(oldCondName, oldCondVal) {\r\n                    if (oldCondName === qq.s3.util.SESSION_TOKEN_PARAM_NAME) {\r\n                        oldCondObj[oldCondName] = newSessionToken;\r\n                        sessionTokenFound = true;\r\n                    }\r\n                });\r\n            });\r\n\r\n            if (!sessionTokenFound) {\r\n                policy.conditions.push({});\r\n                policy.conditions[policy.conditions.length - 1][qq.s3.util.SESSION_TOKEN_PARAM_NAME] = newSessionToken;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Generates all parameters to be passed along with the S3 upload request.  This includes invoking a callback\r\n         * that is expected to asynchronously retrieve a signature for the policy document.  Note that the server\r\n         * signing the request should reject a \"tainted\" policy document that includes unexpected values, since it is\r\n         * still possible for a malicious user to tamper with these values during policy document generation,\r\n         * before it is sent to the server for signing.\r\n         *\r\n         * @param spec Object with properties: `params`, `type`, `key`, `accessKey`, `acl`, `expectedStatus`, `successRedirectUrl`,\r\n         * `reducedRedundancy`, `region`, `serverSideEncryption`, `version`, and `log()`, along with any options associated with `qq.s3.util.getPolicy()`.\r\n         * @returns {qq.Promise} Promise that will be fulfilled once all parameters have been determined.\r\n         */\r\n        generateAwsParams: function(spec, signPolicyCallback) {\r\n            var awsParams = {},\r\n                customParams = spec.params,\r\n                promise = new qq.Promise(),\r\n                sessionToken = spec.sessionToken,\r\n                drift = spec.clockDrift,\r\n                type = spec.type,\r\n                key = spec.key,\r\n                accessKey = spec.accessKey,\r\n                acl = spec.acl,\r\n                expectedStatus = spec.expectedStatus,\r\n                successRedirectUrl = qq.s3.util.getSuccessRedirectAbsoluteUrl(spec.successRedirectUrl),\r\n                reducedRedundancy = spec.reducedRedundancy,\r\n                region = spec.region,\r\n                serverSideEncryption = spec.serverSideEncryption,\r\n                signatureVersion = spec.signatureVersion,\r\n                now = new Date(),\r\n                log = spec.log,\r\n                policyJson;\r\n\r\n            spec.date = now;\r\n            policyJson = qq.s3.util.getPolicy(spec);\r\n\r\n            awsParams.key = key;\r\n\r\n            if (type) {\r\n                awsParams[\"Content-Type\"] = type;\r\n            }\r\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n            if (expectedStatus) {\r\n                awsParams.success_action_status = expectedStatus;\r\n            }\r\n\r\n            if (successRedirectUrl) {\r\n                awsParams.success_action_redirect = successRedirectUrl;\r\n            }\r\n            // jscs:enable\r\n            if (reducedRedundancy) {\r\n                awsParams[qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\r\n            }\r\n\r\n            if (serverSideEncryption) {\r\n                awsParams[qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\r\n            }\r\n\r\n            if (sessionToken) {\r\n                awsParams[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\r\n            }\r\n\r\n            awsParams.acl = acl;\r\n\r\n            // Custom (user-supplied) params must be prefixed with the value of `qq.s3.util.AWS_PARAM_PREFIX`.\r\n            // Params such as Cache-Control or Content-Disposition will not be prefixed.\r\n            // Prefixed param values will be URI encoded as well.\r\n            qq.each(customParams, function(name, val) {\r\n                var awsParamName = qq.s3.util._getPrefixedParamName(name);\r\n\r\n                if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, awsParamName) >= 0) {\r\n                    awsParams[awsParamName] = val;\r\n                }\r\n                else {\r\n                    awsParams[awsParamName] = encodeURIComponent(val);\r\n                }\r\n            });\r\n\r\n            if (signatureVersion === 2) {\r\n                awsParams.AWSAccessKeyId = accessKey;\r\n            }\r\n            else if (signatureVersion === 4) {\r\n                awsParams[qq.s3.util.ALGORITHM_PARAM_NAME] = qq.s3.util.V4_ALGORITHM_PARAM_VALUE;\r\n                awsParams[qq.s3.util.CREDENTIAL_PARAM_NAME] = qq.s3.util.getV4CredentialsString({date: now, key: accessKey, region: region});\r\n                awsParams[qq.s3.util.DATE_PARAM_NAME] = qq.s3.util.getV4PolicyDate(now, drift);\r\n            }\r\n\r\n            // Invoke a promissory callback that should provide us with a base64-encoded policy doc and an\r\n            // HMAC signature for the policy doc.\r\n            signPolicyCallback(policyJson).then(\r\n                function(policyAndSignature, updatedAccessKey, updatedSessionToken) {\r\n                    awsParams.policy = policyAndSignature.policy;\r\n\r\n                    if (spec.signatureVersion === 2) {\r\n                        awsParams.signature = policyAndSignature.signature;\r\n\r\n                        if (updatedAccessKey) {\r\n                            awsParams.AWSAccessKeyId = updatedAccessKey;\r\n                        }\r\n                    }\r\n                    else if (spec.signatureVersion === 4) {\r\n                        awsParams[qq.s3.util.V4_SIGNATURE_PARAM_NAME] = policyAndSignature.signature;\r\n                    }\r\n\r\n                    if (updatedSessionToken) {\r\n                        awsParams[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = updatedSessionToken;\r\n                    }\r\n\r\n                    promise.success(awsParams);\r\n                },\r\n                function(errorMessage) {\r\n                    errorMessage = errorMessage || \"Can't continue further with request to S3 as we did not receive \" +\r\n                                                   \"a valid signature and policy from the server.\";\r\n\r\n                    log(\"Policy signing failed.  \" + errorMessage, \"error\");\r\n                    promise.failure(errorMessage);\r\n                }\r\n            );\r\n\r\n            return promise;\r\n        },\r\n\r\n        /**\r\n         * Add a condition to an existing S3 upload request policy document used to ensure AWS enforces any size\r\n         * restrictions placed on files server-side.  This is important to do, in case users mess with the client-side\r\n         * checks already in place.\r\n         *\r\n         * @param policy Policy document as an `Object`, with a `conditions` property already attached\r\n         * @param minSize Minimum acceptable size, in bytes\r\n         * @param maxSize Maximum acceptable size, in bytes (0 = unlimited)\r\n         */\r\n        enforceSizeLimits: function(policy, minSize, maxSize) {\r\n            var adjustedMinSize = minSize < 0 ? 0 : minSize,\r\n                // Adjust a maxSize of 0 to the largest possible integer, since we must specify a high and a low in the request\r\n                adjustedMaxSize = maxSize <= 0 ? 9007199254740992 : maxSize;\r\n\r\n            if (minSize > 0 || maxSize > 0) {\r\n                policy.conditions.push([\"content-length-range\", adjustedMinSize.toString(), adjustedMaxSize.toString()]);\r\n            }\r\n        },\r\n\r\n        getPolicyExpirationDate: function(date, drift) {\r\n            var adjustedDate = new Date(date.getTime() + drift);\r\n            return qq.s3.util.getPolicyDate(adjustedDate, 5);\r\n        },\r\n\r\n        getCredentialsDate: function(date) {\r\n            return date.getUTCFullYear() + \"\" +\r\n                (\"0\" + (date.getUTCMonth() + 1)).slice(-2) +\r\n                (\"0\" + date.getUTCDate()).slice(-2);\r\n        },\r\n\r\n        getPolicyDate: function(date, _minutesToAdd_) {\r\n            var minutesToAdd = _minutesToAdd_ || 0,\r\n                pad, r;\r\n\r\n            /*jshint -W014 */\r\n            // Is this going to be a problem if we encounter this moments before 2 AM just before daylight savings time ends?\r\n            date.setMinutes(date.getMinutes() + (minutesToAdd || 0));\r\n\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                pad = function(number) {\r\n                    r = String(number);\r\n\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n\r\n                    return r;\r\n                };\r\n\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Looks at a response from S3 contained in an iframe and parses the query string in an attempt to identify\r\n         * the associated resource.\r\n         *\r\n         * @param iframe Iframe containing response\r\n         * @returns {{bucket: *, key: *, etag: *}}\r\n         */\r\n        parseIframeResponse: function(iframe) {\r\n            var doc = iframe.contentDocument || iframe.contentWindow.document,\r\n                queryString = doc.location.search,\r\n                match = /bucket=(.+)&key=(.+)&etag=(.+)/.exec(queryString);\r\n\r\n            if (match) {\r\n                return {\r\n                    bucket: match[1],\r\n                    key: match[2],\r\n                    etag: match[3].replace(/%22/g, \"\")\r\n                };\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param successRedirectUrl Relative or absolute location of success redirect page\r\n         * @returns {*|string} undefined if the parameter is undefined, otherwise the absolute location of the success redirect page\r\n         */\r\n        getSuccessRedirectAbsoluteUrl: function(successRedirectUrl) {\r\n            if (successRedirectUrl) {\r\n                var targetAnchorContainer = document.createElement(\"div\"),\r\n                    targetAnchor;\r\n\r\n                if (qq.ie7()) {\r\n                    // Note that we must make use of `innerHTML` for IE7 only instead of simply creating an anchor via\r\n                    // `document.createElement('a')` and setting the `href` attribute.  The latter approach does not allow us to\r\n                    // obtain an absolute URL in IE7 if the `endpoint` is a relative URL.\r\n                    targetAnchorContainer.innerHTML = \"<a href='\" + successRedirectUrl + \"'></a>\";\r\n                    targetAnchor = targetAnchorContainer.firstChild;\r\n                    return targetAnchor.href;\r\n                }\r\n                else {\r\n                    // IE8 and IE9 do not seem to derive an absolute URL from a relative URL using the `innerHTML`\r\n                    // approach above, so we'll just create an anchor this way and set it's `href` attribute.\r\n                    // Due to yet another quirk in IE8 and IE9, we have to set the `href` equal to itself\r\n                    // in order to ensure relative URLs will be properly parsed.\r\n                    targetAnchor = document.createElement(\"a\");\r\n                    targetAnchor.href = successRedirectUrl;\r\n                    targetAnchor.href = targetAnchor.href;\r\n                    return targetAnchor.href;\r\n                }\r\n            }\r\n        },\r\n\r\n        getV4CredentialsString: function(spec) {\r\n            return spec.key + \"/\" +\r\n                qq.s3.util.getCredentialsDate(spec.date) + \"/\" +\r\n                spec.region + \"/s3/aws4_request\";\r\n        },\r\n\r\n        getV4PolicyDate: function(date, drift) {\r\n            var adjustedDate = new Date(date.getTime() + drift);\r\n\r\n            return qq.s3.util.getCredentialsDate(adjustedDate) + \"T\" +\r\n                    (\"0\" + adjustedDate.getUTCHours()).slice(-2) +\r\n                    (\"0\" + adjustedDate.getUTCMinutes()).slice(-2) +\r\n                    (\"0\" + adjustedDate.getUTCSeconds()).slice(-2) +\r\n                    \"Z\";\r\n        },\r\n\r\n        // AWS employs a strict interpretation of [RFC 3986](http://tools.ietf.org/html/rfc3986#page-12).\r\n        // So, we must ensure all reserved characters listed in the spec are percent-encoded,\r\n        // and spaces are replaced with \"+\".\r\n        encodeQueryStringParam: function(param) {\r\n            var percentEncoded = encodeURIComponent(param);\r\n\r\n            // %-encode characters not handled by `encodeURIComponent` (to follow RFC 3986)\r\n            percentEncoded = percentEncoded.replace(/[!'()]/g, escape);\r\n\r\n            // %-encode characters not handled by `escape` (to follow RFC 3986)\r\n            percentEncoded = percentEncoded.replace(/\\*/g, \"%2A\");\r\n\r\n            // replace percent-encoded spaces with a \"+\"\r\n            return percentEncoded.replace(/%20/g, \"+\");\r\n        },\r\n        /**\r\n         * Escapes url part as for AWS requirements\r\n         * AWS uriEscapePath function pulled from aws-sdk-js licensed under Apache 2.0 - http://github.com/aws/aws-sdk-js\r\n         */\r\n        uriEscape: function(string) {\r\n            var output = encodeURIComponent(string);\r\n            output = output.replace(/[^A-Za-z0-9_.~\\-%]+/g, escape);\r\n            output = output.replace(/[*]/g, function(ch) {\r\n                return \"%\" + ch.charCodeAt(0).toString(16).toUpperCase();\r\n            });\r\n            return output;\r\n        },\r\n        /**\r\n         * Escapes a path as for AWS requirement\r\n         * AWS uriEscapePath function pulled from aws-sdk-js licensed under Apache 2.0 - http://github.com/aws/aws-sdk-js\r\n         */\r\n        uriEscapePath: function(path) {\r\n            var parts = [];\r\n            qq.each(path.split(\"/\"), function(idx, item) {\r\n                parts.push(qq.s3.util.uriEscape(item));\r\n            });\r\n            return parts.join(\"/\");\r\n        }\r\n    };\r\n}());\r\n","/*globals qq*/\r\n/**\r\n * Defines the public API for non-traditional FineUploaderBasic mode.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.nonTraditionalBasePublicApi = {\r\n        setUploadSuccessParams: function(params, id) {\r\n            this._uploadSuccessParamsStore.set(params, id);\r\n        },\r\n        setUploadSuccessEndpoint: function(endpoint, id) {\r\n            this._uploadSuccessEndpointStore.set(endpoint, id);\r\n        }\r\n    };\r\n\r\n    qq.nonTraditionalBasePrivateApi = {\r\n        /**\r\n         * When the upload has completed, if it is successful, send a request to the `successEndpoint` (if defined).\r\n         * This will hold up the call to the `onComplete` callback until we have determined success of the upload\r\n         * according to the local server, if a `successEndpoint` has been defined by the integrator.\r\n         *\r\n         * @param id ID of the completed upload\r\n         * @param name Name of the associated item\r\n         * @param result Object created from the server's parsed JSON response.\r\n         * @param xhr Associated XmlHttpRequest, if this was used to send the request.\r\n         * @returns {boolean || qq.Promise} true/false if success can be determined immediately, otherwise a `qq.Promise`\r\n         * if we need to ask the server.\r\n         * @private\r\n         */\r\n        _onComplete: function(id, name, result, xhr) {\r\n            var success = result.success ? true : false,\r\n                self = this,\r\n                onCompleteArgs = arguments,\r\n                successEndpoint = this._uploadSuccessEndpointStore.get(id),\r\n                successCustomHeaders = this._options.uploadSuccess.customHeaders,\r\n                successMethod = this._options.uploadSuccess.method,\r\n                cors = this._options.cors,\r\n                promise = new qq.Promise(),\r\n                uploadSuccessParams = this._uploadSuccessParamsStore.get(id),\r\n                fileParams = this._paramsStore.get(id),\r\n\r\n                // If we are waiting for confirmation from the local server, and have received it,\r\n                // include properties from the local server response in the `response` parameter\r\n                // sent to the `onComplete` callback, delegate to the parent `_onComplete`, and\r\n                // fulfill the associated promise.\r\n                onSuccessFromServer = function(successRequestResult) {\r\n                    delete self._failedSuccessRequestCallbacks[id];\r\n                    qq.extend(result, successRequestResult);\r\n                    qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\r\n                    promise.success(successRequestResult);\r\n                },\r\n\r\n                // If the upload success request fails, attempt to re-send the success request (via the core retry code).\r\n                // The entire upload may be restarted if the server returns a \"reset\" property with a value of true as well.\r\n                onFailureFromServer = function(successRequestResult) {\r\n                    var callback = submitSuccessRequest;\r\n\r\n                    qq.extend(result, successRequestResult);\r\n\r\n                    if (result && result.reset) {\r\n                        callback = null;\r\n                    }\r\n\r\n                    if (!callback) {\r\n                        delete self._failedSuccessRequestCallbacks[id];\r\n                    }\r\n                    else {\r\n                        self._failedSuccessRequestCallbacks[id] = callback;\r\n                    }\r\n\r\n                    if (!self._onAutoRetry(id, name, result, xhr, callback)) {\r\n                        qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\r\n                        promise.failure(successRequestResult);\r\n                    }\r\n                },\r\n                submitSuccessRequest,\r\n                successAjaxRequester;\r\n\r\n            // Ask the local server if the file sent is ok.\r\n            if (success && successEndpoint) {\r\n                successAjaxRequester = new qq.UploadSuccessAjaxRequester({\r\n                    endpoint: successEndpoint,\r\n                    method: successMethod,\r\n                    customHeaders: successCustomHeaders,\r\n                    cors: cors,\r\n                    log: qq.bind(this.log, this)\r\n                });\r\n\r\n                // combine custom params and default params\r\n                qq.extend(uploadSuccessParams, self._getEndpointSpecificParams(id, result, xhr), true);\r\n\r\n                // include any params associated with the file\r\n                fileParams && qq.extend(uploadSuccessParams, fileParams, true);\r\n\r\n                submitSuccessRequest = qq.bind(function() {\r\n                    successAjaxRequester.sendSuccessRequest(id, uploadSuccessParams)\r\n                        .then(onSuccessFromServer, onFailureFromServer);\r\n                }, self);\r\n\r\n                submitSuccessRequest();\r\n\r\n                return promise;\r\n            }\r\n\r\n            // If we are not asking the local server about the file, just delegate to the parent `_onComplete`.\r\n            return qq.FineUploaderBasic.prototype._onComplete.apply(this, arguments);\r\n        },\r\n\r\n        // If the failure occurred on an upload success request (and a reset was not ordered), try to resend that instead.\r\n        _manualRetry: function(id) {\r\n            var successRequestCallback = this._failedSuccessRequestCallbacks[id];\r\n\r\n            return qq.FineUploaderBasic.prototype._manualRetry.call(this, id, successRequestCallback);\r\n        }\r\n    };\r\n}());\r\n","/*globals qq */\r\n/**\r\n * This defines FineUploaderBasic mode w/ support for uploading to S3, which provides all the basic\r\n * functionality of Fine Uploader Basic as well as code to handle uploads directly to S3.\r\n * Some inherited options and API methods have a special meaning in the context of the S3 uploader.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.s3.FineUploaderBasic = function(o) {\r\n        var options = {\r\n            request: {\r\n                // public key (required for server-side signing, ignored if `credentials` have been provided)\r\n                accessKey: null,\r\n\r\n                // padding, in milliseconds, to add to the x-amz-date header & the policy expiration date\r\n                clockDrift: 0\r\n            },\r\n\r\n            objectProperties: {\r\n                acl: \"private\",\r\n\r\n                // string or a function which may be promissory\r\n                bucket: qq.bind(function(id) {\r\n                    return qq.s3.util.getBucket(this.getEndpoint(id));\r\n                }, this),\r\n\r\n                // string or a function which may be promissory - only used for V4 multipart uploads\r\n                host: qq.bind(function(id) {\r\n                    return (/(?:http|https):\\/\\/(.+)(?:\\/.+)?/).exec(this._endpointStore.get(id))[1];\r\n                }, this),\r\n\r\n                // 'uuid', 'filename', or a function which may be promissory\r\n                key: \"uuid\",\r\n\r\n                reducedRedundancy: false,\r\n\r\n                // Defined at http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\r\n                region: \"us-east-1\",\r\n\r\n                serverSideEncryption: false\r\n            },\r\n\r\n            credentials: {\r\n                // Public key (required).\r\n                accessKey: null,\r\n                // Private key (required).\r\n                secretKey: null,\r\n                // Expiration date for the credentials (required).  May be an ISO string or a `Date`.\r\n                expiration: null,\r\n                // Temporary credentials session token.\r\n                // Only required for temporary credentials obtained via AssumeRoleWithWebIdentity.\r\n                sessionToken: null\r\n            },\r\n\r\n            // All but `version` are ignored if `credentials` is provided.\r\n            signature: {\r\n                customHeaders: {},\r\n                endpoint: null,\r\n                version: 2\r\n            },\r\n\r\n            uploadSuccess: {\r\n                endpoint: null,\r\n\r\n                method: \"POST\",\r\n\r\n                // In addition to the default params sent by Fine Uploader\r\n                params: {},\r\n\r\n                customHeaders: {}\r\n            },\r\n\r\n            // required if non-File-API browsers, such as IE9 and older, are used\r\n            iframeSupport: {\r\n                localBlankPagePath: null\r\n            },\r\n\r\n            chunking: {\r\n                // minimum part size is 5 MiB when uploading to S3\r\n                partSize: 5242880\r\n            },\r\n\r\n            cors: {\r\n                allowXdr: true\r\n            },\r\n\r\n            callbacks: {\r\n                onCredentialsExpired: function() {}\r\n            }\r\n        };\r\n\r\n        // Replace any default options with user defined ones\r\n        qq.extend(options, o, true);\r\n\r\n        if (!this.setCredentials(options.credentials, true)) {\r\n            this._currentCredentials.accessKey = options.request.accessKey;\r\n        }\r\n\r\n        this._aclStore = this._createStore(options.objectProperties.acl);\r\n\r\n        // Call base module\r\n        qq.FineUploaderBasic.call(this, options);\r\n\r\n        this._uploadSuccessParamsStore = this._createStore(this._options.uploadSuccess.params);\r\n        this._uploadSuccessEndpointStore = this._createStore(this._options.uploadSuccess.endpoint);\r\n\r\n        // This will hold callbacks for failed uploadSuccess requests that will be invoked on retry.\r\n        // Indexed by file ID.\r\n        this._failedSuccessRequestCallbacks = {};\r\n\r\n        // Holds S3 keys for file representations constructed from a session request.\r\n        this._cannedKeys = {};\r\n        // Holds S3 buckets for file representations constructed from a session request.\r\n        this._cannedBuckets = {};\r\n\r\n        this._buckets = {};\r\n        this._hosts = {};\r\n    };\r\n\r\n    // Inherit basic public & private API methods.\r\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.basePublicApi);\r\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.basePrivateApi);\r\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.nonTraditionalBasePublicApi);\r\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.nonTraditionalBasePrivateApi);\r\n\r\n    // Define public & private API methods for this module.\r\n    qq.extend(qq.s3.FineUploaderBasic.prototype, {\r\n        getBucket: function(id) {\r\n            if (this._cannedBuckets[id] == null) {\r\n                return this._buckets[id];\r\n            }\r\n            return this._cannedBuckets[id];\r\n        },\r\n\r\n        /**\r\n         * @param id File ID\r\n         * @returns {*} Key name associated w/ the file, if one exists\r\n         */\r\n        getKey: function(id) {\r\n            /* jshint eqnull:true */\r\n            if (this._cannedKeys[id] == null) {\r\n                return this._handler.getThirdPartyFileId(id);\r\n            }\r\n\r\n            return this._cannedKeys[id];\r\n        },\r\n\r\n        /**\r\n         * Override the parent's reset function to cleanup various S3-related items.\r\n         */\r\n        reset: function() {\r\n            qq.FineUploaderBasic.prototype.reset.call(this);\r\n            this._failedSuccessRequestCallbacks = [];\r\n            this._buckets = {};\r\n            this._hosts = {};\r\n        },\r\n\r\n        setCredentials: function(credentials, ignoreEmpty) {\r\n            if (credentials && credentials.secretKey) {\r\n                if (!credentials.accessKey) {\r\n                    throw new qq.Error(\"Invalid credentials: no accessKey\");\r\n                }\r\n                else if (!credentials.expiration) {\r\n                    throw new qq.Error(\"Invalid credentials: no expiration\");\r\n                }\r\n                else {\r\n                    this._currentCredentials = qq.extend({}, credentials);\r\n\r\n                    // Ensure expiration is a `Date`.  If initially a string, assuming it is in ISO format.\r\n                    if (qq.isString(credentials.expiration)) {\r\n                        this._currentCredentials.expiration = new Date(credentials.expiration);\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            }\r\n            else if (!ignoreEmpty) {\r\n                throw new qq.Error(\"Invalid credentials parameter!\");\r\n            }\r\n            else {\r\n                this._currentCredentials = {};\r\n            }\r\n        },\r\n\r\n        setAcl: function(acl, id) {\r\n            this._aclStore.set(acl, id);\r\n        },\r\n\r\n        /**\r\n         * Ensures the parent's upload handler creator passes any additional S3-specific options to the handler as well\r\n         * as information required to instantiate the specific handler based on the current browser's capabilities.\r\n         *\r\n         * @returns {qq.UploadHandlerController}\r\n         * @private\r\n         */\r\n        _createUploadHandler: function() {\r\n            var self = this,\r\n                additionalOptions = {\r\n                    aclStore: this._aclStore,\r\n                    getBucket: qq.bind(this._determineBucket, this),\r\n                    getHost: qq.bind(this._determineHost, this),\r\n                    getKeyName: qq.bind(this._determineKeyName, this),\r\n                    iframeSupport: this._options.iframeSupport,\r\n                    objectProperties: this._options.objectProperties,\r\n                    signature: this._options.signature,\r\n                    clockDrift: this._options.request.clockDrift,\r\n                    // pass size limit validation values to include in the request so AWS enforces this server-side\r\n                    validation: {\r\n                        minSizeLimit: this._options.validation.minSizeLimit,\r\n                        maxSizeLimit: this._options.validation.sizeLimit\r\n                    }\r\n                };\r\n\r\n            // We assume HTTP if it is missing from the start of the endpoint string.\r\n            qq.override(this._endpointStore, function(super_) {\r\n                return {\r\n                    get: function(id) {\r\n                        var endpoint = super_.get(id);\r\n\r\n                        if (endpoint.indexOf(\"http\") < 0) {\r\n                            return \"http://\" + endpoint;\r\n                        }\r\n\r\n                        return endpoint;\r\n                    }\r\n                };\r\n            });\r\n\r\n            // Some param names should be lower case to avoid signature mismatches\r\n            qq.override(this._paramsStore, function(super_) {\r\n                return {\r\n                    get: function(id) {\r\n                        var oldParams = super_.get(id),\r\n                            modifiedParams = {};\r\n\r\n                        qq.each(oldParams, function(name, val) {\r\n                            var paramName = name;\r\n\r\n                            if (qq.indexOf(qq.s3.util.CASE_SENSITIVE_PARAM_NAMES, paramName) < 0) {\r\n                                paramName = paramName.toLowerCase();\r\n                            }\r\n\r\n                            modifiedParams[paramName] = qq.isFunction(val) ? val() : val;\r\n                        });\r\n\r\n                        return modifiedParams;\r\n                    }\r\n                };\r\n            });\r\n\r\n            additionalOptions.signature.credentialsProvider = {\r\n                get: function() {\r\n                    return self._currentCredentials;\r\n                },\r\n\r\n                onExpired: function() {\r\n                    var updateCredentials = new qq.Promise(),\r\n                        callbackRetVal = self._options.callbacks.onCredentialsExpired();\r\n\r\n                    if (qq.isGenericPromise(callbackRetVal)) {\r\n                        callbackRetVal.then(function(credentials) {\r\n                            try {\r\n                                self.setCredentials(credentials);\r\n                                updateCredentials.success();\r\n                            }\r\n                            catch (error) {\r\n                                self.log(\"Invalid credentials returned from onCredentialsExpired callback! (\" + error.message + \")\", \"error\");\r\n                                updateCredentials.failure(\"onCredentialsExpired did not return valid credentials.\");\r\n                            }\r\n                        }, function(errorMsg) {\r\n                            self.log(\"onCredentialsExpired callback indicated failure! (\" + errorMsg + \")\", \"error\");\r\n                            updateCredentials.failure(\"onCredentialsExpired callback failed.\");\r\n                        });\r\n                    }\r\n                    else {\r\n                        self.log(\"onCredentialsExpired callback did not return a promise!\", \"error\");\r\n                        updateCredentials.failure(\"Unexpected return value for onCredentialsExpired.\");\r\n                    }\r\n\r\n                    return updateCredentials;\r\n                }\r\n            };\r\n\r\n            return qq.FineUploaderBasic.prototype._createUploadHandler.call(this, additionalOptions, \"s3\");\r\n        },\r\n\r\n        _determineObjectPropertyValue: function(id, property) {\r\n            var maybe = this._options.objectProperties[property],\r\n                promise = new qq.Promise(),\r\n                self = this;\r\n\r\n            if (qq.isFunction(maybe)) {\r\n                maybe = maybe(id);\r\n                if (qq.isGenericPromise(maybe)) {\r\n                    promise = maybe;\r\n                }\r\n                else {\r\n                    promise.success(maybe);\r\n                }\r\n            }\r\n            else if (qq.isString(maybe)) {\r\n                promise.success(maybe);\r\n            }\r\n\r\n            promise.then(\r\n                function success(value) {\r\n                    self[\"_\" + property + \"s\"][id] = value;\r\n                },\r\n\r\n                function failure(errorMsg) {\r\n                    qq.log(\"Problem determining \" + property + \" for ID \" + id + \" (\" + errorMsg + \")\", \"error\");\r\n                }\r\n            );\r\n\r\n            return promise;\r\n        },\r\n\r\n        _determineBucket: function(id) {\r\n            return this._determineObjectPropertyValue(id, \"bucket\");\r\n        },\r\n\r\n        _determineHost: function(id) {\r\n            return this._determineObjectPropertyValue(id, \"host\");\r\n        },\r\n\r\n        /**\r\n         * Determine the file's key name and passes it to the caller via a promissory callback.  This also may\r\n         * delegate to an integrator-defined function that determines the file's key name on demand,\r\n         * which also may be promissory.\r\n         *\r\n         * @param id ID of the file\r\n         * @param filename Name of the file\r\n         * @returns {qq.Promise} A promise that will be fulfilled when the key name has been determined (and will be passed to the caller via the success callback).\r\n         * @private\r\n         */\r\n        _determineKeyName: function(id, filename) {\r\n            /*jshint -W015*/\r\n            var promise = new qq.Promise(),\r\n                keynameLogic = this._options.objectProperties.key,\r\n                extension = qq.getExtension(filename),\r\n                onGetKeynameFailure = promise.failure,\r\n                onGetKeynameSuccess = function(keyname, extension) {\r\n                    var keynameToUse = keyname;\r\n\r\n                    if (extension !== undefined) {\r\n                        keynameToUse += \".\" + extension;\r\n                    }\r\n\r\n                    promise.success(keynameToUse);\r\n                };\r\n\r\n            switch (keynameLogic) {\r\n                case \"uuid\":\r\n                    onGetKeynameSuccess(this.getUuid(id), extension);\r\n                    break;\r\n                case \"filename\":\r\n                    onGetKeynameSuccess(filename);\r\n                    break;\r\n                default:\r\n                    if (qq.isFunction(keynameLogic)) {\r\n                        this._handleKeynameFunction(keynameLogic, id, onGetKeynameSuccess, onGetKeynameFailure);\r\n                    }\r\n                    else {\r\n                        this.log(keynameLogic + \" is not a valid value for the s3.keyname option!\", \"error\");\r\n                        onGetKeynameFailure();\r\n                    }\r\n            }\r\n\r\n            return promise;\r\n        },\r\n\r\n        /**\r\n         * Called by the internal onUpload handler if the integrator has supplied a function to determine\r\n         * the file's key name.  The integrator's function may be promissory.  We also need to fulfill\r\n         * the promise contract associated with the caller as well.\r\n         *\r\n         * @param keynameFunc Integrator-supplied function that must be executed to determine the key name.  May be promissory.\r\n         * @param id ID of the associated file\r\n         * @param successCallback Invoke this if key name retrieval is successful, passing in the key name.\r\n         * @param failureCallback Invoke this if key name retrieval was unsuccessful.\r\n         * @private\r\n         */\r\n        _handleKeynameFunction: function(keynameFunc, id, successCallback, failureCallback) {\r\n            var self = this,\r\n                onSuccess = function(keyname) {\r\n                    successCallback(keyname);\r\n                },\r\n                onFailure = function(reason) {\r\n                    self.log(qq.format(\"Failed to retrieve key name for {}.  Reason: {}\", id, reason || \"null\"), \"error\");\r\n                    failureCallback(reason);\r\n                },\r\n                keyname = keynameFunc.call(this, id);\r\n\r\n            if (qq.isGenericPromise(keyname)) {\r\n                keyname.then(onSuccess, onFailure);\r\n            }\r\n            /*jshint -W116*/\r\n            else if (keyname == null) {\r\n                onFailure();\r\n            }\r\n            else {\r\n                onSuccess(keyname);\r\n            }\r\n        },\r\n\r\n        _getEndpointSpecificParams: function(id, response, maybeXhr) {\r\n            var params = {\r\n                key: this.getKey(id),\r\n                uuid: this.getUuid(id),\r\n                name: this.getName(id),\r\n                bucket: this.getBucket(id)\r\n            };\r\n\r\n            if (maybeXhr && maybeXhr.getResponseHeader(\"ETag\")) {\r\n                params.etag = maybeXhr.getResponseHeader(\"ETag\");\r\n            }\r\n            else if (response.etag) {\r\n                params.etag = response.etag;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        // Hooks into the base internal `_onSubmitDelete` to add key and bucket params to the delete file request.\r\n        _onSubmitDelete: function(id, onSuccessCallback) {\r\n            var additionalMandatedParams = {\r\n                key: this.getKey(id),\r\n                bucket: this.getBucket(id)\r\n            };\r\n\r\n            return qq.FineUploaderBasic.prototype._onSubmitDelete.call(this, id, onSuccessCallback, additionalMandatedParams);\r\n        },\r\n\r\n        _addCannedFile: function(sessionData) {\r\n            var id;\r\n\r\n            /* jshint eqnull:true */\r\n            if (sessionData.s3Key == null) {\r\n                throw new qq.Error(\"Did not find s3Key property in server session response.  This is required!\");\r\n            }\r\n            else {\r\n                id = qq.FineUploaderBasic.prototype._addCannedFile.apply(this, arguments);\r\n                this._cannedKeys[id] = sessionData.s3Key;\r\n                this._cannedBuckets[id] = sessionData.s3Bucket;\r\n            }\r\n\r\n            return id;\r\n        }\r\n    });\r\n}());\r\n","/* globals qq, CryptoJS */\r\n\r\n// IE 10 does not support Uint8ClampedArray. We don't need it, but CryptoJS attempts to reference it\r\n// inside a conditional via an instanceof check, which breaks S3 v4 signatures for chunked uploads.\r\nif (!window.Uint8ClampedArray) {\r\n    window.Uint8ClampedArray = function() {};\r\n}\r\n/**\r\n * Handles signature determination for HTML Form Upload requests and Multipart Uploader requests (via the S3 REST API).\r\n *\r\n * If the S3 requests are to be signed server side, this module will send a POST request to the server in an attempt\r\n * to solicit signatures for various S3-related requests.  This module also parses the response and attempts\r\n * to determine if the effort was successful.\r\n *\r\n * If the S3 requests are to be signed client-side, without the help of a server, this module will utilize CryptoJS to\r\n * sign the requests directly in the browser and send them off to S3.\r\n *\r\n * @param o Options associated with all such requests\r\n * @returns {{getSignature: Function}} API method used to initiate the signature request.\r\n * @constructor\r\n */\r\nqq.s3.RequestSigner = function(o) {\r\n    \"use strict\";\r\n\r\n    var requester,\r\n        thisSignatureRequester = this,\r\n        pendingSignatures = {},\r\n        options = {\r\n            expectingPolicy: false,\r\n            method: \"POST\",\r\n            signatureSpec: {\r\n                drift: 0,\r\n                credentialsProvider: {},\r\n                endpoint: null,\r\n                customHeaders: {},\r\n                version: 2\r\n            },\r\n            maxConnections: 3,\r\n            endpointStore: {},\r\n            paramsStore: {},\r\n            cors: {\r\n                expected: false,\r\n                sendCredentials: false\r\n            },\r\n            log: function(str, level) {}\r\n        },\r\n        credentialsProvider,\r\n\r\n        generateHeaders = function(signatureConstructor, signature, promise) {\r\n            var headers = signatureConstructor.getHeaders();\r\n\r\n            if (options.signatureSpec.version === 4) {\r\n                headers.Authorization = qq.s3.util.V4_ALGORITHM_PARAM_VALUE +\r\n                    \" Credential=\" + options.signatureSpec.credentialsProvider.get().accessKey + \"/\" +\r\n                    qq.s3.util.getCredentialsDate(signatureConstructor.getRequestDate()) + \"/\" +\r\n                    options.signatureSpec.region + \"/\" +\r\n                    \"s3/aws4_request,\" +\r\n                    \"SignedHeaders=\" + signatureConstructor.getSignedHeaders() + \",\" +\r\n                    \"Signature=\" + signature;\r\n            }\r\n            else {\r\n                headers.Authorization = \"AWS \" + options.signatureSpec.credentialsProvider.get().accessKey + \":\" + signature;\r\n            }\r\n\r\n            promise.success(headers, signatureConstructor.getEndOfUrl());\r\n        },\r\n\r\n        v2 = {\r\n            getStringToSign: function(signatureSpec) {\r\n                return qq.format(\"{}\\n{}\\n{}\\n\\n{}/{}/{}\",\r\n                    signatureSpec.method,\r\n                    signatureSpec.contentMd5 || \"\",\r\n                    signatureSpec.contentType || \"\",\r\n                    signatureSpec.headersStr || \"\\n\",\r\n                    signatureSpec.bucket,\r\n                    signatureSpec.endOfUrl);\r\n            },\r\n\r\n            signApiRequest: function(signatureConstructor, headersStr, signatureEffort) {\r\n                var headersWordArray = qq.CryptoJS.enc.Utf8.parse(headersStr),\r\n                    headersHmacSha1 = qq.CryptoJS.HmacSHA1(headersWordArray, credentialsProvider.get().secretKey),\r\n                    headersHmacSha1Base64 = qq.CryptoJS.enc.Base64.stringify(headersHmacSha1);\r\n\r\n                generateHeaders(signatureConstructor, headersHmacSha1Base64, signatureEffort);\r\n            },\r\n\r\n            signPolicy: function(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\r\n                var policyStr = JSON.stringify(policy),\r\n                    policyWordArray = qq.CryptoJS.enc.Utf8.parse(policyStr),\r\n                    base64Policy = qq.CryptoJS.enc.Base64.stringify(policyWordArray),\r\n                    policyHmacSha1 = qq.CryptoJS.HmacSHA1(base64Policy, credentialsProvider.get().secretKey),\r\n                    policyHmacSha1Base64 = qq.CryptoJS.enc.Base64.stringify(policyHmacSha1);\r\n\r\n                signatureEffort.success({\r\n                    policy: base64Policy,\r\n                    signature: policyHmacSha1Base64\r\n                }, updatedAccessKey, updatedSessionToken);\r\n            }\r\n        },\r\n\r\n        v4 = {\r\n            getCanonicalQueryString: function(endOfUri) {\r\n                var queryParamIdx = endOfUri.indexOf(\"?\"),\r\n                    canonicalQueryString = \"\",\r\n                    encodedQueryParams, encodedQueryParamNames, queryStrings;\r\n\r\n                if (queryParamIdx >= 0) {\r\n                    encodedQueryParams = {};\r\n                    queryStrings = endOfUri.substr(queryParamIdx + 1).split(\"&\");\r\n\r\n                    qq.each(queryStrings, function(idx, queryString) {\r\n                        var nameAndVal = queryString.split(\"=\"),\r\n                            paramVal = nameAndVal[1];\r\n\r\n                        if (paramVal == null) {\r\n                            paramVal = \"\";\r\n                        }\r\n\r\n                        encodedQueryParams[encodeURIComponent(nameAndVal[0])] = encodeURIComponent(paramVal);\r\n                    });\r\n\r\n                    encodedQueryParamNames = Object.keys(encodedQueryParams).sort();\r\n                    encodedQueryParamNames.forEach(function(encodedQueryParamName, idx) {\r\n                        canonicalQueryString += encodedQueryParamName + \"=\" + encodedQueryParams[encodedQueryParamName];\r\n                        if (idx < encodedQueryParamNames.length - 1) {\r\n                            canonicalQueryString += \"&\";\r\n                        }\r\n                    });\r\n                }\r\n\r\n                return canonicalQueryString;\r\n            },\r\n\r\n            getCanonicalRequest: function(signatureSpec) {\r\n                return qq.format(\"{}\\n{}\\n{}\\n{}\\n{}\\n{}\",\r\n                    signatureSpec.method,\r\n                    v4.getCanonicalUri(signatureSpec.endOfUrl),\r\n                    v4.getCanonicalQueryString(signatureSpec.endOfUrl),\r\n                    signatureSpec.headersStr || \"\\n\",\r\n                    v4.getSignedHeaders(signatureSpec.headerNames),\r\n                    signatureSpec.hashedContent);\r\n            },\r\n\r\n            getCanonicalUri: function(endOfUri) {\r\n                var path = endOfUri,\r\n                    queryParamIdx = endOfUri.indexOf(\"?\");\r\n\r\n                if (queryParamIdx > 0) {\r\n                    path = endOfUri.substr(0, queryParamIdx);\r\n                }\r\n                return \"/\" + path;\r\n            },\r\n\r\n            getEncodedHashedPayload: function(body) {\r\n                var promise = new qq.Promise(),\r\n                    reader;\r\n\r\n                if (qq.isBlob(body)) {\r\n                    // TODO hash blob in webworker if this becomes a notable perf issue\r\n                    reader = new FileReader();\r\n                    reader.onloadend = function(e) {\r\n                        if (e.target.readyState === FileReader.DONE) {\r\n                            if (e.target.error) {\r\n                                promise.failure(e.target.error);\r\n                            }\r\n                            else {\r\n                                var wordArray = qq.CryptoJS.lib.WordArray.create(e.target.result);\r\n                                promise.success(qq.CryptoJS.SHA256(wordArray).toString());\r\n                            }\r\n                        }\r\n                    };\r\n                    reader.readAsArrayBuffer(body);\r\n                }\r\n                else {\r\n                    body = body || \"\";\r\n                    promise.success(qq.CryptoJS.SHA256(body).toString());\r\n                }\r\n\r\n                return promise;\r\n            },\r\n\r\n            getScope: function(date, region) {\r\n                return qq.s3.util.getCredentialsDate(date) + \"/\" +\r\n                    region + \"/s3/aws4_request\";\r\n            },\r\n\r\n            getStringToSign: function(signatureSpec) {\r\n                var canonicalRequest = v4.getCanonicalRequest(signatureSpec),\r\n                    date = qq.s3.util.getV4PolicyDate(signatureSpec.date, signatureSpec.drift),\r\n                    hashedRequest = qq.CryptoJS.SHA256(canonicalRequest).toString(),\r\n                    scope = v4.getScope(signatureSpec.date, options.signatureSpec.region),\r\n                    stringToSignTemplate = \"AWS4-HMAC-SHA256\\n{}\\n{}\\n{}\";\r\n\r\n                return {\r\n                    hashed: qq.format(stringToSignTemplate, date, scope, hashedRequest),\r\n                    raw: qq.format(stringToSignTemplate, date, scope, canonicalRequest)\r\n                };\r\n            },\r\n\r\n            getSignedHeaders: function(headerNames) {\r\n                var signedHeaders = \"\";\r\n\r\n                headerNames.forEach(function(headerName, idx) {\r\n                    signedHeaders += headerName.toLowerCase();\r\n\r\n                    if (idx < headerNames.length - 1) {\r\n                        signedHeaders += \";\";\r\n                    }\r\n                });\r\n\r\n                return signedHeaders;\r\n            },\r\n\r\n            signApiRequest: function(signatureConstructor, headersStr, signatureEffort) {\r\n                var secretKey = credentialsProvider.get().secretKey,\r\n                    headersPattern = /.+\\n.+\\n(\\d+)\\/(.+)\\/s3\\/.+\\n(.+)/,\r\n                    matches = headersPattern.exec(headersStr),\r\n                    dateKey, dateRegionKey, dateRegionServiceKey, signingKey;\r\n\r\n                dateKey = qq.CryptoJS.HmacSHA256(matches[1], \"AWS4\" + secretKey);\r\n                dateRegionKey = qq.CryptoJS.HmacSHA256(matches[2], dateKey);\r\n                dateRegionServiceKey = qq.CryptoJS.HmacSHA256(\"s3\", dateRegionKey);\r\n                signingKey = qq.CryptoJS.HmacSHA256(\"aws4_request\", dateRegionServiceKey);\r\n\r\n                generateHeaders(signatureConstructor, qq.CryptoJS.HmacSHA256(headersStr, signingKey), signatureEffort);\r\n            },\r\n\r\n            signPolicy: function(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\r\n                var policyStr = JSON.stringify(policy),\r\n                    policyWordArray = qq.CryptoJS.enc.Utf8.parse(policyStr),\r\n                    base64Policy = qq.CryptoJS.enc.Base64.stringify(policyWordArray),\r\n                    secretKey = credentialsProvider.get().secretKey,\r\n                    credentialPattern = /.+\\/(.+)\\/(.+)\\/s3\\/aws4_request/,\r\n                    credentialCondition = (function() {\r\n                        var credential = null;\r\n                        qq.each(policy.conditions, function(key, condition) {\r\n                            var val = condition[\"x-amz-credential\"];\r\n                            if (val) {\r\n                                credential = val;\r\n                                return false;\r\n                            }\r\n                        });\r\n                        return credential;\r\n                    }()),\r\n                    matches, dateKey, dateRegionKey, dateRegionServiceKey, signingKey;\r\n\r\n                matches = credentialPattern.exec(credentialCondition);\r\n                dateKey = qq.CryptoJS.HmacSHA256(matches[1], \"AWS4\" + secretKey);\r\n                dateRegionKey = qq.CryptoJS.HmacSHA256(matches[2], dateKey);\r\n                dateRegionServiceKey = qq.CryptoJS.HmacSHA256(\"s3\", dateRegionKey);\r\n                signingKey = qq.CryptoJS.HmacSHA256(\"aws4_request\", dateRegionServiceKey);\r\n\r\n                signatureEffort.success({\r\n                    policy: base64Policy,\r\n                    signature: qq.CryptoJS.HmacSHA256(base64Policy, signingKey).toString()\r\n                }, updatedAccessKey, updatedSessionToken);\r\n            }\r\n        };\r\n\r\n    qq.extend(options, o, true);\r\n    credentialsProvider = options.signatureSpec.credentialsProvider;\r\n\r\n    function handleSignatureReceived(id, xhrOrXdr, isError) {\r\n        var responseJson = xhrOrXdr.responseText,\r\n            pendingSignatureData = pendingSignatures[id],\r\n            promise = pendingSignatureData.promise,\r\n            signatureConstructor = pendingSignatureData.signatureConstructor,\r\n            errorMessage, response;\r\n\r\n        delete pendingSignatures[id];\r\n\r\n        // Attempt to parse what we would expect to be a JSON response\r\n        if (responseJson) {\r\n            try {\r\n                response = qq.parseJson(responseJson);\r\n            }\r\n            catch (error) {\r\n                options.log(\"Error attempting to parse signature response: \" + error, \"error\");\r\n            }\r\n        }\r\n\r\n        // If the response is parsable and contains an `error` property, use it as the error message\r\n        if (response && response.error) {\r\n            isError = true;\r\n            errorMessage = response.error;\r\n        }\r\n        // If we have received a parsable response, and it has an `invalid` property,\r\n        // the policy document or request headers may have been tampered with client-side.\r\n        else if (response && response.invalid) {\r\n            isError = true;\r\n            errorMessage = \"Invalid policy document or request headers!\";\r\n        }\r\n        // Make sure the response contains policy & signature properties\r\n        else if (response) {\r\n            if (options.expectingPolicy && !response.policy) {\r\n                isError = true;\r\n                errorMessage = \"Response does not include the base64 encoded policy!\";\r\n            }\r\n            else if (!response.signature) {\r\n                isError = true;\r\n                errorMessage = \"Response does not include the signature!\";\r\n            }\r\n        }\r\n        // Something unknown went wrong\r\n        else {\r\n            isError = true;\r\n            errorMessage = \"Received an empty or invalid response from the server!\";\r\n        }\r\n\r\n        if (isError) {\r\n            if (errorMessage) {\r\n                options.log(errorMessage, \"error\");\r\n            }\r\n\r\n            promise.failure(errorMessage);\r\n        }\r\n        else if (signatureConstructor) {\r\n            generateHeaders(signatureConstructor, response.signature, promise);\r\n        }\r\n        else {\r\n            promise.success(response);\r\n        }\r\n    }\r\n\r\n    function getStringToSignArtifacts(id, version, requestInfo) {\r\n        var promise = new qq.Promise(),\r\n            method = \"POST\",\r\n            headerNames = [],\r\n            headersStr = \"\",\r\n            now = new Date(),\r\n            endOfUrl, signatureSpec, toSign,\r\n\r\n            generateStringToSign = function(requestInfo) {\r\n                var contentMd5,\r\n                    headerIndexesToRemove = [];\r\n\r\n                qq.each(requestInfo.headers, function(name) {\r\n                    headerNames.push(name);\r\n                });\r\n                headerNames.sort();\r\n\r\n                qq.each(headerNames, function(idx, headerName) {\r\n                    if (qq.indexOf(qq.s3.util.UNSIGNABLE_REST_HEADER_NAMES, headerName) < 0) {\r\n                        headersStr += headerName.toLowerCase() + \":\" + requestInfo.headers[headerName].trim() + \"\\n\";\r\n                    }\r\n                    else if (headerName === \"Content-MD5\") {\r\n                        contentMd5 = requestInfo.headers[headerName];\r\n                    }\r\n                    else {\r\n                        headerIndexesToRemove.unshift(idx);\r\n                    }\r\n                });\r\n\r\n                qq.each(headerIndexesToRemove, function(idx, headerIdx) {\r\n                    headerNames.splice(headerIdx, 1);\r\n                });\r\n\r\n                signatureSpec = {\r\n                    bucket: requestInfo.bucket,\r\n                    contentMd5: contentMd5,\r\n                    contentType: requestInfo.contentType,\r\n                    date: now,\r\n                    drift: options.signatureSpec.drift,\r\n                    endOfUrl: endOfUrl,\r\n                    hashedContent: requestInfo.hashedContent,\r\n                    headerNames: headerNames,\r\n                    headersStr: headersStr,\r\n                    method: method\r\n                };\r\n\r\n                toSign = version === 2 ? v2.getStringToSign(signatureSpec) : v4.getStringToSign(signatureSpec);\r\n\r\n                return {\r\n                    date: now,\r\n                    endOfUrl: endOfUrl,\r\n                    signedHeaders: version === 4 ? v4.getSignedHeaders(signatureSpec.headerNames) : null,\r\n                    toSign: version === 4 ? toSign.hashed : toSign,\r\n                    toSignRaw: version === 4 ? toSign.raw : toSign\r\n                };\r\n            };\r\n\r\n        /*jshint indent:false */\r\n        switch (requestInfo.type) {\r\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_ABORT:\r\n                method = \"DELETE\";\r\n                endOfUrl = qq.format(\"uploadId={}\", requestInfo.uploadId);\r\n                break;\r\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_INITIATE:\r\n                endOfUrl = \"uploads\";\r\n                break;\r\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_COMPLETE:\r\n                endOfUrl = qq.format(\"uploadId={}\", requestInfo.uploadId);\r\n                break;\r\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_UPLOAD:\r\n                method = \"PUT\";\r\n                endOfUrl = qq.format(\"partNumber={}&uploadId={}\", requestInfo.partNum, requestInfo.uploadId);\r\n                break;\r\n        }\r\n\r\n        endOfUrl = requestInfo.key + \"?\" + endOfUrl;\r\n\r\n        if (version === 4) {\r\n            v4.getEncodedHashedPayload(requestInfo.content).then(function(hashedContent) {\r\n                requestInfo.headers[\"x-amz-content-sha256\"] = hashedContent;\r\n                requestInfo.headers.Host = requestInfo.host;\r\n                requestInfo.headers[\"x-amz-date\"] = qq.s3.util.getV4PolicyDate(now, options.signatureSpec.drift);\r\n                requestInfo.hashedContent = hashedContent;\r\n\r\n                promise.success(generateStringToSign(requestInfo));\r\n            }, function (err) {\r\n                promise.failure(err);\r\n            });\r\n        }\r\n        else {\r\n            promise.success(generateStringToSign(requestInfo));\r\n        }\r\n\r\n        return promise;\r\n    }\r\n\r\n    function determineSignatureClientSide(id, toBeSigned, signatureEffort, updatedAccessKey, updatedSessionToken) {\r\n        var updatedHeaders;\r\n\r\n        // REST API request\r\n        if (toBeSigned.signatureConstructor) {\r\n            if (updatedSessionToken) {\r\n                updatedHeaders = toBeSigned.signatureConstructor.getHeaders();\r\n                updatedHeaders[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = updatedSessionToken;\r\n                toBeSigned.signatureConstructor.withHeaders(updatedHeaders);\r\n            }\r\n\r\n            toBeSigned.signatureConstructor.getToSign(id).then(function(signatureArtifacts) {\r\n                signApiRequest(toBeSigned.signatureConstructor, signatureArtifacts.stringToSign, signatureEffort);\r\n            }, function (err) {\r\n                signatureEffort.failure(err);\r\n            });\r\n        }\r\n        // Form upload (w/ policy document)\r\n        else {\r\n            updatedSessionToken && qq.s3.util.refreshPolicyCredentials(toBeSigned, updatedSessionToken);\r\n            signPolicy(toBeSigned, signatureEffort, updatedAccessKey, updatedSessionToken);\r\n        }\r\n    }\r\n\r\n    function signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\r\n        if (options.signatureSpec.version === 4) {\r\n            v4.signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken);\r\n        }\r\n        else {\r\n            v2.signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken);\r\n        }\r\n    }\r\n\r\n    function signApiRequest(signatureConstructor, headersStr, signatureEffort) {\r\n        if (options.signatureSpec.version === 4) {\r\n            v4.signApiRequest(signatureConstructor, headersStr, signatureEffort);\r\n        }\r\n        else {\r\n            v2.signApiRequest(signatureConstructor, headersStr, signatureEffort);\r\n        }\r\n    }\r\n\r\n    requester = qq.extend(this, new qq.AjaxRequester({\r\n        acceptHeader: \"application/json\",\r\n        method: options.method,\r\n        contentType: \"application/json; charset=utf-8\",\r\n        endpointStore: {\r\n            get: function() {\r\n                return options.signatureSpec.endpoint;\r\n            }\r\n        },\r\n        paramsStore: options.paramsStore,\r\n        maxConnections: options.maxConnections,\r\n        customHeaders: options.signatureSpec.customHeaders,\r\n        log: options.log,\r\n        onComplete: handleSignatureReceived,\r\n        cors: options.cors\r\n    }));\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * On success, an object containing the parsed JSON response will be passed into the success handler if the\r\n         * request succeeds.  Otherwise an error message will be passed into the failure method.\r\n         *\r\n         * @param id File ID.\r\n         * @param toBeSigned an Object that holds the item(s) to be signed\r\n         * @returns {qq.Promise} A promise that is fulfilled when the response has been received.\r\n         */\r\n        getSignature: function(id, toBeSigned) {\r\n            var params = toBeSigned,\r\n                signatureConstructor = toBeSigned.signatureConstructor,\r\n                signatureEffort = new qq.Promise(),\r\n                queryParams;\r\n\r\n            if (options.signatureSpec.version === 4) {\r\n                queryParams = {v4: true};\r\n            }\r\n\r\n            if (credentialsProvider.get().secretKey && qq.CryptoJS) {\r\n                if (credentialsProvider.get().expiration.getTime() > Date.now()) {\r\n                    determineSignatureClientSide(id, toBeSigned, signatureEffort);\r\n                }\r\n                // If credentials are expired, ask for new ones before attempting to sign request\r\n                else {\r\n                    credentialsProvider.onExpired().then(function() {\r\n                        determineSignatureClientSide(id, toBeSigned,\r\n                            signatureEffort,\r\n                            credentialsProvider.get().accessKey,\r\n                            credentialsProvider.get().sessionToken);\r\n                    }, function(errorMsg) {\r\n                        options.log(\"Attempt to update expired credentials apparently failed! Unable to sign request.  \", \"error\");\r\n                        signatureEffort.failure(\"Unable to sign request - expired credentials.\");\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                options.log(\"Submitting S3 signature request for \" + id);\r\n\r\n                if (signatureConstructor) {\r\n                    signatureConstructor.getToSign(id).then(function(signatureArtifacts) {\r\n                        params = {headers: signatureArtifacts.stringToSignRaw};\r\n                        requester.initTransport(id)\r\n                            .withParams(params)\r\n                            .withQueryParams(queryParams)\r\n                            .send();\r\n                    }, function (err) {\r\n                        options.log(\"Failed to construct signature. \", \"error\");\r\n                        signatureEffort.failure(\"Failed to construct signature.\");\r\n                    });\r\n                }\r\n                else {\r\n                    requester.initTransport(id)\r\n                        .withParams(params)\r\n                        .withQueryParams(queryParams)\r\n                        .send();\r\n                }\r\n\r\n                pendingSignatures[id] = {\r\n                    promise: signatureEffort,\r\n                    signatureConstructor: signatureConstructor\r\n                };\r\n            }\r\n\r\n            return signatureEffort;\r\n        },\r\n\r\n        constructStringToSign: function(type, bucket, host, key) {\r\n            var headers = {},\r\n                uploadId, content, contentType, partNum, artifacts;\r\n\r\n            return {\r\n                withHeaders: function(theHeaders) {\r\n                    headers = theHeaders;\r\n                    return this;\r\n                },\r\n\r\n                withUploadId: function(theUploadId) {\r\n                    uploadId = theUploadId;\r\n                    return this;\r\n                },\r\n\r\n                withContent: function(theContent) {\r\n                    content = theContent;\r\n                    return this;\r\n                },\r\n\r\n                withContentType: function(theContentType) {\r\n                    contentType = theContentType;\r\n                    return this;\r\n                },\r\n\r\n                withPartNum: function(thePartNum) {\r\n                    partNum = thePartNum;\r\n                    return this;\r\n                },\r\n\r\n                getToSign: function(id) {\r\n                    var sessionToken = credentialsProvider.get().sessionToken,\r\n                        promise = new qq.Promise(),\r\n                        adjustedDate = new Date(Date.now() + options.signatureSpec.drift);\r\n\r\n                    headers[\"x-amz-date\"] = adjustedDate.toUTCString();\r\n\r\n                    if (sessionToken) {\r\n                        headers[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\r\n                    }\r\n\r\n                    getStringToSignArtifacts(id, options.signatureSpec.version, {\r\n                        bucket: bucket,\r\n                        content: content,\r\n                        contentType: contentType,\r\n                        headers: headers,\r\n                        host: host,\r\n                        key: key,\r\n                        partNum: partNum,\r\n                        type: type,\r\n                        uploadId: uploadId\r\n                    }).then(function(_artifacts_) {\r\n                        artifacts = _artifacts_;\r\n                        promise.success({\r\n                            headers: (function() {\r\n                                if (contentType) {\r\n                                    headers[\"Content-Type\"] = contentType;\r\n                                }\r\n\r\n                                delete headers.Host; // we don't want this to be set on the XHR-initiated request\r\n                                return headers;\r\n                            }()),\r\n                            date: artifacts.date,\r\n                            endOfUrl: artifacts.endOfUrl,\r\n                            signedHeaders: artifacts.signedHeaders,\r\n                            stringToSign: artifacts.toSign,\r\n                            stringToSignRaw: artifacts.toSignRaw\r\n                        });\r\n                    }, function (err) {\r\n                        promise.failure(err);\r\n                    });\r\n\r\n                    return promise;\r\n                },\r\n\r\n                getHeaders: function() {\r\n                    return qq.extend({}, headers);\r\n                },\r\n\r\n                getEndOfUrl: function() {\r\n                    return artifacts && artifacts.endOfUrl;\r\n                },\r\n\r\n                getRequestDate: function() {\r\n                    return artifacts && artifacts.date;\r\n                },\r\n\r\n                getSignedHeaders: function() {\r\n                    return artifacts && artifacts.signedHeaders;\r\n                }\r\n            };\r\n        }\r\n    });\r\n};\r\n\r\nqq.s3.RequestSigner.prototype.REQUEST_TYPE = {\r\n    MULTIPART_INITIATE: \"multipart_initiate\",\r\n    MULTIPART_COMPLETE: \"multipart_complete\",\r\n    MULTIPART_ABORT: \"multipart_abort\",\r\n    MULTIPART_UPLOAD: \"multipart_upload\"\r\n};\r\n","/*globals qq, XMLHttpRequest*/\r\n/**\r\n * Sends a POST request to the server to notify it of a successful upload to an endpoint.  The server is expected to indicate success\r\n * or failure via the response status.  Specific information about the failure can be passed from the server via an `error`\r\n * property (by default) in an \"application/json\" response.\r\n *\r\n * @param o Options associated with all requests.\r\n * @constructor\r\n */\r\nqq.UploadSuccessAjaxRequester = function(o) {\r\n    \"use strict\";\r\n\r\n    var requester,\r\n        pendingRequests = [],\r\n        options = {\r\n            method: \"POST\",\r\n            endpoint: null,\r\n            maxConnections: 3,\r\n            customHeaders: {},\r\n            paramsStore: {},\r\n            cors: {\r\n                expected: false,\r\n                sendCredentials: false\r\n            },\r\n            log: function(str, level) {}\r\n        };\r\n\r\n    qq.extend(options, o);\r\n\r\n    function handleSuccessResponse(id, xhrOrXdr, isError) {\r\n        var promise = pendingRequests[id],\r\n            responseJson = xhrOrXdr.responseText,\r\n            successIndicator = {success: true},\r\n            failureIndicator = {success: false},\r\n            parsedResponse;\r\n\r\n        delete pendingRequests[id];\r\n\r\n        options.log(qq.format(\"Received the following response body to an upload success request for id {}: {}\", id, responseJson));\r\n\r\n        try {\r\n            parsedResponse = qq.parseJson(responseJson);\r\n\r\n            // If this is a cross-origin request, the server may return a 200 response w/ error or success properties\r\n            // in order to ensure any specific error message is picked up by Fine Uploader for all browsers,\r\n            // since XDomainRequest (used in IE9 and IE8) doesn't give you access to the\r\n            // response body for an \"error\" response.\r\n            if (isError || (parsedResponse && (parsedResponse.error || parsedResponse.success === false))) {\r\n                options.log(\"Upload success request was rejected by the server.\", \"error\");\r\n                promise.failure(qq.extend(parsedResponse, failureIndicator));\r\n            }\r\n            else {\r\n                options.log(\"Upload success was acknowledged by the server.\");\r\n                promise.success(qq.extend(parsedResponse, successIndicator));\r\n            }\r\n        }\r\n        catch (error) {\r\n            // This will be executed if a JSON response is not present.  This is not mandatory, so account for this properly.\r\n            if (isError) {\r\n                options.log(qq.format(\"Your server indicated failure in its upload success request response for id {}!\", id), \"error\");\r\n                promise.failure(failureIndicator);\r\n            }\r\n            else {\r\n                options.log(\"Upload success was acknowledged by the server.\");\r\n                promise.success(successIndicator);\r\n            }\r\n        }\r\n    }\r\n\r\n    requester = qq.extend(this, new qq.AjaxRequester({\r\n        acceptHeader: \"application/json\",\r\n        method: options.method,\r\n        endpointStore: {\r\n            get: function() {\r\n                return options.endpoint;\r\n            }\r\n        },\r\n        paramsStore: options.paramsStore,\r\n        maxConnections: options.maxConnections,\r\n        customHeaders: options.customHeaders,\r\n        log: options.log,\r\n        onComplete: handleSuccessResponse,\r\n        cors: options.cors\r\n    }));\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Sends a request to the server, notifying it that a recently submitted file was successfully sent.\r\n         *\r\n         * @param id ID of the associated file\r\n         * @param spec `Object` with the properties that correspond to important values that we want to\r\n         * send to the server with this request.\r\n         * @returns {qq.Promise} A promise to be fulfilled when the response has been received and parsed.  The parsed\r\n         * payload of the response will be passed into the `failure` or `success` promise method.\r\n         */\r\n        sendSuccessRequest: function(id, spec) {\r\n            var promise = new qq.Promise();\r\n\r\n            options.log(\"Submitting upload success request/notification for \" + id);\r\n\r\n            requester.initTransport(id)\r\n                .withParams(spec)\r\n                .send();\r\n\r\n            pendingRequests[id] = promise;\r\n\r\n            return promise;\r\n        }\r\n    });\r\n};\r\n","/*globals qq*/\r\n/**\r\n * Ajax requester used to send an [\"Initiate Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadInitiate.html)\r\n * request to S3 via the REST API.\r\n *\r\n * @param o Options from the caller - will override the defaults.\r\n * @constructor\r\n */\r\nqq.s3.InitiateMultipartAjaxRequester = function(o) {\r\n    \"use strict\";\r\n\r\n    var requester,\r\n        pendingInitiateRequests = {},\r\n        options = {\r\n            filenameParam: \"qqfilename\",\r\n            method: \"POST\",\r\n            endpointStore: null,\r\n            paramsStore: null,\r\n            signatureSpec: null,\r\n            aclStore: null,\r\n            reducedRedundancy: false,\r\n            serverSideEncryption: false,\r\n            maxConnections: 3,\r\n            getContentType: function(id) {},\r\n            getBucket: function(id) {},\r\n            getHost: function(id) {},\r\n            getKey: function(id) {},\r\n            getName: function(id) {},\r\n            log: function(str, level) {}\r\n        },\r\n        getSignatureAjaxRequester;\r\n\r\n    qq.extend(options, o);\r\n\r\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\r\n        endpointStore: options.endpointStore,\r\n        signatureSpec: options.signatureSpec,\r\n        cors: options.cors,\r\n        log: options.log\r\n    });\r\n\r\n    /**\r\n     * Determine all headers for the \"Initiate MPU\" request, including the \"Authorization\" header, which must be determined\r\n     * by the local server.  This is a promissory function.  If the server responds with a signature, the headers\r\n     * (including the Authorization header) will be passed into the success method of the promise.  Otherwise, the failure\r\n     * method on the promise will be called.\r\n     *\r\n     * @param id Associated file ID\r\n     * @returns {qq.Promise}\r\n     */\r\n    function getHeaders(id) {\r\n        var bucket = options.getBucket(id),\r\n            host = options.getHost(id),\r\n            headers = {},\r\n            promise = new qq.Promise(),\r\n            key = options.getKey(id),\r\n            signatureConstructor;\r\n\r\n        headers[\"x-amz-acl\"] = options.aclStore.get(id);\r\n\r\n        if (options.reducedRedundancy) {\r\n            headers[qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\r\n        }\r\n\r\n        if (options.serverSideEncryption) {\r\n            headers[qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\r\n        }\r\n\r\n        headers[qq.s3.util.AWS_PARAM_PREFIX + options.filenameParam] = encodeURIComponent(options.getName(id));\r\n\r\n        qq.each(options.paramsStore.get(id), function(name, val) {\r\n            if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, name) >= 0) {\r\n                headers[name] = val;\r\n            }\r\n            else {\r\n                headers[qq.s3.util.AWS_PARAM_PREFIX + name] = encodeURIComponent(val);\r\n            }\r\n        });\r\n\r\n        signatureConstructor = getSignatureAjaxRequester.constructStringToSign\r\n            (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_INITIATE, bucket, host, key)\r\n            .withContentType(options.getContentType(id))\r\n            .withHeaders(headers);\r\n\r\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\r\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\r\n\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\r\n     * \"Initiate MPU\" request has been a success or not.\r\n     *\r\n     * @param id ID associated with the file.\r\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\r\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\r\n     */\r\n    function handleInitiateRequestComplete(id, xhr, isError) {\r\n        var promise = pendingInitiateRequests[id],\r\n            domParser = new DOMParser(),\r\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\r\n            uploadIdElements, messageElements, uploadId, errorMessage, status;\r\n\r\n        delete pendingInitiateRequests[id];\r\n\r\n        // The base ajax requester may declare the request to be a failure based on status code.\r\n        if (isError) {\r\n            status = xhr.status;\r\n\r\n            messageElements = responseDoc.getElementsByTagName(\"Message\");\r\n            if (messageElements.length > 0) {\r\n                errorMessage = messageElements[0].textContent;\r\n            }\r\n        }\r\n        // If the base ajax requester has not declared this a failure, make sure we can retrieve the uploadId from the response.\r\n        else {\r\n            uploadIdElements = responseDoc.getElementsByTagName(\"UploadId\");\r\n            if (uploadIdElements.length > 0) {\r\n                uploadId = uploadIdElements[0].textContent;\r\n            }\r\n            else {\r\n                errorMessage = \"Upload ID missing from request\";\r\n            }\r\n        }\r\n\r\n        // Either fail the promise (passing a descriptive error message) or declare it a success (passing the upload ID)\r\n        if (uploadId === undefined) {\r\n            if (errorMessage) {\r\n                options.log(qq.format(\"Specific problem detected initiating multipart upload request for {}: '{}'.\", id, errorMessage), \"error\");\r\n            }\r\n            else {\r\n                options.log(qq.format(\"Unexplained error with initiate multipart upload request for {}.  Status code {}.\", id, status), \"error\");\r\n            }\r\n\r\n            promise.failure(\"Problem initiating upload request.\", xhr);\r\n        }\r\n        else {\r\n            options.log(qq.format(\"Initiate multipart upload request successful for {}.  Upload ID is {}\", id, uploadId));\r\n            promise.success(uploadId, xhr);\r\n        }\r\n    }\r\n\r\n    requester = qq.extend(this, new qq.AjaxRequester({\r\n        method: options.method,\r\n        contentType: null,\r\n        endpointStore: options.endpointStore,\r\n        maxConnections: options.maxConnections,\r\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\r\n        log: options.log,\r\n        onComplete: handleInitiateRequestComplete,\r\n        successfulResponseCodes: {\r\n            POST: [200]\r\n        }\r\n    }));\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Sends the \"Initiate MPU\" request to AWS via the REST API.  First, though, we must get a signature from the\r\n         * local server for the request.  If all is successful, the uploadId from AWS will be passed into the promise's\r\n         * success handler. Otherwise, an error message will ultimately be passed into the failure method.\r\n         *\r\n         * @param id The ID associated with the file\r\n         * @returns {qq.Promise}\r\n         */\r\n        send: function(id) {\r\n            var promise = new qq.Promise();\r\n\r\n            getHeaders(id).then(function(headers, endOfUrl) {\r\n                options.log(\"Submitting S3 initiate multipart upload request for \" + id);\r\n\r\n                pendingInitiateRequests[id] = promise;\r\n                requester.initTransport(id)\r\n                    .withPath(endOfUrl)\r\n                    .withHeaders(headers)\r\n                    .send();\r\n            }, promise.failure);\r\n\r\n            return promise;\r\n        }\r\n    });\r\n};\r\n","/*globals qq*/\r\n/**\r\n * Ajax requester used to send an [\"Complete Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadComplete.html)\r\n * request to S3 via the REST API.\r\n *\r\n * @param o Options passed by the creator, to overwrite any default option values.\r\n * @constructor\r\n */\r\nqq.s3.CompleteMultipartAjaxRequester = function(o) {\r\n    \"use strict\";\r\n\r\n    var requester,\r\n        pendingCompleteRequests = {},\r\n        options = {\r\n            method: \"POST\",\r\n            contentType: \"text/xml\",\r\n            endpointStore: null,\r\n            signatureSpec: null,\r\n            maxConnections: 3,\r\n            getBucket: function(id) {},\r\n            getHost: function(id) {},\r\n            getKey: function(id) {},\r\n            log: function(str, level) {}\r\n        },\r\n        getSignatureAjaxRequester;\r\n\r\n    qq.extend(options, o);\r\n\r\n    // Transport for requesting signatures (for the \"Complete\" requests) from the local server\r\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\r\n        endpointStore: options.endpointStore,\r\n        signatureSpec: options.signatureSpec,\r\n        cors: options.cors,\r\n        log: options.log\r\n    });\r\n\r\n    /**\r\n     * Attach all required headers (including Authorization) to the \"Complete\" request.  This is a promissory function\r\n     * that will fulfill the associated promise once all headers have been attached or when an error has occurred that\r\n     * prevents headers from being attached.\r\n     *\r\n     * @returns {qq.Promise}\r\n     */\r\n    function getHeaders(id, uploadId, body) {\r\n        var headers = {},\r\n            promise = new qq.Promise(),\r\n            bucket = options.getBucket(id),\r\n            host = options.getHost(id),\r\n            signatureConstructor = getSignatureAjaxRequester.constructStringToSign\r\n                (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_COMPLETE, bucket, host, options.getKey(id))\r\n                .withUploadId(uploadId)\r\n                .withContent(body)\r\n                .withContentType(\"application/xml; charset=UTF-8\");\r\n\r\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\r\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\r\n\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\r\n     * \"Complete MPU\" request has been a success or not.\r\n     *\r\n     * @param id ID associated with the file.\r\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\r\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\r\n     */\r\n    function handleCompleteRequestComplete(id, xhr, isError) {\r\n        var promise = pendingCompleteRequests[id],\r\n            domParser = new DOMParser(),\r\n            bucket = options.getBucket(id),\r\n            key = options.getKey(id),\r\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\r\n            bucketEls = responseDoc.getElementsByTagName(\"Bucket\"),\r\n            keyEls = responseDoc.getElementsByTagName(\"Key\");\r\n\r\n        delete pendingCompleteRequests[id];\r\n\r\n        options.log(qq.format(\"Complete response status {}, body = {}\", xhr.status, xhr.responseText));\r\n\r\n        // If the base requester has determine this a failure, give up.\r\n        if (isError) {\r\n            options.log(qq.format(\"Complete Multipart Upload request for {} failed with status {}.\", id, xhr.status), \"error\");\r\n        }\r\n        else {\r\n            // Make sure the correct bucket and key has been specified in the XML response from AWS.\r\n            if (bucketEls.length && keyEls.length) {\r\n                if (bucketEls[0].textContent !== bucket) {\r\n                    isError = true;\r\n                    options.log(qq.format(\"Wrong bucket in response to Complete Multipart Upload request for {}.\", id), \"error\");\r\n                }\r\n\r\n                // TODO Compare key name from response w/ expected key name if AWS ever fixes the encoding of key names in this response.\r\n            }\r\n            else {\r\n                isError = true;\r\n                options.log(qq.format(\"Missing bucket and/or key in response to Complete Multipart Upload request for {}.\", id), \"error\");\r\n            }\r\n        }\r\n\r\n        if (isError) {\r\n            promise.failure(\"Problem combining the file parts!\", xhr);\r\n        }\r\n        else {\r\n            promise.success({}, xhr);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param etagEntries Array of objects containing `etag` values and their associated `part` numbers.\r\n     * @returns {string} XML string containing the body to send with the \"Complete\" request\r\n     */\r\n    function getCompleteRequestBody(etagEntries) {\r\n        var doc = document.implementation.createDocument(null, \"CompleteMultipartUpload\", null);\r\n\r\n        // The entries MUST be sorted by part number, per the AWS API spec.\r\n        etagEntries.sort(function(a, b) {\r\n            return a.part - b.part;\r\n        });\r\n\r\n        // Construct an XML document for each pair of etag/part values that correspond to part uploads.\r\n        qq.each(etagEntries, function(idx, etagEntry) {\r\n            var part = etagEntry.part,\r\n                etag = etagEntry.etag,\r\n                partEl = doc.createElement(\"Part\"),\r\n                partNumEl = doc.createElement(\"PartNumber\"),\r\n                partNumTextEl = doc.createTextNode(part),\r\n                etagTextEl = doc.createTextNode(etag),\r\n                etagEl = doc.createElement(\"ETag\");\r\n\r\n            etagEl.appendChild(etagTextEl);\r\n            partNumEl.appendChild(partNumTextEl);\r\n            partEl.appendChild(partNumEl);\r\n            partEl.appendChild(etagEl);\r\n            qq(doc).children()[0].appendChild(partEl);\r\n        });\r\n\r\n        // Turn the resulting XML document into a string fit for transport.\r\n        return new XMLSerializer().serializeToString(doc);\r\n    }\r\n\r\n    requester = qq.extend(this, new qq.AjaxRequester({\r\n        method: options.method,\r\n        contentType: \"application/xml; charset=UTF-8\",\r\n        endpointStore: options.endpointStore,\r\n        maxConnections: options.maxConnections,\r\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\r\n        log: options.log,\r\n        onComplete: handleCompleteRequestComplete,\r\n        successfulResponseCodes: {\r\n            POST: [200]\r\n        }\r\n    }));\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Sends the \"Complete\" request and fulfills the returned promise when the success of this request is known.\r\n         *\r\n         * @param id ID associated with the file.\r\n         * @param uploadId AWS uploadId for this file\r\n         * @param etagEntries Array of objects containing `etag` values and their associated `part` numbers.\r\n         * @returns {qq.Promise}\r\n         */\r\n        send: function(id, uploadId, etagEntries) {\r\n            var promise = new qq.Promise(),\r\n                body = getCompleteRequestBody(etagEntries);\r\n\r\n            getHeaders(id, uploadId, body).then(function(headers, endOfUrl) {\r\n                options.log(\"Submitting S3 complete multipart upload request for \" + id);\r\n\r\n                pendingCompleteRequests[id] = promise;\r\n                delete headers[\"Content-Type\"];\r\n\r\n                requester.initTransport(id)\r\n                    .withPath(endOfUrl)\r\n                    .withHeaders(headers)\r\n                    .withPayload(body)\r\n                    .send();\r\n            }, promise.failure);\r\n\r\n            return promise;\r\n        }\r\n    });\r\n};\r\n","/*globals qq */\r\n/**\r\n * Ajax requester used to send an [\"Abort Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadAbort.html)\r\n * request to S3 via the REST API.\r\n\r\n * @param o\r\n * @constructor\r\n */\r\nqq.s3.AbortMultipartAjaxRequester = function(o) {\r\n    \"use strict\";\r\n\r\n    var requester,\r\n        options = {\r\n            method: \"DELETE\",\r\n            endpointStore: null,\r\n            signatureSpec: null,\r\n            maxConnections: 3,\r\n            getBucket: function(id) {},\r\n            getHost: function(id) {},\r\n            getKey: function(id) {},\r\n            log: function(str, level) {}\r\n        },\r\n        getSignatureAjaxRequester;\r\n\r\n    qq.extend(options, o);\r\n\r\n    // Transport for requesting signatures (for the \"Complete\" requests) from the local server\r\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\r\n        endpointStore: options.endpointStore,\r\n        signatureSpec: options.signatureSpec,\r\n        cors: options.cors,\r\n        log: options.log\r\n    });\r\n\r\n    /**\r\n     * Attach all required headers (including Authorization) to the \"Abort\" request.  This is a promissory function\r\n     * that will fulfill the associated promise once all headers have been attached or when an error has occurred that\r\n     * prevents headers from being attached.\r\n     *\r\n     * @param id Associated file ID\r\n     * @param uploadId ID of the associated upload, according to AWS\r\n     * @returns {qq.Promise}\r\n     */\r\n    function getHeaders(id, uploadId) {\r\n        var headers = {},\r\n            promise = new qq.Promise(),\r\n            bucket = options.getBucket(id),\r\n            host = options.getHost(id),\r\n            signatureConstructor = getSignatureAjaxRequester.constructStringToSign\r\n                (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_ABORT, bucket, host, options.getKey(id))\r\n                .withUploadId(uploadId);\r\n\r\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\r\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\r\n\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\r\n     * \"Abort MPU\" request has been a success or not.\r\n     *\r\n     * @param id ID associated with the file.\r\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\r\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\r\n     */\r\n    function handleAbortRequestComplete(id, xhr, isError) {\r\n        var domParser = new DOMParser(),\r\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\r\n            errorEls = responseDoc.getElementsByTagName(\"Error\"),\r\n            awsErrorMsg;\r\n\r\n        options.log(qq.format(\"Abort response status {}, body = {}\", xhr.status, xhr.responseText));\r\n\r\n        // If the base requester has determine this a failure, give up.\r\n        if (isError) {\r\n            options.log(qq.format(\"Abort Multipart Upload request for {} failed with status {}.\", id, xhr.status), \"error\");\r\n        }\r\n        else {\r\n            // Make sure the correct bucket and key has been specified in the XML response from AWS.\r\n            if (errorEls.length) {\r\n                isError = true;\r\n                awsErrorMsg = responseDoc.getElementsByTagName(\"Message\")[0].textContent;\r\n                options.log(qq.format(\"Failed to Abort Multipart Upload request for {}.  Error: {}\", id, awsErrorMsg), \"error\");\r\n            }\r\n            else {\r\n                options.log(qq.format(\"Abort MPU request succeeded for file ID {}.\", id));\r\n            }\r\n        }\r\n    }\r\n\r\n    requester = qq.extend(this, new qq.AjaxRequester({\r\n        validMethods: [\"DELETE\"],\r\n        method: options.method,\r\n        contentType: null,\r\n        endpointStore: options.endpointStore,\r\n        maxConnections: options.maxConnections,\r\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\r\n        log: options.log,\r\n        onComplete: handleAbortRequestComplete,\r\n        successfulResponseCodes: {\r\n            DELETE: [204]\r\n        }\r\n    }));\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Sends the \"Abort\" request.\r\n         *\r\n         * @param id ID associated with the file.\r\n         * @param uploadId AWS uploadId for this file\r\n         */\r\n        send: function(id, uploadId) {\r\n            getHeaders(id, uploadId).then(function(headers, endOfUrl) {\r\n                options.log(\"Submitting S3 Abort multipart upload request for \" + id);\r\n                requester.initTransport(id)\r\n                    .withPath(endOfUrl)\r\n                    .withHeaders(headers)\r\n                    .send();\r\n            });\r\n        }\r\n    });\r\n};\r\n","/*globals qq */\r\n/**\r\n * Upload handler used by the upload to S3 module that depends on File API support, and, therefore, makes use of\r\n * `XMLHttpRequest` level 2 to upload `File`s and `Blob`s directly to S3 buckets via the associated AWS API.\r\n *\r\n * If chunking is supported and enabled, the S3 Multipart Upload REST API is utilized.\r\n *\r\n * @param spec Options passed from the base handler\r\n * @param proxy Callbacks & methods used to query for or push out data/changes\r\n */\r\nqq.s3.XhrUploadHandler = function(spec, proxy) {\r\n    \"use strict\";\r\n\r\n    var getName = proxy.getName,\r\n        log = proxy.log,\r\n        clockDrift = spec.clockDrift,\r\n        expectedStatus = 200,\r\n        onGetBucket = spec.getBucket,\r\n        onGetHost = spec.getHost,\r\n        onGetKeyName = spec.getKeyName,\r\n        filenameParam = spec.filenameParam,\r\n        paramsStore = spec.paramsStore,\r\n        endpointStore = spec.endpointStore,\r\n        aclStore = spec.aclStore,\r\n        reducedRedundancy = spec.objectProperties.reducedRedundancy,\r\n        region = spec.objectProperties.region,\r\n        serverSideEncryption = spec.objectProperties.serverSideEncryption,\r\n        validation = spec.validation,\r\n        signature = qq.extend({region: region, drift: clockDrift}, spec.signature),\r\n        handler = this,\r\n        credentialsProvider = spec.signature.credentialsProvider,\r\n\r\n        chunked = {\r\n            // Sends a \"Complete Multipart Upload\" request and then signals completion of the upload\r\n            // when the response to this request has been parsed.\r\n            combine: function(id) {\r\n                var uploadId = handler._getPersistableData(id).uploadId,\r\n                    etagMap = handler._getPersistableData(id).etags,\r\n                    result = new qq.Promise();\r\n\r\n                requesters.completeMultipart.send(id, uploadId, etagMap).then(\r\n                    result.success,\r\n\r\n                    function failure(reason, xhr) {\r\n                        result.failure(upload.done(id, xhr).response, xhr);\r\n                    }\r\n                );\r\n\r\n                return result;\r\n            },\r\n\r\n            // The last step in handling a chunked upload.  This is called after each chunk has been sent.\r\n            // The request may be successful, or not.  If it was successful, we must extract the \"ETag\" element\r\n            // in the XML response and store that along with the associated part number.\r\n            // We need these items to \"Complete\" the multipart upload after all chunks have been successfully sent.\r\n            done: function(id, xhr, chunkIdx) {\r\n                var response = upload.response.parse(id, xhr),\r\n                    etag;\r\n\r\n                if (response.success) {\r\n                    etag = xhr.getResponseHeader(\"ETag\");\r\n\r\n                    if (!handler._getPersistableData(id).etags) {\r\n                        handler._getPersistableData(id).etags = [];\r\n                    }\r\n                    handler._getPersistableData(id).etags.push({part: chunkIdx + 1, etag: etag});\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Determines headers that must be attached to the chunked (Multipart Upload) request.  One of these headers is an\r\n             * Authorization value, which must be determined by asking the local server to sign the request first.  So, this\r\n             * function returns a promise.  Once all headers are determined, the `success` method of the promise is called with\r\n             * the headers object.  If there was some problem determining the headers, we delegate to the caller's `failure`\r\n             * callback.\r\n             *\r\n             * @param id File ID\r\n             * @param chunkIdx Index of the chunk to PUT\r\n             * @returns {qq.Promise}\r\n             */\r\n            initHeaders: function(id, chunkIdx, blob) {\r\n                var headers = {},\r\n                    bucket = upload.bucket.getName(id),\r\n                    host = upload.host.getName(id),\r\n                    key = upload.key.urlSafe(id),\r\n                    promise = new qq.Promise(),\r\n                    signatureConstructor = requesters.restSignature.constructStringToSign\r\n                        (requesters.restSignature.REQUEST_TYPE.MULTIPART_UPLOAD, bucket, host, key)\r\n                        .withPartNum(chunkIdx + 1)\r\n                        .withContent(blob)\r\n                        .withUploadId(handler._getPersistableData(id).uploadId);\r\n\r\n                // Ask the local server to sign the request.  Use this signature to form the Authorization header.\r\n                requesters.restSignature.getSignature(id + \".\" + chunkIdx, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\r\n\r\n                return promise;\r\n            },\r\n\r\n            put: function(id, chunkIdx) {\r\n                var xhr = handler._createXhr(id, chunkIdx),\r\n                    chunkData = handler._getChunkData(id, chunkIdx),\r\n                    domain = spec.endpointStore.get(id),\r\n                    promise = new qq.Promise();\r\n\r\n                // Add appropriate headers to the multipart upload request.\r\n                // Once these have been determined (asynchronously) attach the headers and send the chunk.\r\n                chunked.initHeaders(id, chunkIdx, chunkData.blob).then(function(headers, endOfUrl) {\r\n                    if (xhr._cancelled) {\r\n                        log(qq.format(\"Upload of item {}.{} cancelled. Upload will not start after successful signature request.\", id, chunkIdx));\r\n                        promise.failure({error: \"Chunk upload cancelled\"});\r\n                    }\r\n                    else {\r\n                        var url = domain + \"/\" + endOfUrl;\r\n                        handler._registerProgressHandler(id, chunkIdx, chunkData.size);\r\n                        upload.track(id, xhr, chunkIdx).then(promise.success, promise.failure);\r\n                        xhr.open(\"PUT\", url, true);\r\n\r\n                        var hasContentType = false;\r\n                        qq.each(headers, function(name, val) {\r\n                            if (name === \"Content-Type\") {\r\n                                hasContentType = true;\r\n                            }\r\n\r\n                            xhr.setRequestHeader(name, val);\r\n                        });\r\n\r\n                        // Workaround for IE Edge\r\n                        if (!hasContentType) {\r\n                            xhr.setRequestHeader(\"Content-Type\", \"\");\r\n                        }\r\n\r\n                        xhr.send(chunkData.blob);\r\n                    }\r\n                }, function() {\r\n                    promise.failure({error: \"Problem signing the chunk!\"}, xhr);\r\n                });\r\n\r\n                return promise;\r\n            },\r\n\r\n            send: function(id, chunkIdx) {\r\n                var promise = new qq.Promise();\r\n\r\n                chunked.setup(id).then(\r\n                    // The \"Initiate\" request succeeded.  We are ready to send the first chunk.\r\n                    function() {\r\n                        chunked.put(id, chunkIdx).then(promise.success, promise.failure);\r\n                    },\r\n\r\n                    // We were unable to initiate the chunked upload process.\r\n                    function(errorMessage, xhr) {\r\n                        promise.failure({error: errorMessage}, xhr);\r\n                    }\r\n                );\r\n\r\n                return promise;\r\n            },\r\n\r\n            /**\r\n             * Sends an \"Initiate Multipart Upload\" request to S3 via the REST API, but only if the MPU has not already been\r\n             * initiated.\r\n             *\r\n             * @param id Associated file ID\r\n             * @returns {qq.Promise} A promise that is fulfilled when the initiate request has been sent and the response has been parsed.\r\n             */\r\n            setup: function(id) {\r\n                var promise = new qq.Promise(),\r\n                    uploadId = handler._getPersistableData(id).uploadId,\r\n                    uploadIdPromise = new qq.Promise();\r\n\r\n                if (!uploadId) {\r\n                    handler._getPersistableData(id).uploadId = uploadIdPromise;\r\n                    requesters.initiateMultipart.send(id).then(\r\n                        function(uploadId) {\r\n                            handler._getPersistableData(id).uploadId = uploadId;\r\n                            uploadIdPromise.success(uploadId);\r\n                            promise.success(uploadId);\r\n                        },\r\n                        function(errorMsg, xhr) {\r\n                            handler._getPersistableData(id).uploadId = null;\r\n                            promise.failure(errorMsg, xhr);\r\n                            uploadIdPromise.failure(errorMsg, xhr);\r\n                        }\r\n                    );\r\n                }\r\n                else if (uploadId instanceof qq.Promise) {\r\n                    uploadId.then(function(uploadId) {\r\n                        promise.success(uploadId);\r\n                    });\r\n                }\r\n                else {\r\n                    promise.success(uploadId);\r\n                }\r\n\r\n                return promise;\r\n            }\r\n        },\r\n\r\n        requesters = {\r\n            abortMultipart: new qq.s3.AbortMultipartAjaxRequester({\r\n                endpointStore: endpointStore,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log,\r\n                getBucket: function(id) {\r\n                    return upload.bucket.getName(id);\r\n                },\r\n                getHost: function(id) {\r\n                    return upload.host.getName(id);\r\n                },\r\n                getKey: function(id) {\r\n                    return upload.key.urlSafe(id);\r\n                }\r\n            }),\r\n\r\n            completeMultipart: new qq.s3.CompleteMultipartAjaxRequester({\r\n                endpointStore: endpointStore,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log,\r\n                getBucket: function(id) {\r\n                    return upload.bucket.getName(id);\r\n                },\r\n                getHost: function(id) {\r\n                    return upload.host.getName(id);\r\n                },\r\n                getKey: function(id) {\r\n                    return upload.key.urlSafe(id);\r\n                }\r\n            }),\r\n\r\n            initiateMultipart: new qq.s3.InitiateMultipartAjaxRequester({\r\n                filenameParam: filenameParam,\r\n                endpointStore: endpointStore,\r\n                paramsStore: paramsStore,\r\n                signatureSpec: signature,\r\n                aclStore: aclStore,\r\n                reducedRedundancy: reducedRedundancy,\r\n                serverSideEncryption: serverSideEncryption,\r\n                cors: spec.cors,\r\n                log: log,\r\n                getContentType: function(id) {\r\n                    return handler._getMimeType(id);\r\n                },\r\n                getBucket: function(id) {\r\n                    return upload.bucket.getName(id);\r\n                },\r\n                getHost: function(id) {\r\n                    return upload.host.getName(id);\r\n                },\r\n                getKey: function(id) {\r\n                    return upload.key.urlSafe(id);\r\n                },\r\n                getName: function(id) {\r\n                    return getName(id);\r\n                }\r\n            }),\r\n\r\n            policySignature: new qq.s3.RequestSigner({\r\n                expectingPolicy: true,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log\r\n            }),\r\n\r\n            restSignature: new qq.s3.RequestSigner({\r\n                endpointStore: endpointStore,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log\r\n            })\r\n        },\r\n\r\n        simple = {\r\n            /**\r\n             * Used for simple (non-chunked) uploads to determine the parameters to send along with the request.  Part of this\r\n             * process involves asking the local server to sign the request, so this function returns a promise.  The promise\r\n             * is fulfilled when all parameters are determined, or when we determine that all parameters cannot be calculated\r\n             * due to some error.\r\n             *\r\n             * @param id File ID\r\n             * @returns {qq.Promise}\r\n             */\r\n            initParams: function(id) {\r\n                /*jshint -W040 */\r\n                var customParams = paramsStore.get(id);\r\n                customParams[filenameParam] = getName(id);\r\n\r\n                return qq.s3.util.generateAwsParams({\r\n                    endpoint: endpointStore.get(id),\r\n                    clockDrift: clockDrift,\r\n                    params: customParams,\r\n                    type: handler._getMimeType(id),\r\n                    bucket: upload.bucket.getName(id),\r\n                    key: handler.getThirdPartyFileId(id),\r\n                    accessKey: credentialsProvider.get().accessKey,\r\n                    sessionToken: credentialsProvider.get().sessionToken,\r\n                    acl: aclStore.get(id),\r\n                    expectedStatus: expectedStatus,\r\n                    minFileSize: validation.minSizeLimit,\r\n                    maxFileSize: validation.maxSizeLimit,\r\n                    reducedRedundancy: reducedRedundancy,\r\n                    region: region,\r\n                    serverSideEncryption: serverSideEncryption,\r\n                    signatureVersion: signature.version,\r\n                    log: log\r\n                },\r\n                qq.bind(requesters.policySignature.getSignature, this, id));\r\n            },\r\n\r\n            send: function(id) {\r\n                var promise = new qq.Promise(),\r\n                    xhr = handler._createXhr(id),\r\n                    fileOrBlob = handler.getFile(id);\r\n\r\n                handler._registerProgressHandler(id);\r\n                upload.track(id, xhr).then(promise.success, promise.failure);\r\n\r\n                // Delegate to a function the sets up the XHR request and notifies us when it is ready to be sent, along w/ the payload.\r\n                simple.setup(id, xhr, fileOrBlob).then(function(toSend) {\r\n                    log(\"Sending upload request for \" + id);\r\n                    xhr.send(toSend);\r\n                }, promise.failure);\r\n\r\n                return promise;\r\n            },\r\n\r\n            /**\r\n             * Starts the upload process by delegating to an async function that determine parameters to be attached to the\r\n             * request.  If all params can be determined, we are called back with the params and the caller of this function is\r\n             * informed by invoking the `success` method on the promise returned by this function, passing the payload of the\r\n             * request.  If some error occurs here, we delegate to a function that signals a failure for this upload attempt.\r\n             *\r\n             * Note that this is only used by the simple (non-chunked) upload process.\r\n             *\r\n             * @param id File ID\r\n             * @param xhr XMLHttpRequest to use for the upload\r\n             * @param fileOrBlob `File` or `Blob` to send\r\n             * @returns {qq.Promise}\r\n             */\r\n            setup: function(id, xhr, fileOrBlob) {\r\n                var formData = new FormData(),\r\n                    endpoint = endpointStore.get(id),\r\n                    url = endpoint,\r\n                    promise = new qq.Promise();\r\n\r\n                simple.initParams(id).then(\r\n                    // Success - all params determined\r\n                    function(awsParams) {\r\n                        xhr.open(\"POST\", url, true);\r\n\r\n                        qq.obj2FormData(awsParams, formData);\r\n\r\n                        // AWS requires the file field be named \"file\".\r\n                        formData.append(\"file\", fileOrBlob);\r\n\r\n                        promise.success(formData);\r\n                    },\r\n\r\n                    // Failure - we couldn't determine some params (likely the signature)\r\n                    function(errorMessage) {\r\n                        promise.failure({error: errorMessage});\r\n                    }\r\n                );\r\n\r\n                return promise;\r\n            }\r\n        },\r\n\r\n        upload = {\r\n            /**\r\n             * Note that this is called when an upload has reached a termination point,\r\n             * regardless of success/failure.  For example, it is called when we have\r\n             * encountered an error during the upload or when the file may have uploaded successfully.\r\n             *\r\n             * @param id file ID\r\n             */\r\n            bucket: {\r\n                promise: function(id) {\r\n                    var promise = new qq.Promise(),\r\n                        cachedBucket = handler._getFileState(id).bucket;\r\n\r\n                    if (cachedBucket) {\r\n                        promise.success(cachedBucket);\r\n                    }\r\n                    else {\r\n                        onGetBucket(id).then(function(bucket) {\r\n                            handler._getFileState(id).bucket = bucket;\r\n                            promise.success(bucket);\r\n                        }, promise.failure);\r\n                    }\r\n\r\n                    return promise;\r\n                },\r\n\r\n                getName: function(id) {\r\n                    return handler._getFileState(id).bucket;\r\n                }\r\n            },\r\n\r\n            host: {\r\n                promise: function(id) {\r\n                    var promise = new qq.Promise(),\r\n                        cachedHost = handler._getFileState(id).host;\r\n\r\n                    if (cachedHost) {\r\n                        promise.success(cachedHost);\r\n                    }\r\n                    else {\r\n                        onGetHost(id).then(function(host) {\r\n                            handler._getFileState(id).host = host;\r\n                            promise.success(host);\r\n                        }, promise.failure);\r\n                    }\r\n\r\n                    return promise;\r\n                },\r\n\r\n                getName: function(id) {\r\n                    return handler._getFileState(id).host;\r\n                }\r\n            },\r\n\r\n            done: function(id, xhr) {\r\n                var response = upload.response.parse(id, xhr),\r\n                    isError = response.success !== true;\r\n\r\n                if (isError && upload.response.shouldReset(response.code)) {\r\n                    log(\"This is an unrecoverable error, we must restart the upload entirely on the next retry attempt.\", \"error\");\r\n                    response.reset = true;\r\n                }\r\n\r\n                return {\r\n                    success: !isError,\r\n                    response: response\r\n                };\r\n            },\r\n\r\n            key: {\r\n                promise: function(id) {\r\n                    var promise = new qq.Promise(),\r\n                        key = handler.getThirdPartyFileId(id);\r\n\r\n                    /* jshint eqnull:true */\r\n                    if (key == null) {\r\n                        handler._setThirdPartyFileId(id, promise);\r\n                        onGetKeyName(id, getName(id)).then(\r\n                            function(keyName) {\r\n                                handler._setThirdPartyFileId(id, keyName);\r\n                                promise.success(keyName);\r\n                            },\r\n                            function(errorReason) {\r\n                                handler._setThirdPartyFileId(id, null);\r\n                                promise.failure(errorReason);\r\n                            }\r\n                        );\r\n                    }\r\n                    else if (qq.isGenericPromise(key)) {\r\n                        key.then(promise.success, promise.failure);\r\n                    }\r\n                    else {\r\n                        promise.success(key);\r\n                    }\r\n\r\n                    return promise;\r\n                },\r\n\r\n                urlSafe: function(id) {\r\n                    var encodedKey = handler.getThirdPartyFileId(id);\r\n                    return qq.s3.util.uriEscapePath(encodedKey);\r\n                }\r\n            },\r\n\r\n            response: {\r\n                parse: function(id, xhr) {\r\n                    var response = {},\r\n                        parsedErrorProps;\r\n\r\n                    try {\r\n                        log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\r\n\r\n                        if (xhr.status === expectedStatus) {\r\n                            response.success = true;\r\n                        }\r\n                        else {\r\n                            parsedErrorProps = upload.response.parseError(xhr.responseText);\r\n\r\n                            if (parsedErrorProps) {\r\n                                response.error = parsedErrorProps.message;\r\n                                response.code = parsedErrorProps.code;\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (error) {\r\n                        log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\r\n                    }\r\n\r\n                    return response;\r\n                },\r\n\r\n                /**\r\n                 * This parses an XML response by extracting the \"Message\" and \"Code\" elements that accompany AWS error responses.\r\n                 *\r\n                 * @param awsResponseXml XML response from AWS\r\n                 * @returns {object} Object w/ `code` and `message` properties, or undefined if we couldn't find error info in the XML document.\r\n                 */\r\n                parseError: function(awsResponseXml) {\r\n                    var parser = new DOMParser(),\r\n                        parsedDoc = parser.parseFromString(awsResponseXml, \"application/xml\"),\r\n                        errorEls = parsedDoc.getElementsByTagName(\"Error\"),\r\n                        errorDetails = {},\r\n                        codeEls, messageEls;\r\n\r\n                    if (errorEls.length) {\r\n                        codeEls = parsedDoc.getElementsByTagName(\"Code\");\r\n                        messageEls = parsedDoc.getElementsByTagName(\"Message\");\r\n\r\n                        if (messageEls.length) {\r\n                            errorDetails.message = messageEls[0].textContent;\r\n                        }\r\n\r\n                        if (codeEls.length) {\r\n                            errorDetails.code = codeEls[0].textContent;\r\n                        }\r\n\r\n                        return errorDetails;\r\n                    }\r\n                },\r\n\r\n                // Determine if the upload should be restarted on the next retry attempt\r\n                // based on the error code returned in the response from AWS.\r\n                shouldReset: function(errorCode) {\r\n                    /*jshint -W014 */\r\n                    return errorCode === \"EntityTooSmall\"\r\n                        || errorCode === \"InvalidPart\"\r\n                        || errorCode === \"InvalidPartOrder\"\r\n                        || errorCode === \"NoSuchUpload\";\r\n                }\r\n            },\r\n\r\n            start: function(id, optChunkIdx) {\r\n                var promise = new qq.Promise();\r\n\r\n                upload.key.promise(id).then(function() {\r\n                    upload.bucket.promise(id).then(function() {\r\n                        upload.host.promise(id).then(function() {\r\n                            /* jshint eqnull:true */\r\n                            if (optChunkIdx == null) {\r\n                                simple.send(id).then(promise.success, promise.failure);\r\n                            }\r\n                            else {\r\n                                chunked.send(id, optChunkIdx).then(promise.success, promise.failure);\r\n                            }\r\n                        });\r\n                    });\r\n                },\r\n                function(errorReason) {\r\n                    promise.failure({error: errorReason});\r\n                });\r\n\r\n                return promise;\r\n            },\r\n\r\n            track: function(id, xhr, optChunkIdx) {\r\n                var promise = new qq.Promise();\r\n\r\n                xhr.onreadystatechange = function() {\r\n                    if (xhr.readyState === 4) {\r\n                        var result;\r\n\r\n                        /* jshint eqnull:true */\r\n                        if (optChunkIdx == null) {\r\n                            result = upload.done(id, xhr);\r\n                            promise[result.success ? \"success\" : \"failure\"](result.response, xhr);\r\n                        }\r\n                        else {\r\n                            chunked.done(id, xhr, optChunkIdx);\r\n                            result = upload.done(id, xhr);\r\n                            promise[result.success ? \"success\" : \"failure\"](result.response, xhr);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                return promise;\r\n            }\r\n        };\r\n\r\n    qq.extend(this, {\r\n        uploadChunk: upload.start,\r\n        uploadFile: upload.start\r\n    });\r\n\r\n    qq.extend(this, new qq.XhrUploadHandler({\r\n        options: qq.extend({namespace: \"s3\"}, spec),\r\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\r\n    }));\r\n\r\n    qq.override(this, function(super_) {\r\n        return {\r\n            expunge: function(id) {\r\n                var uploadId = handler._getPersistableData(id) && handler._getPersistableData(id).uploadId,\r\n                    existedInLocalStorage = handler._maybeDeletePersistedChunkData(id);\r\n\r\n                if (uploadId !== undefined && existedInLocalStorage) {\r\n                    requesters.abortMultipart.send(id, uploadId);\r\n                }\r\n\r\n                super_.expunge(id);\r\n            },\r\n\r\n            finalizeChunks: function(id) {\r\n                return chunked.combine(id);\r\n            },\r\n\r\n            _getLocalStorageId: function(id) {\r\n                var baseStorageId = super_._getLocalStorageId(id),\r\n                    bucketName = upload.bucket.getName(id);\r\n\r\n                return baseStorageId + \"-\" + bucketName;\r\n            }\r\n        };\r\n    });\r\n};\r\n","/*globals qq */\r\n/**\r\n * Upload handler used by the upload to S3 module that assumes the current user agent does not have any support for the\r\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to S3 buckets via the associated\r\n * AWS API.\r\n *\r\n * @param options Options passed from the base handler\r\n * @param proxy Callbacks & methods used to query for or push out data/changes\r\n */\r\nqq.s3.FormUploadHandler = function(options, proxy) {\r\n    \"use strict\";\r\n\r\n    var handler = this,\r\n        clockDrift = options.clockDrift,\r\n        onUuidChanged = proxy.onUuidChanged,\r\n        getName = proxy.getName,\r\n        getUuid = proxy.getUuid,\r\n        log = proxy.log,\r\n        onGetBucket = options.getBucket,\r\n        onGetKeyName = options.getKeyName,\r\n        filenameParam = options.filenameParam,\r\n        paramsStore = options.paramsStore,\r\n        endpointStore = options.endpointStore,\r\n        aclStore = options.aclStore,\r\n        reducedRedundancy = options.objectProperties.reducedRedundancy,\r\n        region = options.objectProperties.region,\r\n        serverSideEncryption = options.objectProperties.serverSideEncryption,\r\n        validation = options.validation,\r\n        signature = options.signature,\r\n        successRedirectUrl = options.iframeSupport.localBlankPagePath,\r\n        credentialsProvider = options.signature.credentialsProvider,\r\n        getSignatureAjaxRequester = new qq.s3.RequestSigner({\r\n            signatureSpec: signature,\r\n            cors: options.cors,\r\n            log: log\r\n        });\r\n\r\n    if (successRedirectUrl === undefined) {\r\n        throw new Error(\"successRedirectEndpoint MUST be defined if you intend to use browsers that do not support the File API!\");\r\n    }\r\n\r\n    /**\r\n     * Attempt to parse the contents of an iframe after receiving a response from the server.  If the contents cannot be\r\n     * read (perhaps due to a security error) it is safe to assume that the upload was not successful since Amazon should\r\n     * have redirected to a known endpoint that should provide a parseable response.\r\n     *\r\n     * @param id ID of the associated file\r\n     * @param iframe target of the form submit\r\n     * @returns {boolean} true if the contents can be read, false otherwise\r\n     */\r\n    function isValidResponse(id, iframe) {\r\n        var response,\r\n            endpoint = options.endpointStore.get(id),\r\n            bucket = handler._getFileState(id).bucket,\r\n            doc,\r\n            innerHtml,\r\n            responseData;\r\n\r\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\r\n        try {\r\n            // iframe.contentWindow.document - for IE<7\r\n            doc = iframe.contentDocument || iframe.contentWindow.document;\r\n            innerHtml = doc.body.innerHTML;\r\n\r\n            responseData = qq.s3.util.parseIframeResponse(iframe);\r\n            if (responseData.bucket === bucket &&\r\n                responseData.key === qq.s3.util.encodeQueryStringParam(handler.getThirdPartyFileId(id))) {\r\n\r\n                return true;\r\n            }\r\n\r\n            log(\"Response from AWS included an unexpected bucket or key name.\", \"error\");\r\n\r\n        }\r\n        catch (error) {\r\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function generateAwsParams(id) {\r\n        /*jshint -W040 */\r\n        var customParams = paramsStore.get(id);\r\n\r\n        customParams[filenameParam] = getName(id);\r\n\r\n        return qq.s3.util.generateAwsParams({\r\n            endpoint: endpointStore.get(id),\r\n            clockDrift: clockDrift,\r\n            params: customParams,\r\n            bucket: handler._getFileState(id).bucket,\r\n            key: handler.getThirdPartyFileId(id),\r\n            accessKey: credentialsProvider.get().accessKey,\r\n            sessionToken: credentialsProvider.get().sessionToken,\r\n            acl: aclStore.get(id),\r\n            minFileSize: validation.minSizeLimit,\r\n            maxFileSize: validation.maxSizeLimit,\r\n            successRedirectUrl: successRedirectUrl,\r\n            reducedRedundancy: reducedRedundancy,\r\n            region: region,\r\n            serverSideEncryption: serverSideEncryption,\r\n            signatureVersion: signature.version,\r\n            log: log\r\n        },\r\n        qq.bind(getSignatureAjaxRequester.getSignature, this, id));\r\n    }\r\n\r\n    /**\r\n     * Creates form, that will be submitted to iframe\r\n     */\r\n    function createForm(id, iframe) {\r\n        var promise = new qq.Promise(),\r\n            method = \"POST\",\r\n            endpoint = options.endpointStore.get(id),\r\n            fileName = getName(id);\r\n\r\n        generateAwsParams(id).then(function(params) {\r\n            var form = handler._initFormForUpload({\r\n                method: method,\r\n                endpoint: endpoint,\r\n                params: params,\r\n                paramsInBody: true,\r\n                targetName: iframe.name\r\n            });\r\n\r\n            promise.success(form);\r\n        }, function(errorMessage) {\r\n            promise.failure(errorMessage);\r\n            handleFinishedUpload(id, iframe, fileName, {error: errorMessage});\r\n        });\r\n\r\n        return promise;\r\n    }\r\n\r\n    function handleUpload(id) {\r\n        var iframe = handler._createIframe(id),\r\n            input = handler.getInput(id),\r\n            promise = new qq.Promise();\r\n\r\n        createForm(id, iframe).then(function(form) {\r\n            form.appendChild(input);\r\n\r\n            // Register a callback when the response comes in from S3\r\n            handler._attachLoadEvent(iframe, function(response) {\r\n                log(\"iframe loaded\");\r\n\r\n                // If the common response handler has determined success or failure immediately\r\n                if (response) {\r\n                    // If there is something fundamentally wrong with the response (such as iframe content is not accessible)\r\n                    if (response.success === false) {\r\n                        log(\"Amazon likely rejected the upload request\", \"error\");\r\n                        promise.failure(response);\r\n                    }\r\n                }\r\n                // The generic response (iframe onload) handler was not able to make a determination regarding the success of the request\r\n                else {\r\n                    response = {};\r\n                    response.success = isValidResponse(id, iframe);\r\n\r\n                    // If the more specific response handle detected a problem with the response from S3\r\n                    if (response.success === false) {\r\n                        log(\"A success response was received by Amazon, but it was invalid in some way.\", \"error\");\r\n                        promise.failure(response);\r\n                    }\r\n                    else {\r\n                        qq.extend(response, qq.s3.util.parseIframeResponse(iframe));\r\n                        promise.success(response);\r\n                    }\r\n                }\r\n\r\n                handleFinishedUpload(id, iframe);\r\n            });\r\n\r\n            log(\"Sending upload request for \" + id);\r\n            form.submit();\r\n            qq(form).remove();\r\n        }, promise.failure);\r\n\r\n        return promise;\r\n    }\r\n\r\n    function handleFinishedUpload(id, iframe) {\r\n        handler._detachLoadEvent(id);\r\n        iframe && qq(iframe).remove();\r\n    }\r\n\r\n    qq.extend(this, new qq.FormUploadHandler({\r\n        options: {\r\n            isCors: false,\r\n            inputName: \"file\"\r\n        },\r\n\r\n        proxy: {\r\n            onCancel: options.onCancel,\r\n            onUuidChanged: onUuidChanged,\r\n            getName: getName,\r\n            getUuid: getUuid,\r\n            log: log\r\n        }\r\n    }));\r\n\r\n    qq.extend(this, {\r\n        uploadFile: function(id) {\r\n            var name = getName(id),\r\n                promise = new qq.Promise();\r\n\r\n            if (handler.getThirdPartyFileId(id)) {\r\n                if (handler._getFileState(id).bucket) {\r\n                    handleUpload(id).then(promise.success, promise.failure);\r\n                }\r\n                else {\r\n                    onGetBucket(id).then(function(bucket) {\r\n                        handler._getFileState(id).bucket = bucket;\r\n                        handleUpload(id).then(promise.success, promise.failure);\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                // The S3 uploader module will either calculate the key or ask the server for it\r\n                // and will call us back once it is known.\r\n                onGetKeyName(id, name).then(function(key) {\r\n                    onGetBucket(id).then(function(bucket) {\r\n                        handler._getFileState(id).bucket = bucket;\r\n                        handler._setThirdPartyFileId(id, key);\r\n                        handleUpload(id).then(promise.success, promise.failure);\r\n                    }, function(errorReason) {\r\n                        promise.failure({error: errorReason});\r\n                    });\r\n                }, function(errorReason) {\r\n                    promise.failure({error: errorReason});\r\n                });\r\n            }\r\n\r\n            return promise;\r\n        }\r\n    });\r\n};\r\n","/*globals qq */\r\n/**\r\n * This defines FineUploader mode w/ support for uploading to S3, which provides all the basic\r\n * functionality of Fine Uploader as well as code to handle uploads directly to S3.\r\n * This module inherits all logic from FineUploader mode and FineUploaderBasicS3 mode and adds some UI-related logic\r\n * specific to the upload-to-S3 workflow.  Some inherited options and API methods have a special meaning\r\n * in the context of the S3 uploader.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.s3.FineUploader = function(o) {\r\n        var options = {\r\n            failedUploadTextDisplay: {\r\n                mode: \"custom\"\r\n            }\r\n        };\r\n\r\n        // Replace any default options with user defined ones\r\n        qq.extend(options, o, true);\r\n\r\n        // Inherit instance data from FineUploader, which should in turn inherit from s3.FineUploaderBasic.\r\n        qq.FineUploader.call(this, options, \"s3\");\r\n\r\n        if (!qq.supportedFeatures.ajaxUploading && options.iframeSupport.localBlankPagePath === undefined) {\r\n            this._options.element.innerHTML = \"<div>You MUST set the <code>localBlankPagePath</code> property \" +\r\n                \"of the <code>iframeSupport</code> option since this browser does not support the File API!</div>\";\r\n        }\r\n    };\r\n\r\n    // Inherit the API methods from FineUploaderBasicS3\r\n    qq.extend(qq.s3.FineUploader.prototype, qq.s3.FineUploaderBasic.prototype);\r\n\r\n    // Inherit public and private API methods related to UI\r\n    qq.extend(qq.s3.FineUploader.prototype, qq.uiPublicApi);\r\n    qq.extend(qq.s3.FineUploader.prototype, qq.uiPrivateApi);\r\n}());\r\n","/*globals qq */\r\nqq.azure = qq.azure || {};\r\nqq.azure.util = qq.azure.util || (function() {\r\n    \"use strict\";\r\n\r\n    return {\r\n        AZURE_PARAM_PREFIX: \"x-ms-meta-\",\r\n\r\n        /** Test if a request header is actually a known Azure parameter. See: https://msdn.microsoft.com/en-us/library/azure/dd179451.aspx\r\n         *\r\n         * @param name Name of the Request Header parameter.\r\n         * @returns {Boolean} Test result.\r\n         */\r\n        _paramNameMatchesAzureParameter: function(name) {\r\n            switch (name) {\r\n                case \"Cache-Control\":\r\n                case \"Content-Disposition\":\r\n                case \"Content-Encoding\":\r\n                case \"Content-MD5\":\r\n                case \"x-ms-blob-content-encoding\":\r\n                case \"x-ms-blob-content-disposition\":\r\n                case \"x-ms-blob-content-md5\":\r\n                case \"x-ms-blob-cache-control\":\r\n                    return true;\r\n                default:\r\n                    return false;\r\n            }\r\n        },\r\n\r\n        /** Create Prefixed request headers which are appropriate for Azure.\r\n         *\r\n         * If the request header is appropriate for Azure (e.g. Cache-Control) then it should be\r\n         * passed along without a metadata prefix. For all other request header parameter names,\r\n         * qq.azure.util.AZURE_PARAM_PREFIX should be prepended.\r\n         *\r\n         * @param name Name of the Request Header parameter to construct a (possibly) prefixed name.\r\n         * @returns {String} A valid Request Header parameter name.\r\n         */\r\n        _getPrefixedParamName: function(name) {\r\n            if (qq.azure.util._paramNameMatchesAzureParameter(name)) {\r\n                return name;\r\n            }\r\n            else {\r\n                return qq.azure.util.AZURE_PARAM_PREFIX + name;\r\n            }\r\n        },\r\n\r\n        getParamsAsHeaders: function(params) {\r\n            var headers = {};\r\n\r\n            qq.each(params, function(name, val) {\r\n                var headerName = qq.azure.util._getPrefixedParamName(name),\r\n                    value = null;\r\n\r\n                if (qq.isFunction(val)) {\r\n                    value = String(val());\r\n                }\r\n                else if (qq.isObject(val)) {\r\n                    qq.extend(headers, qq.azure.util.getParamsAsHeaders(val));\r\n                }\r\n                else {\r\n                    value = String(val);\r\n                }\r\n\r\n                if (value !== null) {\r\n                    if (qq.azure.util._paramNameMatchesAzureParameter(name)) {\r\n                        headers[headerName] = value;\r\n                    } else {\r\n                        headers[headerName] = encodeURIComponent(value);\r\n                    }\r\n                }\r\n            });\r\n\r\n            return headers;\r\n        },\r\n\r\n        parseAzureError: function(responseText, log) {\r\n            var domParser = new DOMParser(),\r\n                responseDoc = domParser.parseFromString(responseText, \"application/xml\"),\r\n                errorTag = responseDoc.getElementsByTagName(\"Error\")[0],\r\n                errorDetails = {},\r\n                codeTag, messageTag;\r\n\r\n            log(\"Received error response: \" + responseText, \"error\");\r\n\r\n            if (errorTag) {\r\n                messageTag = errorTag.getElementsByTagName(\"Message\")[0];\r\n                if (messageTag) {\r\n                    errorDetails.message = messageTag.textContent;\r\n                }\r\n\r\n                codeTag = errorTag.getElementsByTagName(\"Code\")[0];\r\n                if (codeTag) {\r\n                    errorDetails.code = codeTag.textContent;\r\n                }\r\n\r\n                log(\"Parsed Azure error: \" + JSON.stringify(errorDetails), \"error\");\r\n\r\n                return errorDetails;\r\n            }\r\n        }\r\n    };\r\n}());\r\n","/*globals qq */\r\n/**\r\n * This defines FineUploaderBasic mode w/ support for uploading to Azure, which provides all the basic\r\n * functionality of Fine Uploader Basic as well as code to handle uploads directly to Azure.\r\n * Some inherited options and API methods have a special meaning in the context of the Azure uploader.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.azure.FineUploaderBasic = function(o) {\r\n        if (!qq.supportedFeatures.ajaxUploading) {\r\n            throw new qq.Error(\"Uploading directly to Azure is not possible in this browser.\");\r\n        }\r\n\r\n        var options = {\r\n            signature: {\r\n                endpoint: null,\r\n\r\n                customHeaders: {}\r\n            },\r\n\r\n            // 'uuid', 'filename', or a function which may be promissory\r\n            blobProperties: {\r\n                name: \"uuid\"\r\n            },\r\n\r\n            uploadSuccess: {\r\n                endpoint: null,\r\n\r\n                method: \"POST\",\r\n\r\n                // In addition to the default params sent by Fine Uploader\r\n                params: {},\r\n\r\n                customHeaders: {}\r\n            },\r\n\r\n            chunking: {\r\n                // If this is increased, Azure may respond with a 413\r\n                partSize: 4000000,\r\n                // Don't chunk files less than this size\r\n                minFileSize: 4000001\r\n            }\r\n        };\r\n\r\n        // Replace any default options with user defined ones\r\n        qq.extend(options, o, true);\r\n\r\n        // Call base module\r\n        qq.FineUploaderBasic.call(this, options);\r\n\r\n        this._uploadSuccessParamsStore = this._createStore(this._options.uploadSuccess.params);\r\n        this._uploadSuccessEndpointStore = this._createStore(this._options.uploadSuccess.endpoint);\r\n\r\n        // This will hold callbacks for failed uploadSuccess requests that will be invoked on retry.\r\n        // Indexed by file ID.\r\n        this._failedSuccessRequestCallbacks = {};\r\n\r\n        // Holds blob names for file representations constructed from a session request.\r\n        this._cannedBlobNames = {};\r\n    };\r\n\r\n    // Inherit basic public & private API methods.\r\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.basePublicApi);\r\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.basePrivateApi);\r\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.nonTraditionalBasePublicApi);\r\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.nonTraditionalBasePrivateApi);\r\n\r\n    // Define public & private API methods for this module.\r\n    qq.extend(qq.azure.FineUploaderBasic.prototype, {\r\n        getBlobName: function(id) {\r\n            /* jshint eqnull:true */\r\n            if (this._cannedBlobNames[id] == null) {\r\n                return this._handler.getThirdPartyFileId(id);\r\n            }\r\n            return this._cannedBlobNames[id];\r\n        },\r\n\r\n        _getEndpointSpecificParams: function(id) {\r\n            return {\r\n                blob: this.getBlobName(id),\r\n                uuid: this.getUuid(id),\r\n                name: this.getName(id),\r\n                container: this._endpointStore.get(id)\r\n            };\r\n        },\r\n\r\n        _createUploadHandler: function() {\r\n            return qq.FineUploaderBasic.prototype._createUploadHandler.call(this,\r\n                {\r\n                    signature: this._options.signature,\r\n                    onGetBlobName: qq.bind(this._determineBlobName, this),\r\n                    deleteBlob: qq.bind(this._deleteBlob, this, true)\r\n                },\r\n                \"azure\");\r\n        },\r\n\r\n        _determineBlobName: function(id) {\r\n            var self = this,\r\n                blobNameOptionValue = this._options.blobProperties.name,\r\n                uuid = this.getUuid(id),\r\n                filename = this.getName(id),\r\n                fileExtension = qq.getExtension(filename),\r\n                blobNameToUse = uuid;\r\n\r\n            if (qq.isString(blobNameOptionValue)) {\r\n                switch (blobNameOptionValue) {\r\n                    case \"uuid\":\r\n                        if (fileExtension !== undefined) {\r\n                            blobNameToUse += \".\" + fileExtension;\r\n                        }\r\n                        return new qq.Promise().success(blobNameToUse);\r\n                    case \"filename\":\r\n                        return new qq.Promise().success(filename);\r\n                    default:\r\n                        return new qq.Promise.failure(\"Invalid blobName option value - \" + blobNameOptionValue);\r\n                }\r\n            }\r\n            else {\r\n                return blobNameOptionValue.call(this, id);\r\n            }\r\n        },\r\n\r\n        _addCannedFile: function(sessionData) {\r\n            var id;\r\n\r\n            /* jshint eqnull:true */\r\n            if (sessionData.blobName == null) {\r\n                throw new qq.Error(\"Did not find blob name property in server session response.  This is required!\");\r\n            }\r\n            else {\r\n                id = qq.FineUploaderBasic.prototype._addCannedFile.apply(this, arguments);\r\n                this._cannedBlobNames[id] = sessionData.blobName;\r\n            }\r\n\r\n            return id;\r\n        },\r\n\r\n        _deleteBlob: function(relatedToCancel, id) {\r\n            var self = this,\r\n                deleteBlobSasUri = {},\r\n                blobUriStore = {\r\n                    get: function(id) {\r\n                        return self._endpointStore.get(id) + \"/\" + self.getBlobName(id);\r\n                    }\r\n                },\r\n                deleteFileEndpointStore = {\r\n                    get: function(id) {\r\n                        return deleteBlobSasUri[id];\r\n                    }\r\n                },\r\n                getSasSuccess = function(id, sasUri) {\r\n                    deleteBlobSasUri[id] = sasUri;\r\n                    deleteBlob.send(id);\r\n                },\r\n                getSasFailure = function(id, reason, xhr) {\r\n                    if (relatedToCancel) {\r\n                        self.log(\"Will cancel upload, but cannot remove uncommitted parts from Azure due to issue retrieving SAS\", \"error\");\r\n                        qq.FineUploaderBasic.prototype._onCancel.call(self, id, self.getName(id));\r\n                    }\r\n                    else {\r\n                        self._onDeleteComplete(id, xhr, true);\r\n                        self._options.callbacks.onDeleteComplete(id, xhr, true);\r\n                    }\r\n                },\r\n                deleteBlob = new qq.azure.DeleteBlob({\r\n                    endpointStore: deleteFileEndpointStore,\r\n                    log: qq.bind(self.log, self),\r\n                    onDelete: function(id) {\r\n                        self._onDelete(id);\r\n                        self._options.callbacks.onDelete(id);\r\n                    },\r\n                    onDeleteComplete: function(id, xhrOrXdr, isError) {\r\n                        delete deleteBlobSasUri[id];\r\n\r\n                        if (isError) {\r\n                            if (relatedToCancel) {\r\n                                self.log(\"Will cancel upload, but failed to remove uncommitted parts from Azure.\", \"error\");\r\n                            }\r\n                            else {\r\n                                qq.azure.util.parseAzureError(xhrOrXdr.responseText, qq.bind(self.log, self));\r\n                            }\r\n                        }\r\n\r\n                        if (relatedToCancel) {\r\n                            qq.FineUploaderBasic.prototype._onCancel.call(self, id, self.getName(id));\r\n                            self.log(\"Deleted uncommitted blob chunks for \" + id);\r\n                        }\r\n                        else {\r\n                            self._onDeleteComplete(id, xhrOrXdr, isError);\r\n                            self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\r\n                        }\r\n                    }\r\n                }),\r\n                getSas = new qq.azure.GetSas({\r\n                    cors: this._options.cors,\r\n                    customHeaders: this._options.signature.customHeaders,\r\n                    endpointStore: {\r\n                        get: function() {\r\n                            return self._options.signature.endpoint;\r\n                        }\r\n                    },\r\n                    restRequestVerb: deleteBlob.method,\r\n                    log: qq.bind(self.log, self)\r\n                });\r\n\r\n            getSas.request(id, blobUriStore.get(id)).then(\r\n                qq.bind(getSasSuccess, self, id),\r\n                qq.bind(getSasFailure, self, id));\r\n        },\r\n\r\n        _createDeleteHandler: function() {\r\n            var self = this;\r\n\r\n            return {\r\n                sendDelete: function(id, uuid) {\r\n                    self._deleteBlob(false, id);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}());\r\n","/*globals qq */\r\n/**\r\n * Upload handler used by the upload to Azure module that depends on File API support, and, therefore, makes use of\r\n * `XMLHttpRequest` level 2 to upload `File`s and `Blob`s directly to Azure Blob Storage containers via the\r\n * associated Azure API.\r\n *\r\n * @param spec Options passed from the base handler\r\n * @param proxy Callbacks & methods used to query for or push out data/changes\r\n */\r\n// TODO l18n for error messages returned to UI\r\nqq.azure.XhrUploadHandler = function(spec, proxy) {\r\n    \"use strict\";\r\n\r\n    var handler = this,\r\n        log = proxy.log,\r\n        cors = spec.cors,\r\n        endpointStore = spec.endpointStore,\r\n        paramsStore = spec.paramsStore,\r\n        signature = spec.signature,\r\n        filenameParam = spec.filenameParam,\r\n        minFileSizeForChunking = spec.chunking.minFileSize,\r\n        deleteBlob = spec.deleteBlob,\r\n        onGetBlobName = spec.onGetBlobName,\r\n        getName = proxy.getName,\r\n        getSize = proxy.getSize,\r\n\r\n        getBlobMetadata = function(id) {\r\n            var params = paramsStore.get(id);\r\n            params[filenameParam] = getName(id);\r\n            return params;\r\n        },\r\n\r\n        api = {\r\n            putBlob: new qq.azure.PutBlob({\r\n                getBlobMetadata: getBlobMetadata,\r\n                log: log\r\n            }),\r\n\r\n            putBlock: new qq.azure.PutBlock({\r\n                log: log\r\n            }),\r\n\r\n            putBlockList: new qq.azure.PutBlockList({\r\n                getBlobMetadata: getBlobMetadata,\r\n                log: log\r\n            }),\r\n\r\n            getSasForPutBlobOrBlock: new qq.azure.GetSas({\r\n                cors: cors,\r\n                customHeaders: signature.customHeaders,\r\n                endpointStore: {\r\n                    get: function() {\r\n                        return signature.endpoint;\r\n                    }\r\n                },\r\n                log: log,\r\n                restRequestVerb: \"PUT\"\r\n            })\r\n        };\r\n\r\n    function combineChunks(id) {\r\n        var promise = new qq.Promise();\r\n\r\n        getSignedUrl(id).then(function(sasUri) {\r\n            var mimeType = handler._getMimeType(id),\r\n                blockIdEntries = handler._getPersistableData(id).blockIdEntries;\r\n\r\n            api.putBlockList.send(id, sasUri, blockIdEntries, mimeType, function(xhr) {\r\n                handler._registerXhr(id, null, xhr, api.putBlockList);\r\n            })\r\n                .then(function(xhr) {\r\n                    log(\"Success combining chunks for id \" + id);\r\n                    promise.success({}, xhr);\r\n                }, function(xhr) {\r\n                    log(\"Attempt to combine chunks failed for id \" + id, \"error\");\r\n                    handleFailure(xhr, promise);\r\n                });\r\n\r\n        },\r\n        promise.failure);\r\n\r\n        return promise;\r\n    }\r\n\r\n    function determineBlobUrl(id) {\r\n        var containerUrl = endpointStore.get(id),\r\n            promise = new qq.Promise(),\r\n            getBlobNameSuccess = function(blobName) {\r\n                handler._setThirdPartyFileId(id, blobName);\r\n                promise.success(containerUrl + \"/\" + blobName);\r\n            },\r\n            getBlobNameFailure = function(reason) {\r\n                promise.failure(reason);\r\n            };\r\n\r\n        onGetBlobName(id).then(getBlobNameSuccess, getBlobNameFailure);\r\n\r\n        return promise;\r\n    }\r\n\r\n    function getSignedUrl(id, optChunkIdx) {\r\n        // We may have multiple SAS requests in progress for the same file, so we must include the chunk idx\r\n        // as part of the ID when communicating with the SAS ajax requester to avoid collisions.\r\n        var getSasId = optChunkIdx == null ? id : id + \".\" + optChunkIdx,\r\n\r\n            promise = new qq.Promise(),\r\n            getSasSuccess = function(sasUri) {\r\n                log(\"GET SAS request succeeded.\");\r\n                promise.success(sasUri);\r\n            },\r\n            getSasFailure = function(reason, getSasXhr) {\r\n                log(\"GET SAS request failed: \" + reason, \"error\");\r\n                promise.failure({error: \"Problem communicating with local server\"}, getSasXhr);\r\n            },\r\n            determineBlobUrlSuccess = function(blobUrl) {\r\n                api.getSasForPutBlobOrBlock.request(getSasId, blobUrl).then(\r\n                    getSasSuccess,\r\n                    getSasFailure\r\n                );\r\n            },\r\n            determineBlobUrlFailure = function(reason) {\r\n                log(qq.format(\"Failed to determine blob name for ID {} - {}\", id, reason), \"error\");\r\n                promise.failure({error: reason});\r\n            };\r\n\r\n        determineBlobUrl(id).then(determineBlobUrlSuccess, determineBlobUrlFailure);\r\n\r\n        return promise;\r\n    }\r\n\r\n    function handleFailure(xhr, promise) {\r\n        var azureError = qq.azure.util.parseAzureError(xhr.responseText, log),\r\n            errorMsg = \"Problem sending file to Azure\";\r\n\r\n        promise.failure({error: errorMsg,\r\n            azureError: azureError && azureError.message,\r\n            reset: xhr.status === 403\r\n        });\r\n    }\r\n\r\n    qq.extend(this, {\r\n        uploadChunk: function(id, chunkIdx) {\r\n            var promise = new qq.Promise();\r\n\r\n            getSignedUrl(id, chunkIdx).then(\r\n                function(sasUri) {\r\n                    var xhr = handler._createXhr(id, chunkIdx),\r\n                    chunkData = handler._getChunkData(id, chunkIdx);\r\n\r\n                    handler._registerProgressHandler(id, chunkIdx, chunkData.size);\r\n                    handler._registerXhr(id, chunkIdx, xhr, api.putBlock);\r\n\r\n                    // We may have multiple put block requests in progress for the same file, so we must include the chunk idx\r\n                    // as part of the ID when communicating with the put block ajax requester to avoid collisions.\r\n                    api.putBlock.upload(id + \".\" + chunkIdx, xhr, sasUri, chunkIdx, chunkData.blob).then(\r\n                        function(blockIdEntry) {\r\n                            if (!handler._getPersistableData(id).blockIdEntries) {\r\n                                handler._getPersistableData(id).blockIdEntries = [];\r\n                            }\r\n\r\n                            handler._getPersistableData(id).blockIdEntries.push(blockIdEntry);\r\n                            log(\"Put Block call succeeded for \" + id);\r\n                            promise.success({}, xhr);\r\n                        },\r\n                        function() {\r\n                            log(qq.format(\"Put Block call failed for ID {} on part {}\", id, chunkIdx), \"error\");\r\n                            handleFailure(xhr, promise);\r\n                        }\r\n                    );\r\n                },\r\n                promise.failure\r\n            );\r\n\r\n            return promise;\r\n        },\r\n\r\n        uploadFile: function(id) {\r\n            var promise = new qq.Promise(),\r\n                fileOrBlob = handler.getFile(id);\r\n\r\n            getSignedUrl(id).then(function(sasUri) {\r\n                var xhr = handler._createXhr(id);\r\n\r\n                handler._registerProgressHandler(id);\r\n\r\n                api.putBlob.upload(id, xhr, sasUri, fileOrBlob).then(\r\n                    function() {\r\n                        log(\"Put Blob call succeeded for \" + id);\r\n                        promise.success({}, xhr);\r\n                    },\r\n                    function() {\r\n                        log(\"Put Blob call failed for \" + id, \"error\");\r\n                        handleFailure(xhr, promise);\r\n                    }\r\n                );\r\n            },\r\n            promise.failure);\r\n\r\n            return promise;\r\n        }\r\n    });\r\n\r\n    qq.extend(this,\r\n        new qq.XhrUploadHandler({\r\n            options: qq.extend({namespace: \"azure\"}, spec),\r\n            proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\r\n        }\r\n    ));\r\n\r\n    qq.override(this, function(super_) {\r\n        return {\r\n            expunge: function(id) {\r\n                var relatedToCancel = handler._wasCanceled(id),\r\n                    chunkingData = handler._getPersistableData(id),\r\n                    blockIdEntries = (chunkingData && chunkingData.blockIdEntries) || [];\r\n\r\n                if (relatedToCancel && blockIdEntries.length > 0) {\r\n                    deleteBlob(id);\r\n                }\r\n\r\n                super_.expunge(id);\r\n            },\r\n\r\n            finalizeChunks: function(id) {\r\n                return combineChunks(id);\r\n            },\r\n\r\n            _shouldChunkThisFile: function(id) {\r\n                var maybePossible = super_._shouldChunkThisFile(id);\r\n                return maybePossible && getSize(id) >= minFileSizeForChunking;\r\n            }\r\n        };\r\n    });\r\n};\r\n","/* globals qq */\r\n/**\r\n * Sends a GET request to the integrator's server, which should return a Shared Access Signature URI used to\r\n * make a specific request on a Blob via the Azure REST API.\r\n */\r\nqq.azure.GetSas = function(o) {\r\n    \"use strict\";\r\n\r\n    var requester,\r\n        options = {\r\n            cors: {\r\n                expected: false,\r\n                sendCredentials: false\r\n            },\r\n            customHeaders: {},\r\n            restRequestVerb: \"PUT\",\r\n            endpointStore: null,\r\n            log: function(str, level) {}\r\n        },\r\n        requestPromises = {};\r\n\r\n    qq.extend(options, o);\r\n\r\n    function sasResponseReceived(id, xhr, isError) {\r\n        var promise = requestPromises[id];\r\n\r\n        if (isError) {\r\n            promise.failure(\"Received response code \" + xhr.status, xhr);\r\n        }\r\n        else {\r\n            if (xhr.responseText.length) {\r\n                promise.success(xhr.responseText);\r\n            }\r\n            else {\r\n                promise.failure(\"Empty response.\", xhr);\r\n            }\r\n        }\r\n\r\n        delete requestPromises[id];\r\n    }\r\n\r\n    requester = qq.extend(this, new qq.AjaxRequester({\r\n        acceptHeader: \"application/json\",\r\n        validMethods: [\"GET\"],\r\n        method: \"GET\",\r\n        successfulResponseCodes: {\r\n            GET: [200]\r\n        },\r\n        contentType: null,\r\n        customHeaders: options.customHeaders,\r\n        endpointStore: options.endpointStore,\r\n        cors: options.cors,\r\n        log: options.log,\r\n        onComplete: sasResponseReceived\r\n    }));\r\n\r\n    qq.extend(this, {\r\n        request: function(id, blobUri) {\r\n            var requestPromise = new qq.Promise(),\r\n                restVerb = options.restRequestVerb;\r\n\r\n            options.log(qq.format(\"Submitting GET SAS request for a {} REST request related to file ID {}.\", restVerb, id));\r\n\r\n            requestPromises[id] = requestPromise;\r\n\r\n            requester.initTransport(id)\r\n                .withParams({\r\n                    bloburi: blobUri,\r\n                    _method: restVerb\r\n                })\r\n                .withCacheBuster()\r\n                .send();\r\n\r\n            return requestPromise;\r\n        }\r\n    });\r\n};\r\n","/* globals qq */\r\n/**\r\n * Implements the Delete Blob Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179413.aspx.\r\n */\r\nqq.azure.DeleteBlob = function(o) {\r\n    \"use strict\";\r\n\r\n    var requester,\r\n        method = \"DELETE\",\r\n        options = {\r\n            endpointStore: {},\r\n            onDelete: function(id) {},\r\n            onDeleteComplete: function(id, xhr, isError) {},\r\n            log: function(str, level) {}\r\n        };\r\n\r\n    qq.extend(options, o);\r\n\r\n    requester = qq.extend(this, new qq.AjaxRequester({\r\n        validMethods: [method],\r\n        method: method,\r\n        successfulResponseCodes: (function() {\r\n            var codes = {};\r\n            codes[method] = [202];\r\n            return codes;\r\n        }()),\r\n        contentType: null,\r\n        endpointStore: options.endpointStore,\r\n        allowXRequestedWithAndCacheControl: false,\r\n        cors: {\r\n            expected: true\r\n        },\r\n        log: options.log,\r\n        onSend: options.onDelete,\r\n        onComplete: options.onDeleteComplete\r\n    }));\r\n\r\n    qq.extend(this, {\r\n        method: method,\r\n        send: function(id) {\r\n            options.log(\"Submitting Delete Blob request for \" + id);\r\n\r\n            return requester.initTransport(id)\r\n                .send();\r\n        }\r\n    });\r\n};\r\n","/* globals qq */\r\n/**\r\n * Implements the Put Blob Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179451.aspx.\r\n */\r\nqq.azure.PutBlob = function(o) {\r\n    \"use strict\";\r\n\r\n    var requester,\r\n        method = \"PUT\",\r\n        options = {\r\n            getBlobMetadata: function(id) {},\r\n            log: function(str, level) {}\r\n        },\r\n        endpoints = {},\r\n        promises = {},\r\n        endpointHandler = {\r\n            get: function(id) {\r\n                return endpoints[id];\r\n            }\r\n        };\r\n\r\n    qq.extend(options, o);\r\n\r\n    requester = qq.extend(this, new qq.AjaxRequester({\r\n        validMethods: [method],\r\n        method: method,\r\n        successfulResponseCodes: (function() {\r\n            var codes = {};\r\n            codes[method] = [201];\r\n            return codes;\r\n        }()),\r\n        contentType: null,\r\n        customHeaders: function(id) {\r\n            var params = options.getBlobMetadata(id),\r\n                headers = qq.azure.util.getParamsAsHeaders(params);\r\n\r\n            headers[\"x-ms-blob-type\"] = \"BlockBlob\";\r\n\r\n            return headers;\r\n        },\r\n        endpointStore: endpointHandler,\r\n        allowXRequestedWithAndCacheControl: false,\r\n        cors: {\r\n            expected: true\r\n        },\r\n        log: options.log,\r\n        onComplete: function(id, xhr, isError) {\r\n            var promise = promises[id];\r\n\r\n            delete endpoints[id];\r\n            delete promises[id];\r\n\r\n            if (isError) {\r\n                promise.failure();\r\n            }\r\n            else {\r\n                promise.success();\r\n            }\r\n        }\r\n    }));\r\n\r\n    qq.extend(this, {\r\n        method: method,\r\n        upload: function(id, xhr, url, file) {\r\n            var promise = new qq.Promise();\r\n\r\n            options.log(\"Submitting Put Blob request for \" + id);\r\n\r\n            promises[id] = promise;\r\n            endpoints[id] = url;\r\n\r\n            requester.initTransport(id)\r\n                .withPayload(file)\r\n                .withHeaders({\"Content-Type\": file.type})\r\n                .send(xhr);\r\n\r\n            return promise;\r\n        }\r\n    });\r\n};\r\n","/* globals qq */\r\n/**\r\n * Implements the Put Block Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd135726.aspx.\r\n */\r\nqq.azure.PutBlock = function(o) {\r\n    \"use strict\";\r\n\r\n    var requester,\r\n        method = \"PUT\",\r\n        blockIdEntries = {},\r\n        promises = {},\r\n        options = {\r\n            log: function(str, level) {}\r\n        },\r\n        endpoints = {},\r\n        endpointHandler = {\r\n            get: function(id) {\r\n                return endpoints[id];\r\n            }\r\n        };\r\n\r\n    qq.extend(options, o);\r\n\r\n    requester = qq.extend(this, new qq.AjaxRequester({\r\n        validMethods: [method],\r\n        method: method,\r\n        successfulResponseCodes: (function() {\r\n            var codes = {};\r\n            codes[method] = [201];\r\n            return codes;\r\n        }()),\r\n        contentType: null,\r\n        endpointStore: endpointHandler,\r\n        allowXRequestedWithAndCacheControl: false,\r\n        cors: {\r\n            expected: true\r\n        },\r\n        log: options.log,\r\n        onComplete: function(id, xhr, isError) {\r\n            var promise = promises[id],\r\n                blockIdEntry = blockIdEntries[id];\r\n\r\n            delete endpoints[id];\r\n            delete promises[id];\r\n            delete blockIdEntries[id];\r\n\r\n            if (isError) {\r\n                promise.failure();\r\n            }\r\n            else {\r\n                promise.success(blockIdEntry);\r\n            }\r\n        }\r\n    }));\r\n\r\n    function createBlockId(partNum) {\r\n        var digits = 5,\r\n            zeros = new Array(digits + 1).join(\"0\"),\r\n            paddedPartNum = (zeros + partNum).slice(-digits);\r\n\r\n        return btoa(paddedPartNum);\r\n    }\r\n\r\n    qq.extend(this, {\r\n        method: method,\r\n        upload: function(id, xhr, sasUri, partNum, blob) {\r\n            var promise = new qq.Promise(),\r\n                blockId = createBlockId(partNum);\r\n\r\n            promises[id] = promise;\r\n\r\n            options.log(qq.format(\"Submitting Put Block request for {} = part {}\", id, partNum));\r\n\r\n            endpoints[id] = qq.format(\"{}&comp=block&blockid={}\", sasUri, encodeURIComponent(blockId));\r\n            blockIdEntries[id] = {part: partNum, id: blockId};\r\n\r\n            requester.initTransport(id)\r\n                .withPayload(blob)\r\n                .send(xhr);\r\n\r\n            return promise;\r\n        }\r\n    });\r\n};\r\n","/* globals qq */\r\n/**\r\n * Implements the Put Block List Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179467.aspx.\r\n */\r\nqq.azure.PutBlockList = function(o) {\r\n    \"use strict\";\r\n\r\n    var requester,\r\n        method = \"PUT\",\r\n        promises = {},\r\n        options = {\r\n            getBlobMetadata: function(id) {},\r\n            log: function(str, level) {}\r\n        },\r\n        endpoints = {},\r\n        endpointHandler = {\r\n            get: function(id) {\r\n                return endpoints[id];\r\n            }\r\n        };\r\n\r\n    qq.extend(options, o);\r\n\r\n    requester = qq.extend(this, new qq.AjaxRequester({\r\n        validMethods: [method],\r\n        method: method,\r\n        successfulResponseCodes: (function() {\r\n            var codes = {};\r\n            codes[method] = [201];\r\n            return codes;\r\n        }()),\r\n        customHeaders: function(id) {\r\n            var params = options.getBlobMetadata(id);\r\n\r\n            return qq.azure.util.getParamsAsHeaders(params);\r\n        },\r\n        contentType: \"text/plain\",\r\n        endpointStore: endpointHandler,\r\n        allowXRequestedWithAndCacheControl: false,\r\n        cors: {\r\n            expected: true\r\n        },\r\n        log: options.log,\r\n        onSend: function() {},\r\n        onComplete: function(id, xhr, isError) {\r\n            var promise = promises[id];\r\n\r\n            delete endpoints[id];\r\n            delete promises[id];\r\n\r\n            if (isError) {\r\n                promise.failure(xhr);\r\n            }\r\n            else {\r\n                promise.success(xhr);\r\n            }\r\n\r\n        }\r\n    }));\r\n\r\n    function createRequestBody(blockIdEntries) {\r\n        var doc = document.implementation.createDocument(null, \"BlockList\", null);\r\n\r\n        // If we don't sort the block ID entries by part number, the file will be combined incorrectly by Azure\r\n        blockIdEntries.sort(function(a, b) {\r\n            return a.part - b.part;\r\n        });\r\n\r\n        // Construct an XML document for each pair of etag/part values that correspond to part uploads.\r\n        qq.each(blockIdEntries, function(idx, blockIdEntry) {\r\n            var latestEl = doc.createElement(\"Latest\"),\r\n                latestTextEl = doc.createTextNode(blockIdEntry.id);\r\n\r\n            latestEl.appendChild(latestTextEl);\r\n            qq(doc).children()[0].appendChild(latestEl);\r\n        });\r\n\r\n        // Turn the resulting XML document into a string fit for transport.\r\n        return new XMLSerializer().serializeToString(doc);\r\n    }\r\n\r\n    qq.extend(this, {\r\n        method: method,\r\n        send: function(id, sasUri, blockIdEntries, fileMimeType, registerXhrCallback) {\r\n            var promise = new qq.Promise(),\r\n                blockIdsXml = createRequestBody(blockIdEntries),\r\n                xhr;\r\n\r\n            promises[id] = promise;\r\n\r\n            options.log(qq.format(\"Submitting Put Block List request for {}\", id));\r\n\r\n            endpoints[id] = qq.format(\"{}&comp=blocklist\", sasUri);\r\n\r\n            xhr = requester.initTransport(id)\r\n                .withPayload(blockIdsXml)\r\n                .withHeaders({\"x-ms-blob-content-type\": fileMimeType})\r\n                .send();\r\n            registerXhrCallback(xhr);\r\n\r\n            return promise;\r\n        }\r\n    });\r\n};\r\n","/*globals qq */\r\n/**\r\n * This defines FineUploader mode w/ support for uploading to Azure, which provides all the basic\r\n * functionality of Fine Uploader as well as code to handle uploads directly to Azure.\r\n * This module inherits all logic from UI & core mode and adds some UI-related logic\r\n * specific to the upload-to-Azure workflow.  Some inherited options and API methods have a special meaning\r\n * in the context of the Azure uploader.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.azure.FineUploader = function(o) {\r\n        var options = {\r\n            failedUploadTextDisplay: {\r\n                mode: \"custom\"\r\n            }\r\n        };\r\n\r\n        // Replace any default options with user defined ones\r\n        qq.extend(options, o, true);\r\n\r\n        // Inherit instance data from FineUploader, which should in turn inherit from azure.FineUploaderBasic.\r\n        qq.FineUploader.call(this, options, \"azure\");\r\n    };\r\n\r\n    // Inherit the API methods from FineUploaderBasicS3\r\n    qq.extend(qq.azure.FineUploader.prototype, qq.azure.FineUploaderBasic.prototype);\r\n\r\n    // Inherit public and private API methods related to UI\r\n    qq.extend(qq.azure.FineUploader.prototype, qq.uiPublicApi);\r\n    qq.extend(qq.azure.FineUploader.prototype, qq.uiPrivateApi);\r\n\r\n    // Define public & private API methods for this module.\r\n    qq.extend(qq.azure.FineUploader.prototype, {\r\n    });\r\n}());\r\n"]}